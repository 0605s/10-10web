{"version":3,"sources":["lib/constant/Components.tsx","components/home/HomeMenu.tsx","lib/constant/index.ts","pages/Home.tsx","lib/api/TokenHeader.ts","lib/api/requests/index.ts","store/TokenStore.tsx","store/UserStore.tsx","store/ToastStore.tsx","store/PostStore.tsx","store/ExperimentStore.tsx","store/LoadingStore.tsx","store/Index.tsx","lib/reg.ts","components/template/LoginTemplate.tsx","pages/Login.tsx","components/experiment/ExperimentFilterButton.tsx","components/experiment/ExperimentFilter.tsx","components/experiment/ExperimentBox.tsx","components/experiment/ExperimentList.tsx","components/experiment/ExperimentBody.tsx","components/template/PageTemplate.tsx","pages/Experiment/ExperimentMain.tsx","components/Header.tsx","components/Footer.tsx","components/experiment/ExperimentDetailInfo.tsx","components/template/ModalTemplate.tsx","components/experiment/ExperimentOnlineModal.tsx","components/experiment/ExperimentDetailOnlineBody.tsx","lib/api/Date.ts","components/experiment/ExperimentCalender.tsx","components/experiment/ExperimentOfflineModal.tsx","components/experiment/ExperimentDetailOfflineBody.tsx","pages/Experiment/ExperimentDetail.tsx","components/TabNavigation.tsx","pages/SignUp.tsx","components/mypage/MyPageBody.tsx","components/experiment/ExperimentMyBody.tsx","pages/MyPage/MyPage.tsx","components/post/PostBox.tsx","components/post/PostListBody.tsx","pages/PostList.tsx","components/post/PostDetailBody.tsx","pages/PostDetail.tsx","App.tsx","reportWebVitals.ts","lang/i18n.ts","lang/langEn.ts","lang/langKo.ts","index.tsx"],"names":["RowContainer","styled","div","window","screen","width","Math","floor","props","backgroundImg","Title","SubTitle","Content","SubContent","tabs","title","url","MenuItem","MenuImage","img","TitleLabel","HomeMenu","history","useHistory","t","useTranslation","getIcon","type","sx","fontSize","zIndex","Grid","container","direction","map","item","md","xs","onClick","push","scrollTo","top","behavior","src","process","API_BASE_URL","SNUBLUE","SNUYELLOW","SNUGRAY","languageList","statusFilterList","name","value","lingualFilterList","lang","expTypeFilterList","Banner","Home","style","background","TokenHeader","accessToken","res","this","e","console","error","params","headers","Authorization","undefined","GetRequest","axios","get","getHeader","PostRequest","body","post","TokenStore","observable","setAccessToken","token","saveAccessToken","localStorage","setItem","getAccessToken","success","getItem","data","clear","UserStore","user","setUser","sendEmail","email","validateEmail","code","response","signUp","pw","Token","status","login","getUserInfo","postUserInfo","favor","subscribe","lingual","log","deleteUser","DeleteRequest","delete","logout","ToastStore","isOpen","message","text","setIsOpen","setMessage","PostStore","newsList","colloquiumList","seminarList","currentPost","setNewsList","setColloquiumList","setSeminarList","setCurrentPost","getPostList","post_type","toUpperCase","getCurrentPost","id","ExperimentStore","experimentList","myExperimentList","experimentDetail","setExperimentList","setMyExperimentList","setExperimentDetail","experiment","getExperimentList","available","expType","length","is_full","exp_type","getExperimentDetail","getMyExperimentList","patchExperimentDetail","action","schedule","PatchRequest","patch","postExperimentComplete","LoadingStore","loading","setLoading","useStore","checkEmail","test","Container","LeftContainer","SnulingLogo","RightContainer","LoginTemplate","children","alt","Login","observer","useState","setEmail","emailError","setEmailError","setPw","pwError","setPwError","onSubmit","a","trim","result","goBack","TextField","margin","required","label","autoComplete","fullWidth","autoFocus","onChange","event","target","onKeyPress","key","Button","variant","size","ExperimentFilterButton","isSelected","FilterContainer","UpperContainer","filterVisible","LowerContainer","FilterLabel","ButtonList","Stack","ExperimentFilter","setFilterVisible","statusFilter","setStatusFilter","availableFilter","setavailableFilter","expTypeFilter","setExpTypeFilter","lingualFilter","setLingualFilter","onClickStatusButton","join","onClickAvailableButton","onClickExpTypeButton","onClickLingualButton","includes","filter","concat","marginLeft","spacing","alignItems","FormControlLabel","control","Checkbox","checked","BoxContainer","OnOffChip","Chip","LanguageChip","ParticipantChip","TopBar","BottomLabel","ExperimentBox","onClickBox","useCallback","is_joined","icon","marginTop","split","count_participants","max_participants","ExperimentList","rowSpacing","columnSpacing","ExperimentBody","getInit","useEffect","CircularProgress","PageTemplateContainer","ChildrenContainer","TitleContainer","PageTemplate","subTitle","menu","ExperimentMain","HeaderContainer","LoginButton","EmailLabel","Header","i18n","language","changeLanguage","color","username","FooterContainer","ColumnContainer","FooterLabel","Footer","InfoContainer","Row","Item","ExperimentDetailInfo","location","reward_type","reward_price","reward","duration","open","link","ModalContainer","OKButton","ModalTemplate","onClickClose","onClickOK","Modal","onClose","BoldLabel","ExperimentOnlineModal","isModalVisible","setIsModalVisible","ContentContainer","ExperimentOnlineDetailBody","useParams","setCode","isOnlineModalVisible","setIsOnlineModalVisible","onClickAssign","parseInt","onClickComplete","dangerouslySetInnerHTML","__html","content","disabled","endIcon","yyyymmddToDate","date","year","substring","month","day","Date","Number","dateToString","sYear","getFullYear","toString","sMonth","getMonth","sDate","getDate","ExperimentCalender","selectedDate","setSelectedDate","includeDates","selected","onSelect","dateToYyyymmdd","locale","ko","inline","InnerContainer","Column","ExperimentOfflineModal","schedule_available","slice","selectedTime","setSelectedTime","Divider","orientation","flexItem","RadioGroup","Radio","schedule_reserved","ExperimentDetailOfflineBody","isOfflineModalVisible","setIsOfflineModalVisible","BackButton","ExperimentDetail","startIcon","ExperimentDetailOnlineBody","MenuContainer","MenuTab","Tabs","Tab","TabNavigation","useLocation","pathname","firstPath","getLocation","centered","textColor","indicatorColor","SignUp","codeInputVisible","setCodeInputVisible","codeError","setCodeError","codeCheck","setCodeCheck","pwCheck","setPwCheck","pwCheckError","setPwCheckError","onClickCheckCode","InputProps","endAdornment","InputAdornment","position","EditButton","MyPageBody","editMode","setEditMode","profile","langList","setLangList","emailAgree","setEmailAgree","onClickEdit","IconButton","Switch","ExperimentMyBody","MyPage","replace","onClickLogout","onClickQuit","ImageContainer","LabelContainer","TagLabel","DateLabel","ReadMoreLabel","PostBox","toLowerCase","thumbnail","tags","pub_date","PostListBody","postType","postList","PostList","BannerImage","TitleBanner","PostDetailBody","PostDetail","postId","theme","createTheme","palette","primary","light","main","secondary","default","typography","fontFamily","App","checkUser","AOS","init","basename","ThemeProvider","CssBaseline","Box","flex","minHeight","path","exact","component","render","to","Snackbar","autoHideDuration","Alert","severity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","resources","en","translation","Password","quit","Experiments","seeOnlyAvailable","lists","Unpublished","Closed","korean","english","japanese","chinese","french","spanish","Online","Offline","People","colloquium","seminar","news","Confirm","address","contacts","use","initReactI18next","lng","fallbackLng","debug","defaultNS","ns","keySeparator","interpolation","escapeValue","react","useSuspense","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.733e9c81.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const RowContainer = styled.div<{ backgroundImg?: string }>`\n\twidth: 100vw;\n\tdisplay: flex;\n\tbox-sizing: border-box;\n\talign-items: center;\n\tjustify-content: center;\n\tflex-direction: column;\n\tpadding: 10px max(calc((100vw - 1100px) / 2), 5vw);\n\t/* ${window.screen.width > 1100 ? Math.floor((window.screen.width - 1100) / 2) : '5vw'}; */\n\tbackground-image: url(${(props) => props.backgroundImg});\n`;\n\nexport const Title = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 500;\n\tfont-size: 3rem;\n\tpadding: 2rem 0px;\n\t/* border-bottom: 3px solid black; */\n`;\n\nexport const SubTitle = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 400;\n\tfont-size: 2rem;\n`;\n\nexport const Content = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 400;\n\tfont-size: 1.5rem;\n`;\n\nexport const SubContent = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 300;\n\tfont-size: 1rem;\n`;\n","import { Grid } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router';\nimport styled from 'styled-components';\nimport MenuBookIcon from '@mui/icons-material/MenuBook';\nimport SchoolIcon from '@mui/icons-material/School';\nimport ScienceIcon from '@mui/icons-material/Science';\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport { Content } from 'lib/constant/Components';\n\nconst tabs: { title: string; url: string }[] = [\n\t{ title: 'news', url: '/news' },\n\t{ title: 'colloquium', url: '/colloquium' },\n\t{ title: 'seminar', url: '/seminar' },\n\t{ title: 'Experiments', url: '/experiment' },\n];\n\nconst MenuItem = styled.div`\n\twidth: 100%;\n\theight: 50vh;\n\tposition: relative;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\t/* color: white; */\n\tcursor: pointer;\n\t:hover {\n\t\tfont-size: 2rem;\n\t}\n`;\n\nconst MenuImage = styled.img`\n\twidth: 100%;\n\theight: 100%;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tfilter: grayscale(80%) opacity(0.5);\n\ttransition: all 0.3s;\n\tobject-fit: cover;\n\tfont-size: 30px;\n\t:hover {\n\t\tcursor: pointer;\n\t\tfilter: grayscale(0%) opacity(0.8);\n\t\tfont-size: 40px;\n\t}\n`;\n\nconst TitleLabel = styled.div`\n\topacity: 1;\n\tz-index: 10;\n\ttransition: all 0.3s;\n\tmargin-top: 20px;\n`;\n\nconst HomeMenu = () => {\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\tconst getIcon = (type: string) => {\n\t\tswitch (type) {\n\t\t\tcase 'news':\n\t\t\t\treturn <MenuBookIcon sx={{ fontSize: 40, zIndex: 3 }} />;\n\t\t\tcase 'colloquium':\n\t\t\t\treturn <AccountBalanceIcon sx={{ fontSize: 40, zIndex: 3 }} />;\n\t\t\tcase 'seminar':\n\t\t\t\treturn <SchoolIcon sx={{ fontSize: 40, zIndex: 3 }} />;\n\t\t\tcase 'Experiments':\n\t\t\t\treturn <ScienceIcon sx={{ fontSize: 40, zIndex: 3 }} />;\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t};\n\treturn (\n\t\t<Grid container direction=\"row\">\n\t\t\t{tabs.map((item) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Grid\n\t\t\t\t\t\titem\n\t\t\t\t\t\tmd={3}\n\t\t\t\t\t\txs={6}\n\t\t\t\t\t\tkey={item.title}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\thistory.push(item.url);\n\t\t\t\t\t\t\twindow.scrollTo({ top: 0, behavior: 'smooth' });\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuItem>\n\t\t\t\t\t\t\t<MenuImage\n\t\t\t\t\t\t\t\tsrc={`${process.env.PUBLIC_URL}/img/default_${item.title}.jpg`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{getIcon(item.title)}\n\t\t\t\t\t\t\t<TitleLabel>{t(item.title)}</TitleLabel>\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t</Grid>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Grid>\n\t);\n};\n\nexport default HomeMenu;\n","import { StatusType } from 'types/experiment';\n\nexport const API_BASE_URL = 'http://ec2-3-36-103-144.ap-northeast-2.compute.amazonaws.com/api/';\n\nexport const SNUBLUE = '#0f4c81';\nexport const SNULIGHTBLUE = '#8787b7';\nexport const SNUYELLOW = '#dcdab2';\nexport const SNULIGHTYELLOW = '#f8f7ef';\nexport const SNUGRAY = '#666666';\nexport const SNUSILVER = '#D2D2D2';\n\nexport const languageList: string[] = [\n\t'korean',\n\t'english',\n\t'japanese',\n\t'chinese',\n\t'french',\n\t'spanish',\n];\n\nexport const statusFilterList: { name: string; value: StatusType }[] = [\n\t{\n\t\tname: 'In Progress',\n\t\tvalue: 'P',\n\t},\n\t{\n\t\tname: 'Unpublished',\n\t\tvalue: 'U',\n\t},\n\t{\n\t\tname: 'Closed',\n\t\tvalue: 'C',\n\t},\n];\n\nexport const lingualFilterList: { name: string; value: string }[] = languageList.map((lang) => {\n\treturn {\n\t\tname: lang,\n\t\tvalue: lang,\n\t};\n});\n\nexport const expTypeFilterList: { name: string; value: 'ON' | 'OFF' }[] = [\n\t{\n\t\tname: 'Online',\n\t\tvalue: 'ON',\n\t},\n\t{\n\t\tname: 'Offline',\n\t\tvalue: 'OFF',\n\t},\n];\n","import styled from 'styled-components';\nimport { RowContainer, Title } from 'lib/constant/Components';\nimport HomeMenu from 'components/home/HomeMenu';\nimport { SNUBLUE, SNUGRAY, SNULIGHTBLUE } from 'lib/constant';\n\nconst Banner = styled.div`\n\twidth: 100vw;\n\theight: 50vh;\n\t/* background-size: cover;k */\n\t/* background-image: linear-gradient(SNUBLUE, pink); */\n\tcolor: white;\n\t/* background-image: url('${process.env.PUBLIC_URL}/img/snu_image_1.jpeg'); */\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`;\n\nconst Home = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Banner style={{ background: `linear-gradient(${SNUBLUE}, #061C30` }}>\n\t\t\t\t<Title>서울대학교 언어학과 10-10 프로젝트</Title>\n\t\t\t</Banner>\n\t\t\t<HomeMenu />\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","class TokenHeader {\n\tstatic accessToken = '';\n\n\tstatic setAccessToken(accessToken: string) {\n\t\tlet res = false;\n\t\ttry {\n\t\t\tthis.accessToken = accessToken;\n\t\t\tres = true;\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn res;\n\t}\n\n\tstatic getHeader(params?: object) {\n\t\treturn {\n\t\t\theaders: {\n\t\t\t\tAuthorization: this.accessToken === '' ? undefined : `Token ${this.accessToken}`,\n\t\t\t},\n\t\t\tparams,\n\t\t};\n\t}\n}\n\nexport default TokenHeader;\n","import axios from 'axios';\nimport { API_BASE_URL } from '../../constant';\nimport TokenHeader from '../TokenHeader';\n\nexport const GetRequest = <T = any>(url: string, params?: object) =>\n\taxios.get<T>(`${API_BASE_URL}${url}`, TokenHeader.getHeader(params));\nexport const PostRequest = <T = any>(url: string, body?: object) =>\n\taxios.post<T>(`${API_BASE_URL}${url}`, body, TokenHeader.getHeader());\nexport const PutRequest = <T = any>(url: string, body?: object, params?: object) =>\n\taxios.put<T>(`${API_BASE_URL}${url}`, body, TokenHeader.getHeader(params));\nexport const DeleteRequest = <T = any>(url: string, params?: object) =>\n\taxios.delete<T>(`${API_BASE_URL}${url}`, TokenHeader.getHeader(params));\nexport const PatchRequest = <T = any>(url: string, body?: object, params?: object) =>\n\taxios.patch<T>(`${API_BASE_URL}${url}`, body, TokenHeader.getHeader(params));\n","import { observable } from 'mobx';\n\nconst TokenStore = observable({\n\taccessToken: '' as string,\n\tsetAccessToken(token: string) {\n\t\tthis.accessToken = token;\n\t},\n\tsaveAccessToken(accessToken: string) {\n\t\ttry {\n\t\t\twindow.localStorage.setItem('ACCESS_TOKEN', accessToken);\n\t\t} catch (e) {\n\t\t\tconsole.error('========= setAccessToken Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t},\n\n\tasync getAccessToken() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst data = await window.localStorage.getItem('ACCESS_TOKEN');\n\t\t\tif (data && data !== null) this.setAccessToken(data);\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getAccessToken Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync clear() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tawait window.localStorage.clear();\n\t\t\tthis.setAccessToken('');\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= clear Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n});\n\nexport default TokenStore;\n","import { DeleteRequest, GetRequest, PostRequest } from 'lib/api/requests';\nimport TokenHeader from 'lib/api/TokenHeader';\nimport { observable } from 'mobx';\nimport { TokenType } from 'types/token';\nimport { UserType } from 'types/user';\nimport TokenStore from './TokenStore';\n\nconst UserStore = observable({\n\tuser: null as UserType | null,\n\tsetUser(user: UserType | null) {\n\t\tthis.user = user;\n\t},\n\n\tasync sendEmail(email: string) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await PostRequest('signup/validate-send/', {\n\t\t\t\temail,\n\t\t\t});\n\t\t\tif (response) success = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= SendEmail Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync validateEmail(email: string, code: string) {\n\t\tlet success = false;\n\t\tlet error = '';\n\t\ttry {\n\t\t\tconst response = await PostRequest('signup/validate/', {\n\t\t\t\temail,\n\t\t\t\tcode,\n\t\t\t});\n\t\t\terror = response.data.error;\n\t\t\tif (response) success = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= ValidateEmail Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn { success, error };\n\t},\n\n\tasync signUp(email: string, pw: string) {\n\t\tlet success = false;\n\t\tlet code = 200;\n\t\tlet token = '';\n\t\ttry {\n\t\t\tconst response = await PostRequest<TokenType>('signup/', {\n\t\t\t\temail,\n\t\t\t\tpw,\n\t\t\t});\n\t\t\ttoken = response.data.Token;\n\t\t\tcode = response.status;\n\t\t\tsuccess = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= SignUp Error =========');\n\t\t\tcode = e.response.status;\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn { success, code, token };\n\t},\n\n\tasync login(email: string, pw: string) {\n\t\tlet success = false;\n\t\tlet code = 200;\n\t\tlet token = '';\n\t\ttry {\n\t\t\tconst response = await PostRequest<TokenType>('login/', {\n\t\t\t\temail,\n\t\t\t\tpw,\n\t\t\t});\n\t\t\tif (response.status === 200) {\n\t\t\t\ttoken = response.data.Token;\n\t\t\t\tcode = response.status;\n\t\t\t\tsuccess = true;\n\t\t\t\tawait TokenStore.setAccessToken(response.data.Token);\n\t\t\t\tawait TokenStore.saveAccessToken(response.data.Token);\n\t\t\t\tconst res = await TokenHeader.setAccessToken(response.data.Token);\n\t\t\t\tif (res) this.getUserInfo();\n\t\t\t}\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= login Error =========');\n\t\t\tcode = e.response.status;\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn { success, code, token };\n\t},\n\n\tasync getUserInfo() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await GetRequest<UserType>('mypage/');\n\t\t\tthis.setUser(response.data);\n\t\t\tsuccess = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= getUserInfo Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync postUserInfo(favor: 'ONLINE' | 'OFFLINE', subscribe: boolean, lingual: string) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconsole.log(favor, subscribe, lingual);\n\t\t\tconst response = await PostRequest<UserType>('mypage/', {\n\t\t\t\tfavor,\n\t\t\t\tsubscribe,\n\t\t\t\tlingual,\n\t\t\t});\n\t\t\tthis.setUser(response.data);\n\t\t\tsuccess = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= postUserInfo Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync deleteUser() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await DeleteRequest('mypage/');\n\t\t\tif (response.status === 200) {\n\t\t\t\tthis.setUser(null);\n\t\t\t\tTokenStore.clear();\n\t\t\t\tsuccess = true;\n\t\t\t}\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= deleteUser Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync logout() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tthis.setUser(null);\n\t\t\tTokenStore.clear();\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= signOutUser Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n});\n\nexport default UserStore;\n","import { observable } from 'mobx';\n\nconst ToastStore = observable({\n\tisOpen: false as boolean,\n\tmessage: { type: 'error', text: '' } as {\n\t\ttype: 'error' | 'warning' | 'info' | 'success';\n\t\ttext: string;\n\t},\n\n\tsetIsOpen(isOpen: boolean) {\n\t\tthis.isOpen = isOpen;\n\t},\n\tsetMessage(type: 'error' | 'warning' | 'info' | 'success', text: string) {\n\t\tthis.message.text = text;\n\t\tthis.message.type = type;\n\t\tthis.setIsOpen(true);\n\t},\n});\n\nexport default ToastStore;\n","import { GetRequest } from 'lib/api/requests';\nimport { observable } from 'mobx';\nimport { PostType } from 'types/post';\n\nconst PostStore = observable({\n\tnewsList: [] as PostType[],\n\tcolloquiumList: [] as PostType[],\n\tseminarList: [] as PostType[],\n\tcurrentPost: {} as PostType | undefined,\n\tsetNewsList(newsList: PostType[]) {\n\t\tthis.newsList = newsList;\n\t},\n\tsetColloquiumList(colloquiumList: PostType[]) {\n\t\tthis.colloquiumList = colloquiumList;\n\t},\n\tsetSeminarList(seminarList: PostType[]) {\n\t\tthis.seminarList = seminarList;\n\t},\n\tsetCurrentPost(currentPost: PostType | undefined) {\n\t\tthis.currentPost = currentPost;\n\t},\n\n\tasync getPostList(type: 'seminar' | 'colloquium' | 'news') {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await GetRequest(`posts/`, { post_type: type.toUpperCase() });\n\t\t\tswitch (type) {\n\t\t\t\tcase 'news':\n\t\t\t\t\tthis.setNewsList(response.data);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'colloquium':\n\t\t\t\t\tthis.setColloquiumList(response.data);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'seminar':\n\t\t\t\t\tthis.setSeminarList(response.data);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getPostList Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync getCurrentPost(id: number) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await GetRequest(`posts/${id}/`);\n\t\t\tthis.setCurrentPost(response.data);\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getPostList Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n});\n\nexport default PostStore;\n","import { GetRequest, PatchRequest, PostRequest } from 'lib/api/requests';\nimport { observable } from 'mobx';\nimport { ExperimentDetailType, ExperimentType, StatusType } from 'types/experiment';\n\nconst ExperimentStore = observable({\n\texperimentList: [] as ExperimentType[],\n\tmyExperimentList: [] as ExperimentType[],\n\texperimentDetail: {} as ExperimentDetailType | undefined,\n\tsetExperimentList(experimentList: ExperimentType[]) {\n\t\tthis.experimentList = experimentList;\n\t},\n\tsetMyExperimentList(experimentList: ExperimentType[]) {\n\t\tthis.myExperimentList = experimentList;\n\t},\n\tsetExperimentDetail(experiment: ExperimentDetailType | undefined) {\n\t\tthis.experimentDetail = experiment;\n\t},\n\n\tasync getExperimentList(\n\t\tlingual?: string,\n\t\tstatus?: StatusType,\n\t\tavailable?: boolean,\n\t\texpType?: 'ON' | 'OFF',\n\t) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tthis.setExperimentList([]);\n\t\t\tconst response = await GetRequest('experiments/', {\n\t\t\t\tlingual: lingual && lingual.length > 0 ? lingual : undefined,\n\t\t\t\tstatus,\n\t\t\t\tis_full: available ? 'no' : undefined,\n\t\t\t\texp_type: expType,\n\t\t\t});\n\t\t\tthis.setExperimentList(response.data);\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getExperimentList Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync getExperimentDetail(id: number) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tthis.setExperimentDetail(undefined);\n\t\t\tconst response = await GetRequest<ExperimentDetailType>(`experiments/${id}/`);\n\t\t\tthis.setExperimentDetail(response.data);\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getExperimentDetail Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync getMyExperimentList() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await GetRequest(`experiments/my/`);\n\t\t\tthis.setMyExperimentList(response.data);\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.log('========= getMyExperimentDetail Error =========');\n\t\t\tconsole.log(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync patchExperimentDetail(id: number, action: 'join' | 'unjoin', schedule?: string) {\n\t\tlet success = false;\n\t\tlet code = '';\n\t\ttry {\n\t\t\tconst response = await PatchRequest(`experiments/${id}/`, {\n\t\t\t\taction,\n\t\t\t\tschedule,\n\t\t\t});\n\t\t\tcode = response.data.code;\n\t\t\tsuccess = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= patchExperimentDetail Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn { success, code };\n\t},\n\n\tasync postExperimentComplete(id: number) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await PostRequest(`experiments/${id}/complete/`);\n\t\t\tif (response) success = true;\n\t\t} catch (e) {\n\t\t\tconsole.log('========= postExperimentComplete Error =========');\n\t\t\tconsole.log(e);\n\t\t}\n\t\treturn success;\n\t},\n});\n\nexport default ExperimentStore;\n","import { observable } from 'mobx';\n\nconst LoadingStore = observable({\n\tloading: false as boolean,\n\tsetLoading(loading: boolean) {\n\t\tthis.loading = loading;\n\t},\n});\n\nexport default LoadingStore;\n","import UserStore from './UserStore';\nimport TokenStore from './TokenStore';\nimport ToastStore from './ToastStore';\nimport PostStore from './PostStore';\nimport ExperimentStore from './ExperimentStore';\nimport LoadingStore from './LoadingStore';\n\nconst useStore = () => {\n\treturn {\n\t\tUserStore,\n\t\tTokenStore,\n\t\tToastStore,\n\t\tPostStore,\n\t\tExperimentStore,\n\t\tLoadingStore,\n\t};\n};\n\nexport default useStore;\n","export const checkEmail = (text: string) => {\n\tconst regEmail = /^([0-9a-zA-Z_\\.-]+)@([0-9a-zA-Z_-]+)(\\.[0-9a-zA-Z_-]+){1,2}$/;\n\treturn regEmail.test(text);\n};\n","import { RowContainer } from 'lib/constant/Components';\nimport { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled(RowContainer)`\n\tflex: 1;\n\tflex-direction: row;\n\talign-items: center;\n\tjustify-content: center;\n\theight: 70vh;\n\t/* background-image: url('${process.env.PUBLIC_URL}/img/snu_image_1.jpeg'); */\n`;\n\nconst LeftContainer = styled.div`\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n`;\n\nconst SnulingLogo = styled.img`\n\twidth: 300px;\n\theight: auto;\n`;\n\nconst RightContainer = styled.div`\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding-left: 40px;\n`;\n/* border: 1px solid ${SNUBLUE}; */\n\ninterface Props {\n\tchildren: ReactNode;\n}\n\nconst LoginTemplate = ({ children }: Props) => {\n\treturn (\n\t\t<Container>\n\t\t\t<LeftContainer>\n\t\t\t\t<SnulingLogo\n\t\t\t\t\tsrc={`${process.env.PUBLIC_URL}/img/snuling_logo.png`}\n\t\t\t\t\talt=\"snuling_logo\"\n\t\t\t\t/>\n\t\t\t</LeftContainer>\n\t\t\t<RightContainer>{children}</RightContainer>\n\t\t</Container>\n\t);\n};\n\nexport default LoginTemplate;\n","import styled from 'styled-components';\nimport React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { useHistory } from 'react-router';\nimport useStore from 'store/Index';\nimport { useTranslation } from 'react-i18next';\nimport { TextField, Button } from '@mui/material';\nimport { checkEmail } from 'lib/reg';\nimport LoginTemplate from 'components/template/LoginTemplate';\nimport { SubTitle } from 'lib/constant/Components';\n\nconst Login = observer(() => {\n\tconst { UserStore, ToastStore } = useStore();\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\tconst [email, setEmail] = useState<string>('');\n\tconst [emailError, setEmailError] = useState<boolean>(false);\n\tconst [pw, setPw] = useState<string>('');\n\tconst [pwError, setPwError] = useState<boolean>(false);\n\n\tconst onSubmit = async () => {\n\t\tif (email.trim().length === 0) {\n\t\t\tToastStore.setMessage('warning', '이메일을 입력해주세요');\n\t\t\tsetEmailError(true);\n\t\t} else if (!checkEmail(email.trim())) {\n\t\t\tToastStore.setMessage('warning', '올바른 형식의 이메일을 입력해주세요');\n\t\t\tsetEmailError(true);\n\t\t} else if (pw.trim().length === 0) {\n\t\t\tToastStore.setMessage('warning', '비밀번호를 입력하세요');\n\t\t\tsetPwError(true);\n\t\t} else {\n\t\t\tconst result = await UserStore.login(email, pw);\n\t\t\tif (!result || result.code >= 500) {\n\t\t\t\tToastStore.setMessage('error', '서버 오류');\n\t\t\t} else if (result && result.code >= 401 && result) {\n\t\t\t\tToastStore.setMessage('error', '존재하지 않는 계정이거나 비밀번호가 틀립니다');\n\t\t\t\tsetEmailError(true);\n\t\t\t\tsetPwError(true);\n\t\t\t} else {\n\t\t\t\tToastStore.setMessage('success', `${email}로 로그인 되었습니다.`);\n\t\t\t\thistory.goBack();\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<LoginTemplate>\n\t\t\t<SubTitle>{t('login')}</SubTitle>\n\t\t\t<TextField\n\t\t\t\tmargin=\"normal\"\n\t\t\t\trequired\n\t\t\t\tid=\"email\"\n\t\t\t\tlabel={t('Email Address')}\n\t\t\t\tname=\"email\"\n\t\t\t\tautoComplete=\"email\"\n\t\t\t\tfullWidth\n\t\t\t\tautoFocus\n\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\tsetEmail(event.target.value)\n\t\t\t\t}\n\t\t\t\terror={emailError}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tmargin=\"normal\"\n\t\t\t\trequired\n\t\t\t\tname=\"password\"\n\t\t\t\tlabel={t('Password')}\n\t\t\t\ttype=\"password\"\n\t\t\t\tid=\"password\"\n\t\t\t\tfullWidth\n\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) => setPw(event.target.value)}\n\t\t\t\terror={pwError}\n\t\t\t\tonKeyPress={(e) => {\n\t\t\t\t\tif (e.key === 'Enter') onSubmit();\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Button variant=\"text\" size=\"medium\" onClick={() => history.push('/signup')}>\n\t\t\t\t계정이 없으신가요?\n\t\t\t</Button>\n\t\t\t<Button type=\"submit\" size=\"medium\" variant=\"contained\" onClick={onSubmit} fullWidth>\n\t\t\t\t{t('login')}\n\t\t\t</Button>\n\t\t</LoginTemplate>\n\t);\n});\n\nexport default Login;\n","import { Button } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\n\ninterface Props {\n\tname: string;\n\tisSelected: boolean;\n\tonClick: () => void;\n}\n\nconst ExperimentFilterButton = ({ name, isSelected, onClick }: Props) => {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<Button variant={isSelected ? 'contained' : 'outlined'} onClick={onClick}>\n\t\t\t{t(name)}\n\t\t</Button>\n\t);\n};\n\nexport default ExperimentFilterButton;\n","import styled from 'styled-components';\nimport { FormControlLabel, Stack, Checkbox } from '@mui/material';\nimport { expTypeFilterList, lingualFilterList, statusFilterList } from 'lib/constant';\nimport { useState } from 'react';\nimport useStore from 'store/Index';\nimport { observer } from 'mobx-react';\nimport { StatusType } from 'types/experiment';\nimport { useTranslation } from 'react-i18next';\nimport { SubContent } from 'lib/constant/Components';\nimport TuneIcon from '@mui/icons-material/Tune';\nimport ExperimentFilterButton from './ExperimentFilterButton';\n\nconst FilterContainer = styled.div`\n\twidth: 100%;\n\tmargin-bottom: 30px;\n\tborder-radius: 10px;\n\tbox-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);\n`;\n\nconst UpperContainer = styled.div<{ filterVisible: boolean }>`\n\twidth: 100%;\n\theight: 40px;\n\tborder-radius: ${(props) => (props.filterVisible ? '10px 10px 0px 0px' : '10px')};\n\tbackground-color: #d5d5d5;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tcursor: pointer;\n`;\n\nconst LowerContainer = styled.div`\n\twidth: 100%;\n\tpadding: 20px;\n\tborder-radius: 10px;\n\tbackground-color: #ffffff;\n\ttransition: height 0.25s linear;\n`;\n\nconst FilterLabel = styled(SubContent)`\n\twidth: 20%;\n\ttext-align: right;\n\tfont-weight: 500;\n\tpadding-right: 20px;\n\tborder-right: 0.5px solid black;\n`;\n\nconst ButtonList = styled(Stack)`\n\tmargin: 20px 0px;\n`;\n\nconst ExperimentFilter = observer(() => {\n\tconst { ExperimentStore, LoadingStore } = useStore();\n\tconst { t } = useTranslation();\n\tconst [filterVisible, setFilterVisible] = useState<boolean>(false);\n\tconst [statusFilter, setStatusFilter] = useState<StatusType | undefined>(undefined);\n\tconst [availableFilter, setavailableFilter] = useState<boolean>(false);\n\tconst [expTypeFilter, setExpTypeFilter] = useState<'ON' | 'OFF' | undefined>(undefined);\n\tconst [lingualFilter, setLingualFilter] = useState<string[]>([]);\n\n\tconst onClickStatusButton = async (value: StatusType) => {\n\t\tLoadingStore.setLoading(true);\n\t\tsetStatusFilter(statusFilter === value ? undefined : value);\n\t\tlet res = await ExperimentStore.getExperimentList(\n\t\t\tlingualFilter.join(','),\n\t\t\tstatusFilter === value ? undefined : value,\n\t\t\tavailableFilter,\n\t\t\texpTypeFilter,\n\t\t);\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\tconst onClickAvailableButton = async (value: boolean) => {\n\t\tLoadingStore.setLoading(true);\n\t\tsetavailableFilter(value);\n\t\tlet res = await ExperimentStore.getExperimentList(\n\t\t\tlingualFilter.join(','),\n\t\t\tstatusFilter,\n\t\t\tvalue,\n\t\t\texpTypeFilter,\n\t\t);\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\tconst onClickExpTypeButton = async (value: 'ON' | 'OFF') => {\n\t\tLoadingStore.setLoading(true);\n\t\tsetExpTypeFilter(expTypeFilter === value ? undefined : value);\n\t\tlet res = await ExperimentStore.getExperimentList(\n\t\t\tlingualFilter.join(','),\n\t\t\tstatusFilter,\n\t\t\tavailableFilter,\n\t\t\texpTypeFilter === value ? undefined : value,\n\t\t);\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\tconst onClickLingualButton = async (value: string) => {\n\t\tLoadingStore.setLoading(true);\n\t\tsetLingualFilter(\n\t\t\tlingualFilter.includes(value)\n\t\t\t\t? lingualFilter.filter((e) => e !== value)\n\t\t\t\t: lingualFilter.concat(value),\n\t\t);\n\t\tlet res = await ExperimentStore.getExperimentList(\n\t\t\tlingualFilter.includes(value)\n\t\t\t\t? lingualFilter.filter((e) => e !== value).join(',')\n\t\t\t\t: lingualFilter.concat(value).join(','),\n\t\t\tstatusFilter,\n\t\t\tavailableFilter,\n\t\t\texpTypeFilter,\n\t\t);\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\treturn (\n\t\t<FilterContainer>\n\t\t\t<UpperContainer\n\t\t\t\tonClick={() => setFilterVisible(!filterVisible)}\n\t\t\t\tfilterVisible={filterVisible}\n\t\t\t>\n\t\t\t\t{filterVisible ? '필터 숨기기' : '필터 보기'}\n\t\t\t\t<TuneIcon sx={{ marginLeft: '10px' }} />\n\t\t\t</UpperContainer>\n\t\t\t{filterVisible && (\n\t\t\t\t<LowerContainer>\n\t\t\t\t\t<ButtonList spacing={2} direction=\"row\" alignItems=\"center\">\n\t\t\t\t\t\t<FilterLabel>{t('status')}</FilterLabel>\n\t\t\t\t\t\t{statusFilterList.map((item) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ExperimentFilterButton\n\t\t\t\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t\t\t\t\tisSelected={statusFilter === item.value}\n\t\t\t\t\t\t\t\t\tonClick={() => onClickStatusButton(item.value)}\n\t\t\t\t\t\t\t\t\tkey={item.name}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ButtonList>\n\t\t\t\t\t<ButtonList spacing={2} direction=\"row\" alignItems=\"center\">\n\t\t\t\t\t\t<FilterLabel>{t('language')}</FilterLabel>\n\t\t\t\t\t\t{lingualFilterList.map((item) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ExperimentFilterButton\n\t\t\t\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t\t\t\t\tisSelected={lingualFilter.includes(item.value)}\n\t\t\t\t\t\t\t\t\tonClick={() => onClickLingualButton(item.value)}\n\t\t\t\t\t\t\t\t\tkey={item.name}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ButtonList>\n\t\t\t\t\t<ButtonList spacing={2} direction=\"row\" alignItems=\"center\">\n\t\t\t\t\t\t<FilterLabel>{t('experiment type')}</FilterLabel>\n\t\t\t\t\t\t{expTypeFilterList.map((item) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ExperimentFilterButton\n\t\t\t\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t\t\t\t\tisSelected={expTypeFilter === item.value}\n\t\t\t\t\t\t\t\t\tonClick={() => onClickExpTypeButton(item.value)}\n\t\t\t\t\t\t\t\t\tkey={item.name}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ButtonList>\n\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tchecked={availableFilter === true}\n\t\t\t\t\t\t\t\tonClick={() => onClickAvailableButton(!availableFilter)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlabel={t('seeOnlyAvailable')}\n\t\t\t\t\t\tsx={{ marginLeft: '20%' }}\n\t\t\t\t\t/>\n\t\t\t\t</LowerContainer>\n\t\t\t)}\n\t\t</FilterContainer>\n\t);\n});\n\nexport default ExperimentFilter;\n","import { ExperimentType } from 'types/experiment';\nimport styled from 'styled-components';\nimport { Content, SubContent } from 'lib/constant/Components';\nimport { useHistory } from 'react-router';\nimport { useCallback } from 'react';\nimport { Chip, Stack } from '@mui/material';\nimport PublicIcon from '@mui/icons-material/Public';\nimport CloudOffIcon from '@mui/icons-material/CloudOff';\nimport { SNUBLUE, SNUGRAY } from 'lib/constant';\nimport PeopleIcon from '@mui/icons-material/People';\n\nconst BoxContainer = styled.div<{ type: string }>`\n\tposition: relative;\n\twidth: 100%;\n\theight: 350px;\n\tpadding: 0px 20px;\n\tborder-radius: 10px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tbox-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);\n\ttransition: all 0.3s;\n\tcursor: pointer;\n\tbackground-color: white;\n\t:hover {\n\t\tcolor: ${(props) =>\n\t\t\tprops.type === 'joined' ? SNUBLUE : props.type === 'available' ? 'green' : SNUGRAY};\n\t\tbox-shadow: 0 6px 35px rgba(24, 25, 31, 0.15);\n\t\ttransform: translateY(-4px);\n\t}\n`;\n\nconst OnOffChip = styled(Chip)`\n\tfont-size: 1rem;\n\tfont-weight: 400;\n\tposition: absolute;\n\ttop: 20px;\n\tleft: 20px;\n\tz-index: 2;\n`;\n\nconst TitleLabel = styled(Content)`\n\tmargin-top: 120px;\n\theight: 100px;\n`;\n\nconst LanguageChip = styled(Chip)``;\n\nconst ParticipantChip = styled(Chip)`\n\tposition: absolute;\n\tbottom: 30px;\n\tleft: 20px;\n\twidth: 50%;\n`;\n\nconst TopBar = styled.div<{ type: string }>`\n\tposition: absolute;\n\tbottom: 0px;\n\tleft: 0px;\n\twidth: 100%;\n\theight: 10px;\n\tborder-radius: 0px 0px 10px 10px;\n\tbackground-color: ${(props) =>\n\t\tprops.type === 'joined' ? SNUBLUE : props.type === 'available' ? 'green' : SNUGRAY}; ;\n`;\n\nconst BottomLabel = styled.div<{ type: string }>`\n\tposition: absolute;\n\tbottom: 35px;\n\tright: 20px;\n\tcolor: ${(props) =>\n\t\tprops.type === 'joined' ? SNUBLUE : props.type === 'available' ? 'green' : SNUGRAY};\n\ttext-align: right;\n`;\n\ninterface Props {\n\titem: ExperimentType;\n}\n\nconst ExperimentBox = ({ item }: Props) => {\n\tconst history = useHistory();\n\tconst onClickBox = useCallback(() => {\n\t\thistory.push(`/experiment/${item.id}`);\n\t\twindow.scrollTo({ top: 0, behavior: 'smooth' });\n\t}, []);\n\n\tconst type: string = item.is_joined\n\t\t? 'joined'\n\t\t: item.status === 'P' && !item.is_full\n\t\t? 'available'\n\t\t: item.status === 'C'\n\t\t? 'closed'\n\t\t: item.status === 'U'\n\t\t? 'unpublised'\n\t\t: 'unavailable';\n\n\treturn (\n\t\t<BoxContainer onClick={onClickBox} data-aos=\"fade-up\" type={type}>\n\t\t\t<TopBar type={type} />\n\t\t\t<TitleLabel>{item.title}</TitleLabel>\n\t\t\t{item.exp_type === 'ON' ? (\n\t\t\t\t<OnOffChip icon={<PublicIcon />} label=\"ONLINE\" />\n\t\t\t) : (\n\t\t\t\t<OnOffChip icon={<CloudOffIcon />} label=\"OFFLINE\" />\n\t\t\t)}\n\t\t\t<Stack direction=\"row\" spacing={1} style={{ marginTop: 20 }}>\n\t\t\t\t{item.lingual &&\n\t\t\t\t\titem.lingual.split(',').map((lang) => {\n\t\t\t\t\t\treturn <LanguageChip label={`${lang}`} key={lang} variant=\"filled\" />;\n\t\t\t\t\t})}\n\t\t\t</Stack>\n\t\t\t<ParticipantChip\n\t\t\t\ticon={<PeopleIcon />}\n\t\t\t\tlabel={`${item.count_participants}명 / ${item.max_participants}명`}\n\t\t\t\tvariant=\"outlined\"\n\t\t\t/>\n\t\t\t<BottomLabel type={type}>{type}</BottomLabel>\n\t\t</BoxContainer>\n\t);\n};\n\nexport default ExperimentBox;\n","import { Grid } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport useStore from 'store/Index';\nimport ExperimentBox from './ExperimentBox';\n\nconst ExperimentList = observer(() => {\n\tconst { ExperimentStore } = useStore();\n\n\treturn (\n\t\t<Grid container rowSpacing={2} columnSpacing={3} alignItems=\"center\">\n\t\t\t{ExperimentStore.experimentList.map((item) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Grid item key={item.title} xs={6} md={4}>\n\t\t\t\t\t\t<ExperimentBox item={item} key={item.title} />\n\t\t\t\t\t</Grid>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Grid>\n\t);\n});\n\nexport default ExperimentList;\n","import { CircularProgress } from '@mui/material';\nimport { Content } from 'lib/constant/Components';\nimport { observer } from 'mobx-react';\nimport { useEffect } from 'react';\nimport useStore from 'store/Index';\nimport ExperimentFilter from './ExperimentFilter';\nimport ExperimentList from './ExperimentList';\n\nconst ExperimentBody = observer(() => {\n\tconst { ExperimentStore, LoadingStore } = useStore();\n\n\tconst getInit = async () => {\n\t\tLoadingStore.setLoading(true);\n\t\tconst res = await ExperimentStore.getExperimentList();\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\tuseEffect(() => {\n\t\tgetInit();\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<ExperimentFilter />\n\t\t\t{LoadingStore.loading ? (\n\t\t\t\t<CircularProgress />\n\t\t\t) : ExperimentStore.experimentList.length ? (\n\t\t\t\t<ExperimentList />\n\t\t\t) : (\n\t\t\t\t<Content>조건에 맞는 실험이 없습니다.</Content>\n\t\t\t)}\n\t\t</>\n\t);\n});\n\nexport default ExperimentBody;\n","import { SNUBLUE, SNUGRAY } from 'lib/constant';\nimport { Content, SubTitle } from 'lib/constant/Components';\nimport { ReactNode } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport LeftMenuTemplate from './LeftMenuTemplate';\n\nconst PageTemplateContainer = styled.div`\n\tflex: 1;\n\twidth: 100vw;\n\tmin-height: 100vh;\n\tdisplay: flex;\n\tflex-direction: column;\n\tbox-sizing: border-box;\n\tbackground-color: #fafafa;\n\tz-index: 10;\n`;\n\nconst ChildrenContainer = styled.div`\n\tflex: 1;\n\tpadding: 0px 2vw;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tpadding: 50px max(calc((100vw - 1100px) / 2), 5vw);\n\tbox-sizing: content-box;\n`;\n\nconst TitleContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\t/* height: 150px; */\n\tpadding: 20px max(calc((100vw - 1100px) / 2), 5vw);\n`;\n\nconst TitleLabel = styled(SubTitle)`\n\twidth: fit-content;\n\ttext-align: center;\n\tpadding: 20px;\n\tborder-bottom: 5px solid ${SNUBLUE};\n\tfont-size: 2.5rem;\n`;\n\n// const SubTitleLabel = styled(Content)`\n// \twidth: fit-content;\n// \ttext-align: center;\n// \tmargin-top: 30px;\n// \tcolor: ${SNUGRAY};\n// \tfont-size: 1.3rem;\n// `;\n\ninterface Props {\n\ttitle?: string;\n\tsubTitle?: string;\n\tmenu?: { title: string; domain: string }[];\n\tchildren?: ReactNode;\n}\n\nconst PageTemplate = ({ title, subTitle, menu, children }: Props) => {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<PageTemplateContainer>\n\t\t\t{/* {menu && <LeftMenuTemplate menu={menu} />} */}\n\t\t\t{title && (\n\t\t\t\t<TitleContainer>\n\t\t\t\t\t<TitleLabel>{t(title)}</TitleLabel>\n\t\t\t\t\t{/* {subTitle && <SubTitleLabel>{t(subTitle)}</SubTitleLabel>} */}\n\t\t\t\t</TitleContainer>\n\t\t\t)}\n\t\t\t<ChildrenContainer data-aos=\"fade-up\">{children}</ChildrenContainer>\n\t\t</PageTemplateContainer>\n\t);\n};\n\nexport default PageTemplate;\n","import ExperimentBody from 'components/experiment/ExperimentBody';\nimport PageTemplate from 'components/template/PageTemplate';\n\nconst ExperimentMain = () => {\n\treturn (\n\t\t<PageTemplate title=\"Experiments\" subTitle=\"언어학 실험에 직접 참여해주세요\">\n\t\t\t<ExperimentBody />\n\t\t</PageTemplate>\n\t);\n};\n\nexport default ExperimentMain;\n","import styled from 'styled-components';\nimport Button from '@mui/material/Button';\nimport { useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { Stack } from '@mui/material';\nimport useStore from 'store/Index';\nimport { observer } from 'mobx-react';\nimport { SubContent } from 'lib/constant/Components';\nimport { SNUBLUE } from 'lib/constant';\n\nconst HeaderContainer = styled.div`\n\twidth: 100vw;\n\theight: 30px;\n\tbox-sizing: border-box;\n\tpadding: 10px max(calc((100vw - 1100px) / 2), 5vw);\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tjustify-content: flex-end;\n\tbackground-color: ${SNUBLUE};\n\tcolor: white;\n`;\n\nconst LoginButton = styled(Button)`\n\tcolor: white;\n`;\n\nconst EmailLabel = styled(SubContent)`\n\tfont-size: 0.8rem;\n\tfont-weight: 500;\n`;\n\nconst Header = observer(() => {\n\tconst history = useHistory();\n\tconst { i18n, t } = useTranslation();\n\tconst { UserStore } = useStore();\n\n\tconst onClickChangeLanguage = () => {\n\t\tif (i18n.language === 'ko') i18n.changeLanguage('en');\n\t\telse if (i18n.language === 'en') i18n.changeLanguage('ko');\n\t};\n\n\treturn (\n\t\t<HeaderContainer>\n\t\t\t<Stack spacing={2} direction=\"row\" alignItems=\"center\">\n\t\t\t\t<Button variant=\"text\" onClick={onClickChangeLanguage} size=\"small\" color=\"inherit\">\n\t\t\t\t\t{i18n.language === 'ko' ? 'English' : '한국어'}\n\t\t\t\t</Button>\n\t\t\t\t{UserStore.user !== null ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<EmailLabel>{UserStore.user?.username}</EmailLabel>\n\t\t\t\t\t\t<LoginButton\n\t\t\t\t\t\t\tvariant=\"text\"\n\t\t\t\t\t\t\tonClick={() => history.push('/mypage')}\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{t('My Page')}\n\t\t\t\t\t\t</LoginButton>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<LoginButton\n\t\t\t\t\t\t\tvariant=\"text\"\n\t\t\t\t\t\t\tonClick={() => history.push('/login')}\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{t('login')}\n\t\t\t\t\t\t</LoginButton>\n\t\t\t\t\t\t{/* <LoginButton\n\t\t\t\t\t\t\tvariant=\"text\"\n\t\t\t\t\t\t\tonClick={() => history.push('/signup')}\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{t('Sign Up')}\n\t\t\t\t\t\t</LoginButton> */}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Stack>\n\t\t</HeaderContainer>\n\t);\n});\n\nexport default Header;\n","import { SNUBLUE, SNUYELLOW, SNUGRAY } from 'lib/constant';\nimport { RowContainer, SubContent } from 'lib/constant/Components';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nconst FooterContainer = styled(RowContainer)`\n\theight: 200px;\n\tpadding: 0px 10vw;\n\tdisplay: flex;\n\tflex-direction: row;\n\tborder-top: 15px ${SNUBLUE} solid;\n`;\n\nconst ColumnContainer = styled.div<{ type: 'left' | 'right' }>`\n\tflex: ${(props) => (props.type === 'right' ? 1 : 2)};\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\talign-items: ${(props) => props.type === 'right' && 'flex-end'};\n`;\n\nconst SnulingLogo = styled.img`\n\twidth: 200px;\n\theight: auto;\n\topacity: 1;\n\tmargin-bottom: 20px;\n\t:hover {\n\t\tcursor: pointer;\n\t}\n`;\n\nconst FooterLabel = styled.div`\n\tfont-size: 14px;\n\ttext-align: left;\n\tline-height: 25px;\n\ttext-decoration: none;\n\tcolor: ${SNUGRAY};\n`;\n\nconst siteList: { name: string; url: string }[] = [\n\t{ name: '언어학과 홈페이지', url: 'http://hosting01.snu.ac.kr/~linguist/' },\n\t{ name: '서울대학교 인문대학', url: 'http://humanities.snu.ac.kr' },\n];\n\nconst Footer = () => {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<FooterContainer>\n\t\t\t<ColumnContainer type=\"left\">\n\t\t\t\t<SnulingLogo\n\t\t\t\t\tsrc={`${process.env.PUBLIC_URL}/img/snuling_logo.png`}\n\t\t\t\t\talt=\"snuling_logo\"\n\t\t\t\t/>\n\t\t\t\t<FooterLabel>{t('address')}</FooterLabel>\n\t\t\t\t<FooterLabel>{t('contacts')}</FooterLabel>\n\t\t\t\t{/* <FooterLabel>{t('copyright')}</FooterLabel> */}\n\t\t\t</ColumnContainer>\n\t\t\t{/* <ColumnContainer type=\"right\">\n\t\t\t\t<FooterLabel>관련 사이트</FooterLabel>\n\t\t\t\t{siteList.map((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<a href={item.url} key={item.name} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t\t<FooterLabel>{item.name}</FooterLabel>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ColumnContainer> */}\n\t\t</FooterContainer>\n\t);\n};\n\nexport default Footer;\n","import styled from 'styled-components';\nimport { SubContent } from 'lib/constant/Components';\nimport { ExperimentDetailType } from 'types/experiment';\nimport { useTranslation } from 'react-i18next';\nimport { SNUBLUE } from 'lib/constant';\n\nconst InfoContainer = styled.div`\n\twidth: 60%;\n\tborder-radius: 10px;\n\tborder: 0.5px solid #b5b5b5;\n\tbackground-color: white;\n\tmargin: 30px 0px;\n\tpadding: 10px 20px;\n`;\n\nconst Row = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tmargin: 5px 0px;\n`;\n\nconst Title = styled(SubContent)`\n\twidth: 30%;\n\tpadding-right: 20px;\n\ttext-align: right;\n\tcolor: grey;\n`;\n\nconst Item = styled(SubContent)`\n\tmargin-left: 20px;\n\ttext-align: left;\n\tcolor: ${SNUBLUE};\n`;\n\ninterface Props {\n\texperiment: ExperimentDetailType;\n}\n\nconst ExperimentDetailInfo = ({ experiment }: Props) => {\n\tconst { t } = useTranslation();\n\n\tif (!experiment) return null;\n\treturn (\n\t\t<InfoContainer>\n\t\t\t<Row>\n\t\t\t\t<Title>참여 대상 모국어</Title>\n\t\t\t\t<Item>\n\t\t\t\t\t{experiment.lingual\n\t\t\t\t\t\t? experiment.lingual\n\t\t\t\t\t\t\t\t.split(',')\n\t\t\t\t\t\t\t\t.map((item) => t(item))\n\t\t\t\t\t\t\t\t.join(', ')\n\t\t\t\t\t\t: '없음'}\n\t\t\t\t</Item>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Title>실험 진행 방식</Title>\n\t\t\t\t<Item>{experiment.exp_type === 'ON' ? 'Online' : 'Offline'}</Item>\n\t\t\t</Row>\n\t\t\t{experiment.exp_type === 'OFF' && (\n\t\t\t\t<Row>\n\t\t\t\t\t<Title>실험 장소</Title>\n\t\t\t\t\t<Item>{experiment.location}</Item>\n\t\t\t\t</Row>\n\t\t\t)}\n\t\t\t<Row>\n\t\t\t\t<Title>실험 참여 보상</Title>\n\t\t\t\t<Item>\n\t\t\t\t\t{experiment.reward_type === 'CASH'\n\t\t\t\t\t\t? `${experiment.reward_price}원`\n\t\t\t\t\t\t: experiment.reward}\n\t\t\t\t</Item>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Title>현재 모집 인원</Title>\n\t\t\t\t<Item>\n\t\t\t\t\t{experiment.count_participants}명 / {experiment.max_participants}명\n\t\t\t\t</Item>\n\t\t\t</Row>\n\t\t\t{experiment.exp_type === 'OFF' && (\n\t\t\t\t<Row>\n\t\t\t\t\t<Title>실험 시간</Title>\n\t\t\t\t\t<Item>{experiment.duration}분</Item>\n\t\t\t\t</Row>\n\t\t\t)}\n\t\t\t{experiment.exp_type === 'ON' && experiment.is_joined && (\n\t\t\t\t<>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Title>실험 진행 링크</Title>\n\t\t\t\t\t\t<Item onClick={() => window.open(experiment.link, '_blank')}>\n\t\t\t\t\t\t\t{experiment.link}\n\t\t\t\t\t\t</Item>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Title>실험 확인 코드</Title>\n\t\t\t\t\t\t<Item>{experiment.code}</Item>\n\t\t\t\t\t</Row>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</InfoContainer>\n\t);\n};\n\nexport default ExperimentDetailInfo;\n","import { Modal } from '@mui/material';\nimport { SNUYELLOW, SNULIGHTYELLOW } from 'lib/constant';\nimport { Children, ReactNode } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nconst ModalContainer = styled.div`\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\toutline: 0;\n\twidth: 50vw;\n\tcolor: black;\n`;\n\nconst ChildrenContainer = styled.div`\n\tpadding: 20px 0px;\n\tborder-radius: 10px 10px 0px 0px;\n\tbackground-color: white;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tflex-direction: column;\n`;\n\nconst OKButton = styled.div`\n\tborder-radius: 0px 0px 10px 10px;\n\twidth: 100%;\n\theight: 40px;\n\tbackground-color: ${SNUYELLOW};\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\t:hover {\n\t\tbackground-color: ${SNUYELLOW}, 0.9;\n\t\tcursor: pointer;\n\t}\n`;\n\ninterface Props {\n\tchildren: ReactNode;\n\tisOpen: boolean;\n\tonClickClose: () => void;\n\tonClickOK?: () => void;\n}\n\nconst ModalTemplate = ({ children, isOpen, onClickClose, onClickOK }: Props) => {\n\tconst { t } = useTranslation();\n\n\treturn (\n\t\t<Modal open={isOpen} onClose={onClickClose}>\n\t\t\t<ModalContainer>\n\t\t\t\t<ChildrenContainer>{children}</ChildrenContainer>\n\t\t\t\t<OKButton onClick={onClickOK}>{t('Confirm')}</OKButton>\n\t\t\t</ModalContainer>\n\t\t</Modal>\n\t);\n};\n\nexport default ModalTemplate;\n","import { SubContent, Content } from 'lib/constant/Components';\nimport styled from 'styled-components';\nimport { ExperimentDetailType } from 'types/experiment';\nimport ModalTemplate from 'components/template/ModalTemplate';\n\ninterface Props {\n\tisModalVisible: boolean;\n\tsetIsModalVisible: (visible: boolean) => void;\n\texperiment: ExperimentDetailType;\n\tcode: string;\n}\n\nconst BoldLabel = styled(Content)`\n\tmargin: 10px 0px;\n\tfont-weight: 500;\n\t:hover {\n\t\topacity: 0.9;\n\t\tcursor: pointer;\n\t}\n`;\n\nconst ExperimentOnlineModal = ({ isModalVisible, setIsModalVisible, experiment, code }: Props) => {\n\treturn (\n\t\t<ModalTemplate\n\t\t\tisOpen={isModalVisible}\n\t\t\tonClickClose={() => setIsModalVisible(false)}\n\t\t\tonClickOK={() => setIsModalVisible(false)}\n\t\t>\n\t\t\t<SubContent>실험에 참여되었습니다. 아래 링크를 클릭해주세요.</SubContent>\n\t\t\t<BoldLabel onClick={() => window.open(experiment.link, '_blank')}>\n\t\t\t\t{experiment.link}\n\t\t\t</BoldLabel>\n\t\t\t<SubContent>\n\t\t\t\t실험이 완료되면 confirmation code 입력란에 아래 코드를 입력하세요.\n\t\t\t</SubContent>\n\t\t\t<BoldLabel>{code}</BoldLabel>\n\t\t</ModalTemplate>\n\t);\n};\n\nexport default ExperimentOnlineModal;\n","import { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { useParams } from 'react-router-dom';\nimport { Title, Content } from 'lib/constant/Components';\nimport CreateIcon from '@mui/icons-material/Create';\nimport CheckIcon from '@mui/icons-material/Check';\nimport { Button } from '@mui/material';\nimport useStore from 'store/Index';\nimport styled from 'styled-components';\nimport ExperimentDetailInfo from './ExperimentDetailInfo';\nimport ExperimentOnlineModal from './ExperimentOnlineModal';\n\nconst ContentContainer = styled.div`\n\twidth: 90%;\n`;\n\nconst ExperimentOnlineDetailBody = observer(() => {\n\tconst { id } = useParams<{ id: string }>();\n\tconst [code, setCode] = useState<string>('');\n\tconst { ExperimentStore, UserStore, ToastStore } = useStore();\n\tconst experiment = ExperimentStore.experimentDetail;\n\tconst [isOnlineModalVisible, setIsOnlineModalVisible] = useState<boolean>(false);\n\n\tconst onClickAssign = async () => {\n\t\tif (UserStore.user === null)\n\t\t\tToastStore.setMessage('info', '실험에 참여하시려면 먼저 로그인을 해주세요');\n\t\telse {\n\t\t\tconst res = await ExperimentStore.patchExperimentDetail(parseInt(id, 10), 'join');\n\t\t\tif (res.success) {\n\t\t\t\tToastStore.setMessage('success', '실험에 참여되었습니다.');\n\t\t\t\t// experiment.is_joined = true;\n\t\t\t\tsetCode(res.code);\n\t\t\t\tsetIsOnlineModalVisible(true);\n\t\t\t} else\n\t\t\t\tToastStore.setMessage(\n\t\t\t\t\t'error',\n\t\t\t\t\t'서버에 오류가 있습니다. 잠시 뒤에 다시 시도해 주세요.',\n\t\t\t\t);\n\t\t}\n\t};\n\n\tconst onClickComplete = async () => {\n\t\tconst res = await ExperimentStore.postExperimentComplete(parseInt(id, 10));\n\t\tif (res) {\n\t\t\tToastStore.setMessage('success', '실험 참여가 확인되었습니다.');\n\t\t} else\n\t\t\tToastStore.setMessage('error', '서버에 오류가 있습니다. 잠시 뒤에 다시 시도해 주세요.');\n\t};\n\n\tif (!experiment) return null;\n\treturn (\n\t\t<>\n\t\t\t<Title>{experiment.title}</Title>\n\t\t\t<ExperimentDetailInfo experiment={experiment} />\n\t\t\t<ContentContainer\n\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t__html: `${experiment.content}`,\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<ExperimentOnlineModal\n\t\t\t\texperiment={experiment}\n\t\t\t\tcode={code}\n\t\t\t\tisModalVisible={isOnlineModalVisible}\n\t\t\t\tsetIsModalVisible={setIsOnlineModalVisible}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tdisabled={experiment.is_full || experiment.is_joined}\n\t\t\t\tonClick={onClickAssign}\n\t\t\t\tendIcon={<CreateIcon />}\n\t\t\t\tvariant=\"contained\"\n\t\t\t>\n\t\t\t\t{experiment.is_joined\n\t\t\t\t\t? '참여 완료'\n\t\t\t\t\t: experiment.is_full\n\t\t\t\t\t? '모집 마감'\n\t\t\t\t\t: '실험 참여하기'}\n\t\t\t</Button>\n\t\t\t{experiment.is_joined && (\n\t\t\t\t<Button onClick={onClickComplete} endIcon={<CheckIcon />} variant=\"contained\">\n\t\t\t\t\t실험를 완료했다면 여기를 눌러주세요\n\t\t\t\t</Button>\n\t\t\t)}\n\t\t</>\n\t);\n});\n\nexport default ExperimentOnlineDetailBody;\n","export const yyyymmddToDate = (date: string) => {\n\tlet year = date.substring(0, 4);\n\tlet month = date.substring(5, 7);\n\tlet day = date.substring(8, 10);\n\treturn new Date(Number(year), Number(month) - 1, Number(day));\n};\n\nexport const dateToYyyymmdd = (date: Date) => {\n\tlet sYear = date.getFullYear().toString();\n\tlet sMonth =\n\t\tdate.getMonth() + 1 > 9\n\t\t\t? (date.getMonth() + 1).toString()\n\t\t\t: `0${(date.getMonth() + 1).toString()}`;\n\tlet sDate = date.getDate() > 9 ? date.getDate().toString() : `0${date.getDate().toString()}`;\n\treturn `${sYear}-${sMonth}-${sDate}`;\n};\n\nexport const dateToString = (date: Date) => {\n\tconst monthNames = [\n\t\t'January',\n\t\t'February',\n\t\t'March',\n\t\t'April',\n\t\t'May',\n\t\t'June',\n\t\t'July',\n\t\t'August',\n\t\t'September',\n\t\t'October',\n\t\t'November',\n\t\t'December',\n\t];\n\tlet sYear = date.getFullYear().toString();\n\tlet month = date.getMonth();\n\tlet sMonth = monthNames[month];\n\tlet sDate = date.getDate() > 9 ? date.getDate().toString() : `0${date.getDate().toString()}`;\n\treturn `${sDate} ${sMonth} ${sYear}`;\n};\n","import { yyyymmddToDate, dateToYyyymmdd } from 'lib/api/Date';\nimport DatePicker from 'react-datepicker';\nimport { ko } from 'date-fns/esm/locale';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useTranslation } from 'react-i18next';\n\ninterface Props {\n\tschedule: string[];\n\tselectedDate: string;\n\tsetSelectedDate: (date: string) => void;\n}\n\nconst ExperimentCalender = ({ schedule, selectedDate, setSelectedDate }: Props) => {\n\tconst { i18n } = useTranslation();\n\t// registerLocale('ko', ko);\n\n\treturn (\n\t\t<DatePicker\n\t\t\tincludeDates={schedule.map((e) => {\n\t\t\t\treturn yyyymmddToDate(e);\n\t\t\t})}\n\t\t\tselected={yyyymmddToDate(selectedDate)}\n\t\t\tonSelect={(date) => {\n\t\t\t\tsetSelectedDate(dateToYyyymmdd(date));\n\t\t\t}}\n\t\t\tonChange={() => console.log('')}\n\t\t\tlocale={i18n.language === 'ko' ? ko : 'en'}\n\t\t\tinline\n\t\t/>\n\t);\n};\n\nexport default ExperimentCalender;\n","import { Divider, FormControlLabel, Radio, RadioGroup } from '@mui/material';\nimport { ExperimentDetailType } from 'types/experiment';\nimport styled from 'styled-components';\nimport { SubContent } from 'lib/constant/Components';\nimport { useCallback, useState } from 'react';\nimport ModalTemplate from 'components/template/ModalTemplate';\nimport useStore from 'store/Index';\nimport { useHistory } from 'react-router';\nimport ExperimentCalender from './ExperimentCalender';\n\nconst Container = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\nconst InnerContainer = styled.div`\n\twidth: 100%;\n\tmargin-top: 20px;\n\tdisplay: flex;\n\tflex-direction: row;\n`;\n\nconst Column = styled.div`\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: flex-start;\n`;\n\ninterface Props {\n\tid: string;\n\tisModalVisible: boolean;\n\texperiment: ExperimentDetailType;\n\tsetIsModalVisible: (visible: boolean) => void;\n}\n\nconst ExperimentOfflineModal = ({ id, isModalVisible, experiment, setIsModalVisible }: Props) => {\n\tconst history = useHistory();\n\tconst { ExperimentStore, ToastStore } = useStore();\n\tconst [selectedDate, setSelectedDate] = useState<string>(\n\t\texperiment.schedule_available[0].slice(0, 10),\n\t);\n\tconst [selectedTime, setSelectedTime] = useState<string | null>(null);\n\n\tconst onClickOK = async () => {\n\t\tif (!selectedTime) ToastStore.setMessage('error', '실험 참여 희망 시간을 선택해주세요.');\n\t\telse {\n\t\t\tconst res = await ExperimentStore.patchExperimentDetail(\n\t\t\t\tparseInt(id, 10),\n\t\t\t\t'join',\n\t\t\t\tselectedTime,\n\t\t\t);\n\t\t\tif (res.success) {\n\t\t\t\tToastStore.setMessage('success', '실험 예약이 완료되었습니다.');\n\t\t\t\tsetIsModalVisible(false);\n\t\t\t\thistory.push('/mypage');\n\t\t\t} else {\n\t\t\t\tToastStore.setMessage('error', '서버에 오류가 있습니다. 관리자에게 문의하세요.');\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<ModalTemplate\n\t\t\tisOpen={isModalVisible}\n\t\t\tonClickClose={() => setIsModalVisible(false)}\n\t\t\tonClickOK={onClickOK}\n\t\t>\n\t\t\t<Container>\n\t\t\t\t<SubContent>참여 가능한 일정을 선택해주세요</SubContent>\n\t\t\t\t<InnerContainer>\n\t\t\t\t\t<Column>\n\t\t\t\t\t\t<ExperimentCalender\n\t\t\t\t\t\t\tselectedDate={selectedDate}\n\t\t\t\t\t\t\tschedule={experiment?.schedule}\n\t\t\t\t\t\t\tsetSelectedDate={setSelectedDate}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Divider orientation=\"vertical\" flexItem />\n\t\t\t\t\t<Column>\n\t\t\t\t\t\t<SubContent>\n\t\t\t\t\t\t\t{selectedDate?.slice(0, 4)}년 {selectedDate?.slice(5, 7)}월{' '}\n\t\t\t\t\t\t\t{selectedDate?.slice(8, 10)}일\n\t\t\t\t\t\t</SubContent>\n\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\tvalue={selectedTime}\n\t\t\t\t\t\t\tonChange={(e) => setSelectedTime(e.target.value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{experiment?.schedule\n\t\t\t\t\t\t\t\t.filter((e) => e.slice(0, 10) === selectedDate)\n\t\t\t\t\t\t\t\t.map((e) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\tkey={e}\n\t\t\t\t\t\t\t\t\t\t\tvalue={e}\n\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\t\t\t\t\t\tlabel={`${e.slice(11, 13)}시 ${e.slice(14, 16)}분 시작`}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={experiment?.schedule_reserved.includes(e)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t</Column>\n\t\t\t\t</InnerContainer>\n\t\t\t</Container>\n\t\t</ModalTemplate>\n\t);\n};\n\nexport default ExperimentOfflineModal;\n","import { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { useParams } from 'react-router-dom';\nimport { Title, Content } from 'lib/constant/Components';\nimport CreateIcon from '@mui/icons-material/Create';\nimport { Button } from '@mui/material';\nimport useStore from 'store/Index';\nimport styled from 'styled-components';\nimport ExperimentOfflineModal from './ExperimentOfflineModal';\nimport ExperimentDetailInfo from './ExperimentDetailInfo';\n\nconst ContentContainer = styled.div`\n\twidth: 90%;\n`;\n\nconst ExperimentDetailOfflineBody = observer(() => {\n\tconst { id } = useParams<{ id: string }>();\n\tconst { ExperimentStore, UserStore, ToastStore } = useStore();\n\tconst experiment = ExperimentStore.experimentDetail;\n\tconst [isOfflineModalVisible, setIsOfflineModalVisible] = useState<boolean>(false);\n\n\tconst onClickAssign = async () => {\n\t\tif (UserStore.user === null)\n\t\t\tToastStore.setMessage('info', '실험에 참여하시려면 먼저 로그인을 해주세요');\n\t\telse {\n\t\t\tsetIsOfflineModalVisible(true);\n\t\t}\n\t};\n\n\tif (!experiment) return null;\n\treturn (\n\t\t<>\n\t\t\t<Title>{experiment.title}</Title>\n\t\t\t<ExperimentDetailInfo experiment={experiment} />\n\t\t\t<ContentContainer\n\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t__html: `${experiment.content}`,\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t{experiment.schedule && (\n\t\t\t\t<ExperimentOfflineModal\n\t\t\t\t\texperiment={experiment}\n\t\t\t\t\tid={id}\n\t\t\t\t\tisModalVisible={isOfflineModalVisible}\n\t\t\t\t\tsetIsModalVisible={setIsOfflineModalVisible}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<Button\n\t\t\t\tdisabled={experiment.is_full || experiment.is_joined}\n\t\t\t\tonClick={onClickAssign}\n\t\t\t\tendIcon={<CreateIcon />}\n\t\t\t\tvariant=\"contained\"\n\t\t\t>\n\t\t\t\t{experiment.is_joined\n\t\t\t\t\t? '예약 완료'\n\t\t\t\t\t: experiment.is_full\n\t\t\t\t\t? '모집 마감'\n\t\t\t\t\t: '실험 참여하기'}\n\t\t\t</Button>\n\t\t</>\n\t);\n});\n\nexport default ExperimentDetailOfflineBody;\n","import styled from 'styled-components';\nimport Button from '@mui/material/Button';\nimport PageTemplate from 'components/template/PageTemplate';\nimport { observer } from 'mobx-react';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { useParams } from 'react-router-dom';\nimport useStore from 'store/Index';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport { CircularProgress } from '@mui/material';\nimport ExperimentDetailOnlineBody from 'components/experiment/ExperimentDetailOnlineBody';\nimport ExperimentDetailOfflineBody from 'components/experiment/ExperimentDetailOfflineBody';\n\nconst BackButton = styled(Button)`\n\talign-self: flex-start;\n`;\n\nconst ExperimentDetail = observer(() => {\n\tconst { id } = useParams<{ id: string }>();\n\tconst history = useHistory();\n\tconst { ExperimentStore, LoadingStore } = useStore();\n\n\tconst getInit = async () => {\n\t\tLoadingStore.setLoading(true);\n\t\tlet res = await ExperimentStore.getExperimentDetail(parseInt(id, 10));\n\t\tif (res && ExperimentStore.experimentDetail) LoadingStore.setLoading(false);\n\t};\n\n\tuseEffect(() => {\n\t\tgetInit();\n\t}, []);\n\n\treturn (\n\t\t<PageTemplate>\n\t\t\t<BackButton onClick={() => history.goBack()} startIcon={<ArrowBackIosIcon />}>\n\t\t\t\t목록으로 가기\n\t\t\t</BackButton>\n\t\t\t{LoadingStore.loading ? (\n\t\t\t\t<CircularProgress />\n\t\t\t) : ExperimentStore.experimentDetail?.exp_type === 'ON' ? (\n\t\t\t\t<ExperimentDetailOnlineBody />\n\t\t\t) : (\n\t\t\t\t<ExperimentDetailOfflineBody />\n\t\t\t)}\n\t\t</PageTemplate>\n\t);\n});\n\nexport default ExperimentDetail;\n","import styled from 'styled-components';\nimport { Tab, Tabs } from '@mui/material';\nimport { useHistory, useLocation } from 'react-router';\nimport { useTranslation } from 'react-i18next';\n\nconst MenuContainer = styled.div`\n\twidth: 100vw;\n\theight: 90px;\n\tbox-sizing: border-box;\n\tposition: relative;\n\tpadding: 0px max(calc((100vw - 1100px) / 2), 5vw);\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tbox-shadow: rgba(33, 35, 38, 0.3) 0px 10px 10px -10px;\n\tz-index: 20;\n`;\n\nconst MenuTab = styled(Tabs)`\n\tcolor: '#666666';\n`;\n\nconst SnulingLogo = styled.img`\n\twidth: 200px;\n\theight: auto;\n\t/* opacity: 1; */\n\t:hover {\n\t\topacity: 0.8;\n\t\tcursor: pointer;\n\t}\n`;\n\nconst MenuItem = styled(Tab)`\n\theight: 90px;\n`;\n\nconst tabs: { title: string; url: string }[] = [\n\t{ title: 'news', url: '/news' },\n\t{ title: 'colloquium', url: '/colloquium' },\n\t{ title: 'seminar', url: '/seminar' },\n\t{ title: 'Experiments', url: '/experiment' },\n];\n\nconst TabNavigation = () => {\n\tconst location = useLocation();\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\n\tconst getLocation = () => {\n\t\tconst firstPath = location.pathname.split('/')[1];\n\t\tif (['news', 'colloquium', 'seminar', 'experiment'].includes(firstPath))\n\t\t\treturn `/${firstPath}`;\n\t\treturn false;\n\t};\n\tif (location.pathname === '/') return null;\n\treturn (\n\t\t<MenuContainer>\n\t\t\t<SnulingLogo\n\t\t\t\tsrc={`${process.env.PUBLIC_URL}/img/snuling_logo.png`}\n\t\t\t\talt=\"\"\n\t\t\t\tonClick={() => history.push('/')}\n\t\t\t/>\n\t\t\t<MenuTab value={getLocation()} centered textColor=\"inherit\" indicatorColor=\"primary\">\n\t\t\t\t{tabs.map((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\tlabel={t(item.title)}\n\t\t\t\t\t\t\tvalue={item.url}\n\t\t\t\t\t\t\tkey={item.title}\n\t\t\t\t\t\t\tonClick={() => history.push(`${item.url}`)}\n\t\t\t\t\t\t\tsx={{ fontSize: 16 }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</MenuTab>\n\t\t</MenuContainer>\n\t);\n};\n\nexport default TabNavigation;\n","import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { useHistory } from 'react-router';\nimport useStore from 'store/Index';\nimport { useTranslation } from 'react-i18next';\nimport { TextField, Button, InputAdornment } from '@mui/material';\nimport styled from 'styled-components';\nimport { checkEmail } from 'lib/reg';\nimport LoginTemplate from 'components/template/LoginTemplate';\nimport { SubTitle } from 'lib/constant/Components';\n\nconst SignUp = observer(() => {\n\tconst { UserStore, ToastStore } = useStore();\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\n\tconst [email, setEmail] = useState<string>('');\n\tconst [emailError, setEmailError] = useState<boolean>(false);\n\tconst [codeInputVisible, setCodeInputVisible] = useState<boolean>(false);\n\tconst [code, setCode] = useState<string>('');\n\tconst [codeError, setCodeError] = useState<boolean>(false);\n\tconst [codeCheck, setCodeCheck] = useState<boolean>(false);\n\tconst [pw, setPw] = useState<string>('');\n\tconst [pwError, setPwError] = useState<boolean>(false);\n\tconst [pwCheck, setPwCheck] = useState<string>('');\n\tconst [pwCheckError, setPwCheckError] = useState<boolean>(false);\n\n\tconst onClickEmail = () => {\n\t\tif (email.trim().length === 0) {\n\t\t\tToastStore.setMessage('warning', '이메일을 입력해주세요');\n\t\t\tsetEmailError(true);\n\t\t} else if (!checkEmail(email.trim())) {\n\t\t\tToastStore.setMessage('warning', '올바른 형식의 이메일을 입력해주세요');\n\t\t\tsetEmailError(true);\n\t\t} else {\n\t\t\tUserStore.sendEmail(email);\n\t\t\tsetEmailError(false);\n\t\t\tsetCodeInputVisible(true);\n\t\t}\n\t};\n\n\tconst onClickCheckCode = async () => {\n\t\tconst res = await UserStore.validateEmail(email, code);\n\t\tif (res.error) {\n\t\t\tToastStore.setMessage('warning', '인증번호가 일치하지 않습니다. 다시 확인해주세요.');\n\t\t\tsetCodeError(true);\n\t\t} else {\n\t\t\tsetCodeError(false);\n\t\t\tsetCodeCheck(true);\n\t\t}\n\t};\n\n\tconst onSubmit = async () => {\n\t\tif (!codeCheck) {\n\t\t\tToastStore.setMessage('warning', '이메일 인증을 해주세요.');\n\t\t\tsetEmailError(true);\n\t\t} else if (pw.trim().length === 0) {\n\t\t\tToastStore.setMessage('warning', '패스워드를 입력하세요');\n\t\t\tsetPwError(true);\n\t\t} else if (pwCheck.trim().length === 0) {\n\t\t\tToastStore.setMessage('warning', '패스워드 확인을 입력하세요');\n\t\t\tsetPwCheckError(true);\n\t\t} else if (pwCheck !== pw) {\n\t\t\tToastStore.setMessage('warning', '패스워드가 일치하지 않습니다');\n\t\t\tsetPwCheckError(true);\n\t\t} else {\n\t\t\tawait UserStore.signUp(email, pw);\n\t\t\tUserStore.login(email, pw);\n\t\t\thistory.push('/');\n\t\t\tToastStore.setMessage('success', '회원가입 성공');\n\t\t}\n\t};\n\n\treturn (\n\t\t<LoginTemplate>\n\t\t\t<SubTitle>{t('Sign Up')}</SubTitle>\n\t\t\t<TextField\n\t\t\t\tmargin=\"normal\"\n\t\t\t\trequired\n\t\t\t\tlabel={t('Email Address')}\n\t\t\t\tfullWidth\n\t\t\t\tautoFocus\n\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\tsetEmail(event.target.value)\n\t\t\t\t}\n\t\t\t\terror={emailError}\n\t\t\t\tdisabled={codeInputVisible}\n\t\t\t\tInputProps={{\n\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tonClick={onClickEmail}\n\t\t\t\t\t\t\t\tdisabled={codeInputVisible}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{codeInputVisible ? '메일 발송 완료' : '인증 메일 발송'}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t),\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t{codeInputVisible && (\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\trequired\n\t\t\t\t\tlabel=\"메일에서 인증번호를 확인하고 입력해주세요\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\tsetCode(event.target.value)\n\t\t\t\t\t}\n\t\t\t\t\terror={codeError}\n\t\t\t\t\tdisabled={codeCheck}\n\t\t\t\t\tInputProps={{\n\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tonClick={onClickCheckCode}\n\t\t\t\t\t\t\t\t\tdisabled={codeCheck}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{codeCheck ? '인증 성공' : '인증하기'}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t),\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<TextField\n\t\t\t\tmargin=\"normal\"\n\t\t\t\trequired\n\t\t\t\tlabel={t('Password')}\n\t\t\t\ttype=\"password\"\n\t\t\t\tfullWidth\n\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) => setPw(event.target.value)}\n\t\t\t\terror={pwError}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tmargin=\"normal\"\n\t\t\t\trequired\n\t\t\t\tname=\"password\"\n\t\t\t\tlabel={t('Password')}\n\t\t\t\ttype=\"password\"\n\t\t\t\tid=\"password\"\n\t\t\t\tfullWidth\n\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\tsetPwCheck(event.target.value)\n\t\t\t\t}\n\t\t\t\terror={pwCheckError}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\ttype=\"submit\"\n\t\t\t\tsx={{ marginTop: '10px' }}\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tonClick={onSubmit}\n\t\t\t\tfullWidth\n\t\t\t>\n\t\t\t\t{t('Sign Up')}\n\t\t\t</Button>\n\t\t</LoginTemplate>\n\t);\n});\n\nexport default SignUp;\n","import { Content, SubContent } from 'lib/constant/Components';\nimport { useState } from 'react';\nimport useStore from 'store/Index';\nimport styled from 'styled-components';\nimport { IconButton, FormControlLabel, Radio, RadioGroup, Switch } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SaveIcon from '@mui/icons-material/Save';\nimport { languageList } from 'lib/constant';\nimport { observer } from 'mobx-react';\n\nconst InfoContainer = styled.div`\n\tposition: relative;\n\tborder-radius: 10px;\n\tborder: 0.5px solid gray;\n\twidth: 90%;\n\tmargin: 30px 0px;\n\tpadding: 10px 20px;\n`;\n\nconst EditButton = styled.div`\n\tposition: absolute;\n\ttop: 10px;\n\tright: 10px;\n`;\n\nconst Row = styled.div`\n\tmargin: 10px 0px;\n\tdisplay: flex;\n\tflex-direction: row;\n`;\n\nconst BoldLabel = styled(SubContent)`\n\twidth: 150px;\n\tfont-weight: 500;\n`;\n\nconst MyPageBody = observer(() => {\n\tconst { UserStore, ToastStore } = useStore();\n\tconst [editMode, setEditMode] = useState<boolean>(false);\n\tconst [langList, setLangList] = useState<string[]>(\n\t\tUserStore.user?.profile.lingual ? UserStore.user?.profile.lingual.split(',') : [],\n\t);\n\tconst [emailAgree, setEmailAgree] = useState<boolean>(\n\t\tUserStore.user ? UserStore.user.profile.subscribe : false,\n\t);\n\n\tconst onClickEdit = async () => {\n\t\tif (editMode) {\n\t\t\tlet res = true;\n\t\t\t// let res = await UserStore.postUserInfo('ONLINE', emailAgree, langList.join(','));\n\t\t\tif (res) ToastStore.setMessage('success', '저장되었습니다.');\n\t\t}\n\t\tsetEditMode(!editMode);\n\t};\n\n\tif (!UserStore.user) return null;\n\treturn (\n\t\t<InfoContainer>\n\t\t\t<EditButton>\n\t\t\t\t<IconButton onClick={onClickEdit}>\n\t\t\t\t\t{editMode ? <SaveIcon /> : <EditIcon />}\n\t\t\t\t</IconButton>\n\t\t\t</EditButton>\n\t\t\t<Row>\n\t\t\t\t<BoldLabel>Email</BoldLabel>\n\t\t\t\t<SubContent>{UserStore.user?.username}</SubContent>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<BoldLabel>Languages</BoldLabel>\n\t\t\t\t{editMode ? (\n\t\t\t\t\t<RadioGroup>\n\t\t\t\t\t\t{languageList.map((lang) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\tvalue={lang}\n\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\t\t\t\tchecked={langList.includes(lang)}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={!editMode}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (langList.includes(lang))\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetLangList(langList.filter((e) => e !== lang));\n\t\t\t\t\t\t\t\t\t\t\t\telse setLangList(langList.concat(lang));\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlabel={lang}\n\t\t\t\t\t\t\t\t\tkey={lang}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</RadioGroup>\n\t\t\t\t) : (\n\t\t\t\t\t<SubContent>{langList.join(', ') || '선호 언어 없음'}</SubContent>\n\t\t\t\t)}\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<BoldLabel>Email 수신 동의</BoldLabel>\n\t\t\t\t{editMode ? (\n\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\t\tchecked={emailAgree}\n\t\t\t\t\t\t\t\tonChange={() => setEmailAgree(!emailAgree)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlabel={emailAgree ? '동의' : '비동의'}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<SubContent>{emailAgree ? '동의 ' : '비동의'}</SubContent>\n\t\t\t\t)}\n\t\t\t</Row>\n\t\t</InfoContainer>\n\t);\n});\n\nexport default MyPageBody;\n","import useStore from 'store/Index';\nimport { SubTitle } from 'lib/constant/Components';\nimport { Grid } from '@mui/material';\nimport ExperimentBox from 'components/experiment/ExperimentBox';\n\nconst ExperimentMyBody = () => {\n\tconst { ExperimentStore } = useStore();\n\n\treturn (\n\t\t<>\n\t\t\t{ExperimentStore.myExperimentList.length > 0 ? (\n\t\t\t\t<Grid container rowSpacing={2} columnSpacing={3} alignItems=\"center\">\n\t\t\t\t\t{ExperimentStore.myExperimentList.map((item) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Grid item key={item.title} xs={12} md={6}>\n\t\t\t\t\t\t\t\t<ExperimentBox item={item} key={item.title} />\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Grid>\n\t\t\t) : (\n\t\t\t\t<SubTitle>아직 참여한 실험이 없군요 ! 지금 참여해보세요</SubTitle>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default ExperimentMyBody;\n","import { useEffect } from 'react';\nimport PageTemplate from 'components/template/PageTemplate';\nimport { observer } from 'mobx-react';\nimport { useHistory } from 'react-router';\nimport { useTranslation } from 'react-i18next';\nimport useStore from 'store/Index';\nimport { Button } from '@mui/material';\nimport MyPageBody from 'components/mypage/MyPageBody';\nimport ExperimentMyBody from 'components/experiment/ExperimentMyBody';\n\nconst MyPage = observer(() => {\n\tconst { UserStore, ToastStore, TokenStore, ExperimentStore, LoadingStore } = useStore();\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\n\tconst getInit = async () => {\n\t\tLoadingStore.setLoading(true);\n\t\tconst res = await ExperimentStore.getMyExperimentList();\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\tuseEffect(() => {\n\t\tif (UserStore.user === null) history.replace('/');\n\t\telse getInit();\n\t}, []);\n\n\tconst onClickLogout = async () => {\n\t\tconst result = await UserStore.logout();\n\t\tif (result) {\n\t\t\tTokenStore.clear();\n\t\t\thistory.push('/');\n\t\t\tToastStore.setMessage('success', '로그아웃 되었습니다');\n\t\t}\n\t};\n\n\tconst onClickQuit = async () => {\n\t\tconst result = await UserStore.deleteUser();\n\t\tif (result) {\n\t\t\tTokenStore.clear();\n\t\t\thistory.push('/');\n\t\t\tToastStore.setMessage('success', '회원탈퇴 되었습니다');\n\t\t}\n\t};\n\n\tif (UserStore.user === null) return null;\n\treturn (\n\t\t<PageTemplate title=\"My Info\" menu={[]}>\n\t\t\t<Button variant=\"contained\" onClick={onClickLogout}>\n\t\t\t\t{t('logout')}\n\t\t\t</Button>\n\t\t\t<Button variant=\"text\" onClick={onClickQuit}>\n\t\t\t\t{t('quit')}\n\t\t\t</Button>\n\t\t\t<MyPageBody />\n\t\t\t{!LoadingStore.loading && <ExperimentMyBody />}\n\t\t</PageTemplate>\n\t);\n});\n\nexport default MyPage;\n","import { PostType } from 'types/post';\nimport styled from 'styled-components';\nimport { dateToString } from 'lib/api/Date';\nimport { useHistory } from 'react-router';\nimport { SNUBLUE } from 'lib/constant';\nimport useStore from 'store/Index';\n\nconst Container = styled.div`\n\twidth: 100%;\n\theight: 400px;\n\tposition: relative;\n\tbox-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);\n\tcursor: pointer;\n\ttransition: all 0.3s;\n\t:hover {\n\t\tbox-shadow: 0 6px 35px rgba(24, 25, 31, 0.15);\n\t\ttransform: translateY(-4px);\n\t}\n`;\n\nconst ImageContainer = styled.img`\n\twidth: 100%;\n\theight: 200px;\n\tobject-fit: cover;\n`;\n\nconst LabelContainer = styled.div`\n\tpadding: 10px 20px;\n`;\n\nconst TitleLabel = styled.div`\n\tfont-size: 1.2rem;\n\tfont-weight: 600;\n`;\n\nconst TagLabel = styled.div`\n\tfont-size: 0.9rem;\n\tfont-weight: 400;\n\tmargin-top: 10px;\n\tcolor: grey;\n`;\n\nconst DateLabel = styled.div`\n\tfont-size: 0.9rem;\n\tfont-weight: 400;\n\tmargin-top: 10px;\n\tcolor: grey;\n`;\n\nconst ReadMoreLabel = styled.div`\n\tposition: absolute;\n\tbottom: 20px;\n\tright: 20px;\n\tfont-size: 1.1rem;\n\tfont-weight: 400;\n\tcolor: ${SNUBLUE};\n`;\n\ninterface Props {\n\tpost: PostType;\n}\n\nconst PostBox = ({ post }: Props) => {\n\tconst history = useHistory();\n\treturn (\n\t\t<Container onClick={() => history.push(`/${post.post_type.toLowerCase()}/${post.id}`)}>\n\t\t\t<ImageContainer\n\t\t\t\tsrc={\n\t\t\t\t\tpost.thumbnail || `${process.env.PUBLIC_URL}/img/default_${post.post_type}.jpg`\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<LabelContainer>\n\t\t\t\t<TagLabel>{post.tags}</TagLabel>\n\t\t\t\t<TitleLabel>{post.title}</TitleLabel>\n\t\t\t\t<DateLabel>{dateToString(new Date(post.pub_date))}</DateLabel>\n\t\t\t\t<ReadMoreLabel>READ MORE &gt;</ReadMoreLabel>\n\t\t\t</LabelContainer>\n\t\t</Container>\n\t);\n};\n\nexport default PostBox;\n","import useStore from 'store/Index';\nimport { observer } from 'mobx-react';\nimport { Grid, Skeleton } from '@mui/material';\nimport PostBox from './PostBox';\n\ninterface Props {\n\tpostType: 'seminar' | 'colloquium' | 'news';\n}\n\nconst PostListBody = observer(({ postType }: Props) => {\n\tconst { PostStore, LoadingStore } = useStore();\n\tconst postList = PostStore[`${postType}List`];\n\tif (!postList) return null;\n\treturn (\n\t\t<Grid container rowSpacing={2} columnSpacing={3} alignItems=\"center\">\n\t\t\t{postList.map((item) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Grid item key={item.title} xs={6} md={6}>\n\t\t\t\t\t\t{/* {LoadingStore.loading ? (\n\t\t\t\t\t\t\t<Skeleton variant=\"rectangular\" height={400} />\n\t\t\t\t\t\t) : ( */}\n\t\t\t\t\t\t<PostBox post={item} key={item.title} />\n\t\t\t\t\t\t{/* )} */}\n\t\t\t\t\t</Grid>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Grid>\n\t);\n});\n\nexport default PostListBody;\n","import { CircularProgress } from '@mui/material';\nimport PostListBody from 'components/post/PostListBody';\nimport PageTemplate from 'components/template/PageTemplate';\nimport { observer } from 'mobx-react';\nimport { useEffect } from 'react';\nimport useStore from 'store/Index';\n\ninterface Props {\n\tpostType: 'seminar' | 'colloquium' | 'news';\n}\n\nconst PostList = observer(({ postType }: Props) => {\n\tconst { PostStore, LoadingStore } = useStore();\n\n\tconst getInit = async () => {\n\t\tLoadingStore.setLoading(true);\n\t\tconst res = await PostStore.getPostList(postType);\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\tuseEffect(() => {\n\t\tgetInit();\n\t}, [postType]);\n\n\treturn (\n\t\t<PageTemplate title={postType}>\n\t\t\t{/* {LoadingStore.loading ? <CircularProgress /> : <PostListBody postType={postType} />} */}\n\t\t\t<PostListBody postType={postType} />\n\t\t</PageTemplate>\n\t);\n});\n\nexport default PostList;\n","import useStore from 'store/Index';\nimport { observer } from 'mobx-react';\nimport { Title } from 'lib/constant/Components';\nimport styled from 'styled-components';\n\nconst BannerImage = styled.img`\n\twidth: 100%;\n\theight: 30vh;\n\tobject-fit: cover;\n`;\n\nconst ContentContainer = styled.div`\n\twidth: 90%;\n\tpadding: 10px;\n\toverflow: scroll;\n`;\n\nconst TitleBanner = styled(Title)`\n\twidth: 100%;\n\ttext-align: center;\n`;\n\nconst PostDetailBody = observer(() => {\n\tconst { PostStore } = useStore();\n\tconst post = PostStore.currentPost;\n\n\tif (!post) return null;\n\treturn (\n\t\t<>\n\t\t\t<BannerImage\n\t\t\t\tsrc={\n\t\t\t\t\tpost.thumbnail || `${process.env.PUBLIC_URL}/img/default_${post.post_type}.jpg`\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<TitleBanner>{post.title}</TitleBanner>\n\t\t\t<ContentContainer dangerouslySetInnerHTML={{ __html: post.content }} />\n\t\t</>\n\t);\n});\n\nexport default PostDetailBody;\n","import { CircularProgress } from '@mui/material';\nimport PostDetailBody from 'components/post/PostDetailBody';\nimport PageTemplate from 'components/template/PageTemplate';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport useStore from 'store/Index';\n\nconst PostDetail = () => {\n\tconst { postId } = useParams<{ postId: string }>();\n\tconst { PostStore, LoadingStore } = useStore();\n\n\tconst getInit = async () => {\n\t\tLoadingStore.setLoading(true);\n\t\tconst res = await PostStore.getCurrentPost(parseInt(postId, 10));\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\tuseEffect(() => {\n\t\tLoadingStore.setLoading(true);\n\t\tgetInit();\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t{LoadingStore.loading ? (\n\t\t\t\t<CircularProgress />\n\t\t\t) : (\n\t\t\t\t<PageTemplate>\n\t\t\t\t\t<PostDetailBody />\n\t\t\t\t</PageTemplate>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default PostDetail;\n","import React, { useEffect, useState } from 'react';\nimport { Route, Switch, Redirect } from 'react-router';\nimport './App.css';\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\nimport Home from 'pages/Home';\nimport Login from 'pages/Login';\nimport ExperimentMain from 'pages/Experiment/ExperimentMain';\nimport Header from 'components/Header';\nimport { observer } from 'mobx-react';\nimport { Alert, Box, CssBaseline, Snackbar, ThemeProvider } from '@mui/material';\nimport { createTheme } from '@mui/material/styles';\nimport Footer from 'components/Footer';\nimport useStore from 'store/Index';\nimport ExperimentDetail from 'pages/Experiment/ExperimentDetail';\nimport TabNavigation from 'components/TabNavigation';\nimport { BrowserRouter } from 'react-router-dom';\nimport SignUp from 'pages/SignUp';\nimport TokenHeader from 'lib/api/TokenHeader';\nimport MyPage from 'pages/MyPage/MyPage';\nimport { SNUBLUE, SNULIGHTBLUE, SNULIGHTYELLOW, SNUYELLOW } from 'lib/constant';\nimport PostList from 'pages/PostList';\nimport PostDetail from 'pages/PostDetail';\n\nconst theme = createTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tlight: SNULIGHTBLUE,\n\t\t\tmain: SNUBLUE,\n\t\t},\n\t\tsecondary: {\n\t\t\tlight: SNULIGHTYELLOW,\n\t\t\tmain: SNUYELLOW,\n\t\t},\n\t\tbackground: {\n\t\t\tdefault: '#ffffff',\n\t\t},\n\t},\n\ttypography: {\n\t\tfontFamily: 'YoonGothic',\n\t},\n});\n\nconst App = observer(() => {\n\tconst [loading, setLoading] = useState<boolean>(true);\n\tconst { ToastStore, TokenStore, UserStore } = useStore();\n\n\tconst checkUser = async () => {\n\t\tconst res = await TokenStore.getAccessToken();\n\t\tif (res) {\n\t\t\tTokenHeader.setAccessToken(TokenStore.accessToken);\n\t\t\tawait UserStore.getUserInfo();\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tcheckUser();\n\t\tAOS.init({\n\t\t\tduration: 1000,\n\t\t});\n\t}, []);\n\n\tif (loading) return null;\n\treturn (\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Header />\n\t\t\t\t<TabNavigation />\n\t\t\t\t<Box sx={{ flex: 1, minHeight: '80vh' }}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t\t\t\t<Route path=\"/experiment\" exact component={ExperimentMain} />\n\t\t\t\t\t\t<Route path=\"/experiment/:id\" exact component={ExperimentDetail} />\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath=\"/seminar\"\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\trender={() => <PostList postType=\"seminar\" />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route path=\"/seminar/:postId\" exact component={PostDetail} />\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath=\"/colloquium\"\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\trender={() => <PostList postType=\"colloquium\" />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route path=\"/colloquium/:postId\" exact component={PostDetail} />\n\t\t\t\t\t\t<Route path=\"/news\" exact render={() => <PostList postType=\"news\" />} />\n\t\t\t\t\t\t<Route path=\"/news/:postId\" exact component={PostDetail} />\n\t\t\t\t\t\t<Route path=\"/login\" exact component={Login} />\n\t\t\t\t\t\t<Route path=\"/signup\" exact component={SignUp} />\n\t\t\t\t\t\t<Route path=\"/mypage\" exact component={MyPage} />\n\t\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Box>\n\t\t\t\t<Footer />\n\t\t\t\t<Snackbar\n\t\t\t\t\tautoHideDuration={4000}\n\t\t\t\t\topen={ToastStore.isOpen}\n\t\t\t\t\tonClose={() => ToastStore.setIsOpen(false)}\n\t\t\t\t>\n\t\t\t\t\t<Alert severity={ToastStore.message.type}>{ToastStore.message.text}</Alert>\n\t\t\t\t</Snackbar>\n\t\t\t</ThemeProvider>\n\t\t</BrowserRouter>\n\t);\n});\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","// i18n.js\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport { langEn } from './langEn';\nimport { langKo } from './langKo';\n\nconst resources = {\n\ten: {\n\t\ttranslation: langEn,\n\t},\n\tko: {\n\t\ttranslation: langKo,\n\t},\n};\n\ni18n.use(initReactI18next).init({\n\tresources,\n\t// 초기 설정 언어\n\tlng: 'ko',\n\tfallbackLng: {\n\t\ten: ['en'],\n\t\tdefault: ['ko'],\n\t},\n\tdebug: true,\n\tdefaultNS: 'translation',\n\tns: 'translation',\n\tkeySeparator: false,\n\tinterpolation: {\n\t\tescapeValue: false,\n\t},\n\treact: {\n\t\tuseSuspense: false,\n\t},\n});\n\nexport default i18n;\n","export const langEn = {\n\tlogin: 'login',\n\t'Sign Up': 'Sign Up',\n\t'Email Address': 'Email Address',\n\tPassword: 'Password',\n\tlogout: 'logout',\n\tquit: 'withdrawal',\n\n\tExperiments: 'Experiments',\n\tseeOnlyAvailable: 'Show available experiments only',\n\tstatus: 'Status',\n\tlanguage: 'Language',\n\tlists: 'Lists',\n\t'my experiments': 'My Experiments',\n\t'experiment type': 'Experiment Type',\n\t'In Progress': 'In Progress',\n\tUnpublished: 'Unpublished',\n\tClosed: 'Closed',\n\n\tkorean: 'Korean',\n\tenglish: 'English',\n\tjapanese: 'Japanese',\n\tchinese: 'Chinese',\n\tfrench: 'French',\n\tspanish: 'Spanish',\n\n\tOnline: 'Online',\n\tOffline: 'Offline',\n\n\tPeople: 'People',\n\n\t'Events & News': 'Events & News',\n\tschedule: 'Schedule',\n\tcolloquium: 'Colloquium',\n\tseminar: 'Seminar',\n\tnews: 'News',\n\n\t'Research & Projects': 'Research & Projects',\n\n\t'My Page': 'My Page',\n\n\tConfirm: 'Confirm',\n\taddress:\n\t\t'Department of Linguistics, Seoul National University, Gwanak_1 Gwanak-ro, Seoul 151-745, Korea \\n Tel:+82-2-880-6164, Fax:+82-2-882-2451.',\n};\n","export const langKo = {\n\tlogin: '로그인',\n\t'Sign Up': '회원가입',\n\t'Email Address': '이메일',\n\tPassword: '패스워드',\n\tlogout: '로그아웃',\n\tquit: '회원 탈퇴',\n\n\tExperiments: '실험 참여',\n\tseeOnlyAvailable: '참여 가능한 실험만 보기',\n\tstatus: '실험 상태',\n\tlanguage: '언어',\n\tlists: '실험 목록',\n\t'my experiments': '내가 참여한 실험들',\n\t'experiment type': '실험 진행 방법',\n\t'In Progress': '진행중',\n\tUnpublished: '시작 전',\n\tClosed: '종료됨',\n\n\tkorean: '한국어',\n\tenglish: '영어',\n\tjapanese: '일본어',\n\tchinese: '중국어',\n\tfrench: '프랑스어',\n\tspanish: '스페인어',\n\n\tOnline: '온라인',\n\tOffline: '오프라인',\n\n\tPeople: '사람들',\n\n\t'Events & News': '이벤트 & 뉴스',\n\tschedule: '스케줄',\n\tcolloquium: '콜로퀴엄',\n\tseminar: '세미나',\n\tnews: '뉴스',\n\n\t'Research & Projects': '연구 & 프로젝트',\n\n\t'My Page': '마이페이지',\n\n\tConfirm: '확인',\n\taddress: `서울대학교 언어학과, 서울특별시 관악구 관악로 1, 2동 108호 (151-745).`,\n\tcontacts: `Email: linguist@snu.ac.kr 전화:(02)880-6164, 팩스:(02)882-2451.`,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './lang/i18n'; // 다국어 지원 파일\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}