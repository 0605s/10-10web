{"version":3,"sources":["lib/constant/Components.tsx","pages/Home.tsx","lib/constant/index.ts","lib/api/TokenHeader.ts","lib/api/requests/index.ts","store/TokenStore.tsx","store/UserStore.tsx","store/ToastStore.tsx","store/ExperimentStore.tsx","store/LoadingStore.tsx","store/Index.tsx","pages/Login.tsx","lib/reg.ts","components/experiment/ExperimentFilterButton.tsx","components/experiment/ExperimentFilter.tsx","components/experiment/ExperimentBox.tsx","components/experiment/ExperimentList.tsx","components/experiment/ExperimentBody.tsx","components/template/BannerTemplate.tsx","components/template/LeftMenuTemplate.tsx","components/template/PageTemplate.tsx","lib/menus.ts","pages/Experiment/ExperimentMain.tsx","components/Header.tsx","pages/People.tsx","pages/ResearchProjects.tsx","components/Footer.tsx","components/experiment/ExperimentDetailWarning.tsx","pages/Experiment/ExperimentDetail.tsx","components/TabNavigation.tsx","pages/Experiment/ExperimentMy.tsx","pages/SignUp.tsx","pages/EventsNews/EventsSchedule.tsx","pages/EventsNews/EventsColloquium.tsx","pages/EventsNews/EventsNews.tsx","pages/EventsNews/EventsSeminar.tsx","components/template/MyPageBoxTemplate.tsx","pages/MyPage.tsx","App.tsx","reportWebVitals.ts","lang/i18n.ts","lang/langEn.ts","lang/langKo.ts","index.tsx"],"names":["RowContainer","styled","div","window","screen","width","Math","floor","props","backgroundImg","Title","SubTitle","Content","SubContent","Home","API_BASE_URL","SNUGRAY","statusFilterList","name","value","lingualFilterList","map","lang","expTypeFilterList","TokenHeader","accessToken","res","this","e","console","error","params","headers","Authorization","undefined","GetRequest","url","axios","get","getHeader","PostRequest","body","post","TokenStore","observable","setAccessToken","token","saveAccessToken","localStorage","setItem","getAccessToken","success","getItem","data","clear","UserStore","user","setUser","signUp","email","pw","code","response","Token","status","login","getUserInfo","postUserInfo","favor","subscribe","lingual","logout","ToastStore","isOpen","message","type","text","setIsOpen","setMessage","ExperimentStore","experimentList","experimentDetail","setExperimentList","setExperimentDetail","experiment","getExperimentList","available","expType","length","is_full","exp_type","getExperimentDetail","id","putExperimentDetail","PutRequest","put","LoadingStore","loading","setLoading","useStore","LoginContainer","FormContainer","Login","observer","history","useHistory","t","useTranslation","useState","setEmail","emailError","setEmailError","setPw","pwError","setPwError","onSubmit","a","trim","test","result","push","Avatar","sx","m","bgcolor","Typography","component","variant","TextField","margin","required","label","autoComplete","fullWidth","autoFocus","onChange","event","target","Button","size","onClick","ExperimentFilterButton","isSelected","FilterContainer","ButtonList","Stack","ExperimentFilter","statusFilter","setStatusFilter","availableFilter","setavailableFilter","expTypeFilter","setExpTypeFilter","lingualFilter","setLingualFilter","onClickStatusButton","join","onClickAvailableButton","onClickExpTypeButton","onClickLingualButton","includes","filter","concat","spacing","direction","alignItems","item","FormControlLabel","control","Checkbox","checked","BoxContainer","OnOffChip","Chip","LanguageChip","BottomBar","isFull","ExperimentBox","onClickBox","useCallback","title","icon","split","ExperimentList","Grid","container","rowSpacing","columnSpacing","xs","md","ExperimentBody","getInit","useEffect","CircularProgress","BannerContainer","BannerTemplate","subTitle","Divider","orientation","flexItem","LeftMenuContainer","Tabs","MenuItem","Tab","LeftMenuTemplate","menu","location","useLocation","secondPath","pathname","domain","getMenu","PageTemplateContainer","InnerContainer","ChildrenContainer","PageTemplate","children","ExperimentMenus","EventsMenus","ExperimentMain","HeaderContainer","SnulingLogo","img","LoginButton","Header","i18n","src","process","alt","language","changeLanguage","username","People","ResearchProjects","FooterContainer","ColumnContainer","FooterLabel","siteList","Footer","href","rel","WarningContainer","ExperimentDetailWarning","fontSize","reward_type","reward_price","reward","BackButton","ExperimentDetail","useParams","parseInt","goBack","startIcon","dangerouslySetInnerHTML","__html","content","disabled","open","link","endIcon","TabContainer","tabs","TabNavigation","firstPath","getLocation","centered","ExperimentMy","SignUpContainer","SignUp","pwCheck","setPwCheck","EventsSchedule","EventsColloquium","EventsNews","EventsSeminar","TitleContainer","MyPageBoxTemplate","MyPage","onClickLogout","theme","createTheme","typography","fontFamily","App","checkUser","useObserver","basename","ThemeProvider","Box","flex","minHeight","path","exact","to","Snackbar","autoHideDuration","onClose","Alert","severity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","resources","en","translation","Password","Experiments","seeOnlyAvailable","address","ko","use","initReactI18next","init","lng","fallbackLng","default","debug","defaultNS","ns","keySeparator","interpolation","escapeValue","react","useSuspense","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39b57140.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const RowContainer = styled.div<{ backgroundImg?: string }>`\n\twidth: 100vw;\n\tdisplay: flex;\n\tbox-sizing: border-box;\n\talign-items: center;\n\tjustify-content: center;\n\tflex-direction: column;\n\tpadding: 10px max(calc((100vw - 1200px) / 2), 5vw);\n\t/* ${window.screen.width > 1100 ? Math.floor((window.screen.width - 1100) / 2) : '5vw'}; */\n\tbackground-image: url(${(props) => props.backgroundImg});\n`;\n\nexport const Title = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 500;\n\tfont-size: 3rem;\n\tpadding: 2rem 0px;\n\t/* border-bottom: 3px solid black; */\n`;\n\nexport const SubTitle = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 400;\n\tfont-size: 2rem;\n`;\n\nexport const Content = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 400;\n\tfont-size: 1.5rem;\n`;\n\nexport const SubContent = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 300;\n\tfont-size: 1rem;\n`;\n","// import { useHistory } from 'react-router';\nimport { RowContainer } from 'lib/constant/Components';\n\nconst Home = () => {\n\t// const history = useHistory();\n\n\treturn (\n\t\t<RowContainer>\n\t\t\t<div>홈페이지 제작중입니다. - team 0605s</div>\n\t\t</RowContainer>\n\t);\n};\n\nexport default Home;\n","import { FilterType, StatusType } from 'types/experiment';\n\nexport const API_BASE_URL = 'https://jinh0park.pythonanywhere.com/api/';\n\nexport const SNUBLUE = '#0f0f70';\nexport const SNUGRAY = '#666666';\nexport const SNUSILVER = '#D2D2D2';\n\nexport const languageList: string[] = [\n\t'korean',\n\t'english',\n\t'japanese',\n\t'chinese',\n\t'french',\n\t'spanish',\n];\n\nexport const statusFilterList: { name: string; value: StatusType }[] = [\n\t{\n\t\tname: 'In Progress',\n\t\tvalue: 'P',\n\t},\n\t{\n\t\tname: 'Unpublished',\n\t\tvalue: 'U',\n\t},\n\t{\n\t\tname: 'Closed',\n\t\tvalue: 'C',\n\t},\n];\n\nexport const lingualFilterList: { name: string; value: string }[] = languageList.map((lang) => {\n\treturn {\n\t\tname: lang,\n\t\tvalue: lang,\n\t};\n});\n\nexport const expTypeFilterList: { name: string; value: 'ON' | 'OFF' }[] = [\n\t{\n\t\tname: 'Online',\n\t\tvalue: 'ON',\n\t},\n\t{\n\t\tname: 'Offline',\n\t\tvalue: 'OFF',\n\t},\n];\n","class TokenHeader {\n\tstatic accessToken = '';\n\n\tstatic setAccessToken(accessToken: string) {\n\t\tlet res = false;\n\t\ttry {\n\t\t\tthis.accessToken = accessToken;\n\t\t\tres = true;\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn res;\n\t}\n\n\tstatic getHeader(params?: object) {\n\t\treturn {\n\t\t\theaders: {\n\t\t\t\tAuthorization: this.accessToken === '' ? undefined : `Token ${this.accessToken}`,\n\t\t\t},\n\t\t\tparams,\n\t\t};\n\t}\n}\n\nexport default TokenHeader;\n","import axios from 'axios';\nimport { API_BASE_URL } from '../../constant';\nimport TokenHeader from '../TokenHeader';\n\nexport const GetRequest = <T = any>(url: string, params?: object) =>\n\taxios.get<T>(`${API_BASE_URL}${url}`, TokenHeader.getHeader(params));\nexport const PostRequest = <T = any>(url: string, body?: object) =>\n\taxios.post<T>(`${API_BASE_URL}${url}`, body, TokenHeader.getHeader());\nexport const PutRequest = <T = any>(url: string, body?: object, params?: object) =>\n\taxios.put<T>(`${API_BASE_URL}${url}`, body, TokenHeader.getHeader(params));\nexport const DeleteRequest = <T = any>(url: string, params?: object) =>\n\taxios.delete<T>(`${API_BASE_URL}${url}`, TokenHeader.getHeader(params));\n","import { observable } from 'mobx';\n\nconst TokenStore = observable({\n\taccessToken: '' as string,\n\tsetAccessToken(token: string) {\n\t\tthis.accessToken = token;\n\t},\n\tsaveAccessToken(accessToken: string) {\n\t\ttry {\n\t\t\twindow.localStorage.setItem('ACCESS_TOKEN', accessToken);\n\t\t} catch (e) {\n\t\t\tconsole.error('========= setAccessToken Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t},\n\n\tasync getAccessToken() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst data = await window.localStorage.getItem('ACCESS_TOKEN');\n\t\t\tif (data && data !== null) this.setAccessToken(data);\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getAccessToken Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync clear() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tawait window.localStorage.clear();\n\t\t\tthis.setAccessToken('');\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= clear Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n});\n\nexport default TokenStore;\n","import { GetRequest, PostRequest } from 'lib/api/requests';\nimport TokenHeader from 'lib/api/TokenHeader';\nimport { observable } from 'mobx';\nimport { TokenType } from 'types/token';\nimport { UserType } from 'types/user';\nimport TokenStore from './TokenStore';\n\nconst UserStore = observable({\n\tuser: null as UserType | null,\n\tsetUser(user: UserType | null) {\n\t\tthis.user = user;\n\t},\n\n\tasync signUp(email: string, pw: string) {\n\t\tlet success = false;\n\t\tlet code = 200;\n\t\tlet token = '';\n\t\ttry {\n\t\t\tconst response = await PostRequest<TokenType>('signup/', {\n\t\t\t\temail,\n\t\t\t\tpw,\n\t\t\t});\n\t\t\ttoken = response.data.Token;\n\t\t\tcode = response.status;\n\t\t\t// this.setUserEmail(email);\n\t\t\tsuccess = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= SignUp Error =========');\n\t\t\tcode = e.response.status;\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn { success, code, token };\n\t},\n\n\tasync login(email: string, pw: string) {\n\t\tlet success = false;\n\t\tlet code = 200;\n\t\tlet token = '';\n\t\ttry {\n\t\t\tconst response = await PostRequest<TokenType>('login/', {\n\t\t\t\temail,\n\t\t\t\tpw,\n\t\t\t});\n\t\t\tif (response.status === 200) {\n\t\t\t\ttoken = response.data.Token;\n\t\t\t\tcode = response.status;\n\t\t\t\tsuccess = true;\n\t\t\t\tawait TokenStore.setAccessToken(response.data.Token);\n\t\t\t\tawait TokenStore.saveAccessToken(response.data.Token);\n\t\t\t\tconst res = await TokenHeader.setAccessToken(response.data.Token);\n\t\t\t\tif (res) this.getUserInfo();\n\t\t\t}\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= login Error =========');\n\t\t\tcode = e.response.status;\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn { success, code, token };\n\t},\n\n\tasync getUserInfo() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await GetRequest<UserType>('mypage/');\n\t\t\tthis.setUser(response.data);\n\t\t\tsuccess = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= getUserInfo Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync postUserInfo(favor: 'ONLINE' | 'OFFLINE' | null, subscribe: boolean, lingual: string) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await PostRequest<UserType>('mypage/', {\n\t\t\t\tfavor,\n\t\t\t\tsubscribe,\n\t\t\t\tlingual,\n\t\t\t});\n\t\t\tthis.setUser(response.data);\n\t\t\tsuccess = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= postUserInfo Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync logout() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tthis.setUser(null);\n\t\t\tTokenStore.clear();\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= signOutUser Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n});\n\nexport default UserStore;\n","import { observable } from 'mobx';\n\nconst ToastStore = observable({\n\tisOpen: false as boolean,\n\tmessage: { type: 'error', text: '' } as {\n\t\ttype: 'error' | 'warning' | 'info' | 'success';\n\t\ttext: string;\n\t},\n\n\tsetIsOpen(isOpen: boolean) {\n\t\tthis.isOpen = isOpen;\n\t},\n\tsetMessage(type: 'error' | 'warning' | 'info' | 'success', text: string) {\n\t\tthis.message.text = text;\n\t\tthis.message.type = type;\n\t\tthis.setIsOpen(true);\n\t},\n});\n\nexport default ToastStore;\n","import { GetRequest, PutRequest } from 'lib/api/requests';\nimport { observable } from 'mobx';\nimport { ExperimentType, StatusType } from 'types/experiment';\n\nconst ExperimentStore = observable({\n\texperimentList: [] as ExperimentType[],\n\texperimentDetail: {} as ExperimentType | undefined,\n\tsetExperimentList(experimentList: ExperimentType[]) {\n\t\tthis.experimentList = experimentList;\n\t},\n\tsetExperimentDetail(experiment: ExperimentType | undefined) {\n\t\tthis.experimentDetail = experiment;\n\t},\n\n\tasync getExperimentList(\n\t\tlingual?: string,\n\t\tstatus?: StatusType,\n\t\tavailable?: boolean,\n\t\texpType?: 'ON' | 'OFF',\n\t) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tthis.setExperimentList([]);\n\t\t\tconst response = await GetRequest('experiments/', {\n\t\t\t\tlingual: lingual && lingual.length > 0 ? lingual : undefined,\n\t\t\t\tstatus,\n\t\t\t\tis_full: available ? 'no' : undefined,\n\t\t\t\texp_type: expType,\n\t\t\t});\n\t\t\tthis.setExperimentList(response.data);\n\t\t\t// console.error('========= getExperimentList Success =========');\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getExperimentList Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync getExperimentDetail(id: number) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tthis.setExperimentDetail(undefined);\n\t\t\tconst response = await GetRequest(`experiments/${id}/`);\n\t\t\tthis.setExperimentDetail(response.data);\n\t\t\t// console.error('========= getExperimentDetail Success =========');\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getExperimentDetail Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync putExperimentDetail(id: number) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await PutRequest(`experiments/${id}/`);\n\t\t\tif (response.data === 200) success = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= putExperimentDetail Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n});\n\nexport default ExperimentStore;\n","import { observable } from 'mobx';\n\nconst LoadingStore = observable({\n\tloading: true as boolean,\n\tsetLoading(loading: boolean) {\n\t\tthis.loading = loading;\n\t},\n});\n\nexport default LoadingStore;\n","import UserStore from './UserStore';\nimport TokenStore from './TokenStore';\nimport ToastStore from './ToastStore';\nimport ExperimentStore from './ExperimentStore';\nimport LoadingStore from './LoadingStore';\n\nconst useStore = () => {\n\treturn {\n\t\tUserStore,\n\t\tTokenStore,\n\t\tToastStore,\n\t\tExperimentStore,\n\t\tLoadingStore,\n\t};\n};\n\nexport default useStore;\n","import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { useHistory } from 'react-router';\nimport useStore from 'store/Index';\nimport { useTranslation } from 'react-i18next';\nimport { Typography, Avatar, TextField, Button, FormGroup, useFormControl } from '@mui/material';\nimport PersonIcon from '@mui/icons-material/Person';\nimport styled from 'styled-components';\nimport { RowContainer } from 'lib/constant/Components';\nimport { checkEmail } from 'lib/reg';\nimport TokenHeader from 'lib/api/TokenHeader';\nimport TokenStore from 'store/TokenStore';\n\nconst LoginContainer = styled(RowContainer)`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\nconst FormContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\twidth: 50%;\n`;\n\nconst Login = observer(() => {\n\tconst { UserStore, ToastStore, TokenStore } = useStore();\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\tconst [email, setEmail] = useState<string>('');\n\tconst [emailError, setEmailError] = useState<boolean>(false);\n\tconst [pw, setPw] = useState<string>('');\n\tconst [pwError, setPwError] = useState<boolean>(false);\n\n\tconst onSubmit = async () => {\n\t\tif (email.trim().length === 0) {\n\t\t\tToastStore.setMessage('warning', '이메일을 입력해주세요');\n\t\t\tsetEmailError(true);\n\t\t} else if (!checkEmail(email.trim())) {\n\t\t\tToastStore.setMessage('warning', '올바른 이메일을 입력해주세요');\n\t\t\tsetEmailError(true);\n\t\t} else if (pw.trim().length === 0) {\n\t\t\tToastStore.setMessage('warning', '비밀번호를 입력하세요');\n\t\t\tsetPwError(true);\n\t\t} else {\n\t\t\tconst result = await UserStore.login(email, pw);\n\t\t\tif (!result || result.code >= 500) {\n\t\t\t\tToastStore.setMessage('error', '서버 오류');\n\t\t\t} else if (result && result.code >= 401 && result) {\n\t\t\t\tToastStore.setMessage('error', '존재하지 않는 계정이거나 비밀번호가 틀립니다');\n\t\t\t\tsetEmailError(true);\n\t\t\t\tsetPwError(true);\n\t\t\t} else {\n\t\t\t\tToastStore.setMessage('success', `${email}로 로그인 되었습니다.`);\n\t\t\t\thistory.push('/');\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<LoginContainer>\n\t\t\t<Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n\t\t\t\t<PersonIcon />\n\t\t\t</Avatar>\n\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t{t('login')}\n\t\t\t</Typography>\n\t\t\t<FormContainer>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\trequired\n\t\t\t\t\tid=\"email\"\n\t\t\t\t\tlabel={t('Email Address')}\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tautoFocus\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\tsetEmail(event.target.value)\n\t\t\t\t\t}\n\t\t\t\t\terror={emailError}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\trequired\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tlabel={t('Password')}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\tsetPw(event.target.value)\n\t\t\t\t\t}\n\t\t\t\t\terror={pwError}\n\t\t\t\t/>\n\t\t\t</FormContainer>\n\t\t\t{/* <FormControlLabel\n\t\t\t\t\tcontrol={<Checkbox value=\"remember\" color=\"primary\" />}\n\t\t\t\t\tlabel=\"Remember me\"\n\t\t\t\t/> */}\n\t\t\t<Button variant=\"text\" size=\"medium\" onClick={() => history.push('/signup')}>\n\t\t\t\t계정이 없으신가요?\n\t\t\t</Button>\n\t\t\t<Button type=\"submit\" size=\"medium\" variant=\"contained\" onClick={onSubmit}>\n\t\t\t\t{t('login')}\n\t\t\t</Button>\n\t\t</LoginContainer>\n\t);\n});\n\nexport default Login;\n","export const checkEmail = (text: string) => {\n\tconst regEmail = /^([0-9a-zA-Z_\\.-]+)@([0-9a-zA-Z_-]+)(\\.[0-9a-zA-Z_-]+){1,2}$/;\n\treturn regEmail.test(text);\n};\n","import { Button } from '@mui/material';\n\ninterface Props {\n\tname: string;\n\tisSelected: boolean;\n\tonClick: () => void;\n}\n\nconst ExperimentFilterButton = ({ name, isSelected, onClick }: Props) => {\n\treturn (\n\t\t<Button variant={isSelected ? 'contained' : 'outlined'} onClick={onClick}>\n\t\t\t{name}\n\t\t</Button>\n\t);\n};\n\nexport default ExperimentFilterButton;\n","import styled from 'styled-components';\nimport { FormControlLabel, Stack, Checkbox } from '@mui/material';\nimport { expTypeFilterList, lingualFilterList, statusFilterList } from 'lib/constant';\nimport { useState } from 'react';\nimport useStore from 'store/Index';\nimport { observer } from 'mobx-react';\nimport { StatusType } from 'types/experiment';\nimport { useTranslation } from 'react-i18next';\nimport { SubContent } from 'lib/constant/Components';\nimport ExperimentFilterButton from './ExperimentFilterButton';\n\nconst FilterContainer = styled.div`\n\tpadding: 20px 0px;\n`;\nconst ButtonList = styled(Stack)`\n\tmargin: 20px 0px;\n`;\n\nconst ExperimentFilter = observer(() => {\n\tconst { ExperimentStore, LoadingStore } = useStore();\n\tconst { t } = useTranslation();\n\tconst [statusFilter, setStatusFilter] = useState<StatusType | undefined>(undefined);\n\tconst [availableFilter, setavailableFilter] = useState<boolean>(false);\n\tconst [expTypeFilter, setExpTypeFilter] = useState<'ON' | 'OFF' | undefined>(undefined);\n\tconst [lingualFilter, setLingualFilter] = useState<string[]>([]);\n\n\tconst onClickStatusButton = async (value: StatusType) => {\n\t\tLoadingStore.setLoading(true);\n\t\tsetStatusFilter(statusFilter === value ? undefined : value);\n\t\tlet res = await ExperimentStore.getExperimentList(\n\t\t\tlingualFilter.join(','),\n\t\t\tstatusFilter === value ? undefined : value,\n\t\t\tavailableFilter,\n\t\t\texpTypeFilter,\n\t\t);\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\tconst onClickAvailableButton = async (value: boolean) => {\n\t\tLoadingStore.setLoading(true);\n\t\tsetavailableFilter(value);\n\t\tlet res = await ExperimentStore.getExperimentList(\n\t\t\tlingualFilter.join(','),\n\t\t\tstatusFilter,\n\t\t\tvalue,\n\t\t\texpTypeFilter,\n\t\t);\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\tconst onClickExpTypeButton = async (value: 'ON' | 'OFF') => {\n\t\tLoadingStore.setLoading(true);\n\t\tsetExpTypeFilter(expTypeFilter === value ? undefined : value);\n\t\tlet res = await ExperimentStore.getExperimentList(\n\t\t\tlingualFilter.join(','),\n\t\t\tstatusFilter,\n\t\t\tavailableFilter,\n\t\t\texpTypeFilter === value ? undefined : value,\n\t\t);\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\tconst onClickLingualButton = async (value: string) => {\n\t\tLoadingStore.setLoading(true);\n\t\tsetLingualFilter(\n\t\t\tlingualFilter.includes(value)\n\t\t\t\t? lingualFilter.filter((e) => e !== value)\n\t\t\t\t: lingualFilter.concat(value),\n\t\t);\n\t\tlet res = await ExperimentStore.getExperimentList(\n\t\t\tlingualFilter.includes(value)\n\t\t\t\t? lingualFilter.filter((e) => e !== value).join(',')\n\t\t\t\t: lingualFilter.concat(value).join(','),\n\t\t\tstatusFilter,\n\t\t\tavailableFilter,\n\t\t\texpTypeFilter,\n\t\t);\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\treturn (\n\t\t<FilterContainer>\n\t\t\t<ButtonList spacing={2} direction=\"row\" alignItems=\"center\">\n\t\t\t\t<SubContent>{t('status')}</SubContent>\n\t\t\t\t{statusFilterList.map((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ExperimentFilterButton\n\t\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t\t\tisSelected={statusFilter === item.value}\n\t\t\t\t\t\t\tonClick={() => onClickStatusButton(item.value)}\n\t\t\t\t\t\t\tkey={item.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ButtonList>\n\t\t\t<ButtonList spacing={2} direction=\"row\" alignItems=\"center\">\n\t\t\t\t<SubContent>{t('language')}</SubContent>\n\t\t\t\t{lingualFilterList.map((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ExperimentFilterButton\n\t\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t\t\tisSelected={lingualFilter.includes(item.value)}\n\t\t\t\t\t\t\tonClick={() => onClickLingualButton(item.value)}\n\t\t\t\t\t\t\tkey={item.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ButtonList>\n\t\t\t<ButtonList spacing={2} direction=\"row\" alignItems=\"center\">\n\t\t\t\t<SubContent>{t('experiment type')}</SubContent>\n\t\t\t\t{expTypeFilterList.map((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ExperimentFilterButton\n\t\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t\t\tisSelected={expTypeFilter === item.value}\n\t\t\t\t\t\t\tonClick={() => onClickExpTypeButton(item.value)}\n\t\t\t\t\t\t\tkey={item.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ButtonList>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tchecked={availableFilter === true}\n\t\t\t\t\t\tonClick={() => onClickAvailableButton(!availableFilter)}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel={t('seeOnlyAvailable')}\n\t\t\t/>\n\t\t</FilterContainer>\n\t);\n});\n\nexport default ExperimentFilter;\n","import { ExperimentType } from 'types/experiment';\nimport styled from 'styled-components';\nimport { Content, SubTitle, SubContent } from 'lib/constant/Components';\nimport { useHistory } from 'react-router';\nimport { useCallback } from 'react';\nimport { Chip, Stack } from '@mui/material';\nimport PublicIcon from '@mui/icons-material/Public';\nimport CloudOffIcon from '@mui/icons-material/CloudOff';\nimport { SNUGRAY } from 'lib/constant';\n\nconst BoxContainer = styled.div`\n\twidth: 100%;\n\theight: 350px;\n\tborder-radius: 10px;\n\tbox-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tposition: relative;\n\t:hover {\n\t\topacity: 0.7;\n\t\tcursor: pointer;\n\t}\n`;\n\nconst OnOffChip = styled(Chip)`\n\tfont-size: 1rem;\n\tfont-weight: 400;\n\tposition: absolute;\n\ttop: 5%;\n\tright: 5%;\n\tz-index: 2;\n`;\n\nconst LanguageChip = styled(Chip)``;\n\nconst BottomBar = styled.div<{ isFull: boolean }>`\n\tposition: absolute;\n\tbottom: 0px;\n\twidth: 100%;\n\theight: 15%;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tborder-radius: 0px 0px 10px 10px;\n\tbackground-color: ${(props) => (props.isFull ? SNUGRAY : 'green')};\n\tcolor: white;\n\tfont-size: 1.3 rem;\n\tfont-weight: 500;\n`;\n\ninterface Props {\n\titem: ExperimentType;\n}\n\nconst ExperimentBox = ({ item }: Props) => {\n\tconst history = useHistory();\n\n\tconst onClickBox = useCallback(() => {\n\t\thistory.push(`/experiment/${item.id}`);\n\t}, []);\n\n\treturn (\n\t\t<BoxContainer onClick={onClickBox}>\n\t\t\t<SubTitle>{item.title}</SubTitle>\n\t\t\t{item.exp_type === 'ON' ? (\n\t\t\t\t<OnOffChip icon={<PublicIcon />} label=\"ONLINE\" />\n\t\t\t) : (\n\t\t\t\t<OnOffChip icon={<CloudOffIcon />} label=\"OFFLINE\" />\n\t\t\t)}\n\t\t\t{/* <Content>{item.exp_type === 'ON' ? 'Online' : 'Offline'}</Content> */}\n\t\t\t{/* <Content>{item.status}</Content> */}\n\t\t\t<SubContent>대상 모국어</SubContent>\n\t\t\t<Stack direction=\"row\" spacing={2}>\n\t\t\t\t{item.lingual &&\n\t\t\t\t\titem.lingual.split(',').map((lang) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<LanguageChip\n\t\t\t\t\t\t\t\tlabel={`# ${lang}`}\n\t\t\t\t\t\t\t\tkey={lang}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t</Stack>\n\t\t\t<BottomBar isFull={item.is_full}>{item.is_full ? '모집 완료 >' : '모집중 >'}</BottomBar>\n\t\t\t{/* <Content>{item.reward_price}</Content> */}\n\t\t</BoxContainer>\n\t);\n};\n\nexport default ExperimentBox;\n","import { Grid } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport useStore from 'store/Index';\nimport ExperimentBox from './ExperimentBox';\n\nconst ExperimentList = observer(() => {\n\tconst { ExperimentStore } = useStore();\n\n\treturn (\n\t\t<Grid container rowSpacing={2} columnSpacing={3} alignItems=\"center\">\n\t\t\t{ExperimentStore.experimentList.map((item) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Grid item key={item.title} xs={12} md={6}>\n\t\t\t\t\t\t<ExperimentBox item={item} key={item.title} />\n\t\t\t\t\t</Grid>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Grid>\n\t);\n});\n\nexport default ExperimentList;\n","import { CircularProgress } from '@mui/material';\nimport { Content } from 'lib/constant/Components';\nimport { observer } from 'mobx-react';\nimport { useEffect } from 'react';\nimport useStore from 'store/Index';\nimport ExperimentFilter from './ExperimentFilter';\nimport ExperimentList from './ExperimentList';\n\nconst ExperimentBody = observer(() => {\n\tconst { ExperimentStore, LoadingStore } = useStore();\n\n\tconst getInit = async () => {\n\t\tLoadingStore.setLoading(true);\n\t\tconst res = await ExperimentStore.getExperimentList();\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\tuseEffect(() => {\n\t\tgetInit();\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<ExperimentFilter />\n\t\t\t{/* <Divider orientation=\"horizontal\" variant=\"middle\" flexItem /> */}\n\t\t\t{LoadingStore.loading ? (\n\t\t\t\t<CircularProgress />\n\t\t\t) : ExperimentStore.experimentList.length ? (\n\t\t\t\t<ExperimentList />\n\t\t\t) : (\n\t\t\t\t<Content>no exp</Content>\n\t\t\t)}\n\t\t</>\n\t);\n});\n\nexport default ExperimentBody;\n","import styled from 'styled-components';\nimport { Divider } from '@mui/material';\nimport { Title } from 'lib/constant/Components';\nimport { useTranslation } from 'react-i18next';\n\nconst BannerContainer = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\tjustify-content: center;\n`;\n\ninterface Props {\n\ttitle: string;\n\tsubTitle?: string;\n\t// backgroundImg?: string;\n}\n\nconst BannerTemplate = ({ title, subTitle }: Props) => {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<BannerContainer>\n\t\t\t<Title>{t(title)}</Title>\n\t\t\t<Divider orientation=\"horizontal\" variant=\"middle\" flexItem />\n\t\t\t{/* {subTitle && <Content>{subTitle}</Content>} */}\n\t\t</BannerContainer>\n\t);\n};\n\nexport default BannerTemplate;\n","import { Tab, Tabs } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst LeftMenuContainer = styled(Tabs)`\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nconst MenuItem = styled(Tab)`\n\twidth: 200px;\n\tfont-size: 20px;\n\theight: 50px;\n`;\n\ninterface Props {\n\tmenu: { title: string; domain: string }[];\n}\n\nconst LeftMenuTemplate = ({ menu }: Props) => {\n\tconst location = useLocation();\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\n\tconst getMenu = () => {\n\t\tconst secondPath = location.pathname;\n\t\tif (menu.map((e) => e.domain).includes(secondPath)) return `${secondPath}`;\n\t\treturn false;\n\t};\n\n\treturn (\n\t\t<LeftMenuContainer value={getMenu()} orientation=\"vertical\">\n\t\t\t{menu.map((item) => {\n\t\t\t\treturn (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tlabel={t(item.title)}\n\t\t\t\t\t\tvalue={item.domain}\n\t\t\t\t\t\tkey={item.title}\n\t\t\t\t\t\tonClick={() => history.push(`${item.domain}`)}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</LeftMenuContainer>\n\t);\n};\n\nexport default LeftMenuTemplate;\n","import { RowContainer } from 'lib/constant/Components';\nimport { ReactNode } from 'react';\nimport styled from 'styled-components';\nimport BannerTemplate from './BannerTemplate';\nimport LeftMenuTemplate from './LeftMenuTemplate';\n\nconst PageTemplateContainer = styled.div`\n\tflex: 1;\n\twidth: 100vw;\n\tbox-sizing: border-box;\n\tpadding: 10px max(calc((100vw - 1000px) / 2), 5vw);\n`;\n\nconst InnerContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: row;\n`;\n\nconst ChildrenContainer = styled.div`\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\ninterface Props {\n\ttitle?: string;\n\tmenu?: { title: string; domain: string }[];\n\tchildren?: ReactNode;\n}\n\nconst PageTemplate = ({ title, menu, children }: Props) => {\n\treturn (\n\t\t<PageTemplateContainer>\n\t\t\t{title && <BannerTemplate title={title} />}\n\t\t\t<InnerContainer>\n\t\t\t\t{menu && <LeftMenuTemplate menu={menu} />}\n\t\t\t\t<ChildrenContainer>{children && children}</ChildrenContainer>\n\t\t\t</InnerContainer>\n\t\t</PageTemplateContainer>\n\t);\n};\n\nexport default PageTemplate;\n","export const ExperimentMenus = [\n\t{\n\t\ttitle: 'Lists',\n\t\tdomain: '/experiment',\n\t},\n\t{\n\t\ttitle: 'My Experiments',\n\t\tdomain: '/experiment/my',\n\t},\n];\n\nexport const EventsMenus = [\n\t{\n\t\ttitle: 'Schedule',\n\t\tdomain: '/event/schedule',\n\t},\n\t{\n\t\ttitle: 'Colloquium',\n\t\tdomain: '/event/colloquium',\n\t},\n\t{\n\t\ttitle: 'Seminar',\n\t\tdomain: '/event/seminar',\n\t},\n\t{\n\t\ttitle: 'News',\n\t\tdomain: '/event/news',\n\t},\n];\n\nexport const ResearchMenus = [\n\t{\n\t\ttitle: 'Themes',\n\t\tdomain: '/research/themes',\n\t},\n\t{\n\t\ttitle: 'Labs',\n\t\tdomain: '/research/labs',\n\t},\n\t{\n\t\ttitle: 'Affiliated Projects',\n\t\tdomain: '/event/affiliatedProjects',\n\t},\n];\n","import BannerTemplate from 'components/template/BannerTemplate';\nimport ExperimentBody from 'components/experiment/ExperimentBody';\nimport PageTemplate from 'components/template/PageTemplate';\nimport { ExperimentMenus } from 'lib/menus';\n\nconst ExperimentMain = () => {\n\treturn (\n\t\t<PageTemplate title=\"Experiments\" menu={ExperimentMenus}>\n\t\t\t<ExperimentBody />\n\t\t</PageTemplate>\n\t);\n};\n\nexport default ExperimentMain;\n","import styled from 'styled-components';\nimport Button from '@mui/material/Button';\nimport { useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { Stack } from '@mui/material';\nimport useStore from 'store/Index';\nimport { observer } from 'mobx-react';\nimport { SubContent } from 'lib/constant/Components';\n\nconst HeaderContainer = styled.div`\n\twidth: 100vw;\n\theight: 100px;\n\tbox-sizing: border-box;\n\tpadding: 10px max(calc((100vw - 1000px) / 2), 5vw);\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tjustify-content: space-between;\n`;\n\nconst SnulingLogo = styled.img`\n\twidth: 200px;\n\theight: auto;\n\topacity: 1;\n\t:hover {\n\t\topacity: 0.8;\n\t\tcursor: pointer;\n\t}\n`;\n\nconst LoginButton = styled(Button)``;\n\nconst Header = observer(() => {\n\tconst history = useHistory();\n\tconst { i18n, t } = useTranslation();\n\tconst { UserStore } = useStore();\n\n\tconst onClickChangeLanguage = () => {\n\t\tif (i18n.language === 'ko') i18n.changeLanguage('en');\n\t\telse if (i18n.language === 'en') i18n.changeLanguage('ko');\n\t};\n\n\treturn (\n\t\t<HeaderContainer>\n\t\t\t<SnulingLogo\n\t\t\t\tsrc={`${process.env.PUBLIC_URL}/img/snuling_logo.png`}\n\t\t\t\talt=\"\"\n\t\t\t\tonClick={() => history.push('/')}\n\t\t\t/>\n\t\t\t<Stack spacing={2} direction=\"row\" alignItems=\"center\">\n\t\t\t\t<Button variant=\"text\" onClick={onClickChangeLanguage}>\n\t\t\t\t\t{i18n.language === 'ko' ? 'English' : '한국어'}\n\t\t\t\t</Button>\n\t\t\t\t{UserStore.user !== null ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<SubContent>{UserStore.user?.username}</SubContent>\n\n\t\t\t\t\t\t<LoginButton variant=\"text\" onClick={() => history.push('/mypage')}>\n\t\t\t\t\t\t\t{t('My Page')}\n\t\t\t\t\t\t</LoginButton>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<LoginButton variant=\"contained\" onClick={() => history.push('/login')}>\n\t\t\t\t\t\t\t{t('login')}\n\t\t\t\t\t\t</LoginButton>\n\t\t\t\t\t\t<LoginButton variant=\"text\" onClick={() => history.push('/signup')}>\n\t\t\t\t\t\t\t{t('Sign Up')}\n\t\t\t\t\t\t</LoginButton>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Stack>\n\t\t</HeaderContainer>\n\t);\n});\n\nexport default Header;\n","import PageTemplate from 'components/template/PageTemplate';\n\nconst People = () => {\n\treturn <PageTemplate title=\"People\" />;\n};\n\nexport default People;\n","import BannerTemplate from 'components/template/BannerTemplate';\nimport PageTemplate from 'components/template/PageTemplate';\n\nconst ResearchProjects = () => {\n\treturn <PageTemplate title=\"Research & Projects\" />;\n};\n\nexport default ResearchProjects;\n","import { SNUGRAY } from 'lib/constant';\nimport { RowContainer, SubContent } from 'lib/constant/Components';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nconst FooterContainer = styled(RowContainer)`\n\tbackground-color: ${SNUGRAY};\n\theight: 200px;\n\tpadding: 0px 10vw;\n\tdisplay: flex;\n\tflex-direction: row;\n`;\n\nconst ColumnContainer = styled.div<{ type: 'left' | 'right' }>`\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: ${(props) => props.type === 'right' && 'flex-end'};\n`;\n\nconst SnulingLogo = styled.img`\n\twidth: 200px;\n\theight: auto;\n\topacity: 1;\n\tmargin-bottom: 20px;\n\t:hover {\n\t\tcursor: pointer;\n\t}\n`;\n\nconst FooterLabel = styled(SubContent)`\n\tcolor: white;\n\ttext-align: left;\n\tline-height: 25px;\n\ttext-decoration: none;\n`;\n\nconst siteList: { name: string; url: string }[] = [\n\t{ name: '언어학과 홈페이지', url: 'http://hosting01.snu.ac.kr/~linguist/' },\n\t{ name: '서울대학교 인문대학', url: 'http://humanities.snu.ac.kr' },\n];\nconst Footer = () => {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<FooterContainer>\n\t\t\t<ColumnContainer type=\"left\">\n\t\t\t\t<SnulingLogo\n\t\t\t\t\tsrc={`${process.env.PUBLIC_URL}/img/snuling_logo.png`}\n\t\t\t\t\talt=\"snuling_logo\"\n\t\t\t\t/>\n\t\t\t\t<FooterLabel>{t('address')}</FooterLabel>\n\t\t\t</ColumnContainer>\n\t\t\t<ColumnContainer type=\"right\">\n\t\t\t\t<FooterLabel>관련 사이트</FooterLabel>\n\t\t\t\t{siteList.map((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<a href={item.url} key={item.name} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t\t<FooterLabel>{item.name}</FooterLabel>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ColumnContainer>\n\t\t</FooterContainer>\n\t);\n};\n\nexport default Footer;\n","import { ExperimentType } from 'types/experiment';\nimport styled from 'styled-components';\nimport WarningIcon from '@mui/icons-material/Warning';\nimport { Stack } from '@mui/material';\nimport { SubContent } from 'lib/constant/Components';\nimport { useTranslation } from 'react-i18next';\n\nconst WarningContainer = styled.div`\n\twidth: 70%;\n\tpadding: 10px;\n\tborder-radius: 10px;\n\tbackground-color: #fcf7ae;\n\tmargin: 10px 0px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tbox-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\n`;\n\nconst RowContainer = styled(SubContent)`\n\tmargin: 5px 0px;\n\tdisplay: flex;\n\talign-items: center;\n`;\n\ninterface Props {\n\texperiment: ExperimentType;\n}\n\nconst ExperimentDetailWarning = ({ experiment }: Props) => {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<WarningContainer>\n\t\t\t<RowContainer>\n\t\t\t\t<WarningIcon fontSize=\"small\" />\n\t\t\t\t주의사항\n\t\t\t</RowContainer>\n\t\t\t<RowContainer>\n\t\t\t\t{experiment.exp_type === 'ON'\n\t\t\t\t\t? '본 실험은 온라인으로 진행됩니다.'\n\t\t\t\t\t: `본 실험은 ${experiment.location}에서 오프라인으로 진행됩니다.`}\n\t\t\t</RowContainer>\n\t\t\t<RowContainer>\n\t\t\t\t본 실험에 참여해 주시면{' '}\n\t\t\t\t{experiment.reward_type === 'CASH'\n\t\t\t\t\t? `${experiment.reward_price}원을 현금으로 지급해 드립니다.`\n\t\t\t\t\t: `${experiment.reward}를 드립니다.`}\n\t\t\t</RowContainer>\n\t\t</WarningContainer>\n\t);\n};\n\nexport default ExperimentDetailWarning;\n","import styled from 'styled-components';\nimport Button from '@mui/material/Button';\nimport PageTemplate from 'components/template/PageTemplate';\nimport { ExperimentMenus } from 'lib/menus';\nimport { observer } from 'mobx-react';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { useParams } from 'react-router-dom';\nimport useStore from 'store/Index';\nimport CreateIcon from '@mui/icons-material/Create';\nimport { SubTitle, Content } from 'lib/constant/Components';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport ExperimentDetailWarning from 'components/experiment/ExperimentDetailWarning';\n\nconst BackButton = styled(Button)`\n\talign-self: flex-start;\n`;\nconst ExperimentDetail = observer(() => {\n\tconst { id } = useParams<{ id: string }>();\n\tconst history = useHistory();\n\tconst { ExperimentStore, UserStore, ToastStore } = useStore();\n\n\tconst onClickAssign = () => {\n\t\tif (UserStore.user === null)\n\t\t\tToastStore.setMessage('info', '실험에 참여하시려면 먼저 로그인을 해주세요');\n\t\telse if (ExperimentStore.experimentDetail?.exp_type === 'ON') {\n\t\t\tExperimentStore.putExperimentDetail(parseInt(id, 10));\n\t\t\tToastStore.setMessage('success', '실험에 참여되었습니다');\n\t\t\twindow.open(ExperimentStore.experimentDetail.link, '_blank');\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tExperimentStore.getExperimentDetail(parseInt(id, 10));\n\t}, []);\n\n\tif (!ExperimentStore.experimentDetail) return null;\n\treturn (\n\t\t<PageTemplate title=\"Experiments\" menu={ExperimentMenus}>\n\t\t\t<BackButton onClick={() => history.goBack()} startIcon={<ArrowBackIosIcon />}>\n\t\t\t\t목록으로 가기\n\t\t\t</BackButton>\n\t\t\t<SubTitle>{ExperimentStore.experimentDetail.title}</SubTitle>\n\t\t\t<Content\n\t\t\t\tdangerouslySetInnerHTML={{ __html: `${ExperimentStore.experimentDetail.content}` }}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tdisabled={ExperimentStore.experimentDetail.is_full}\n\t\t\t\tonClick={onClickAssign}\n\t\t\t\tendIcon={<CreateIcon />}\n\t\t\t\tvariant=\"contained\"\n\t\t\t>\n\t\t\t\t{ExperimentStore.experimentDetail.is_full ? '모집 마감' : '실험 참여하기'}\n\t\t\t</Button>\n\t\t\t<ExperimentDetailWarning experiment={ExperimentStore.experimentDetail} />\n\t\t</PageTemplate>\n\t);\n});\n\nexport default ExperimentDetail;\n","import styled from 'styled-components';\nimport { Tab, Tabs } from '@mui/material';\nimport { useHistory, useLocation } from 'react-router';\nimport { useTranslation } from 'react-i18next';\n\nconst TabContainer = styled(Tabs)`\n\twidth: 100vw;\n\tbox-sizing: border-box;\n\tpadding: 10px max(calc((100vw - 1000px) / 2), 5vw);\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tbackground-color: #cdcdcd;\n`;\n\nconst MenuItem = styled(Tab)`\n\tfont-size: 20px;\n`;\n\nconst tabs: { title: string; url: string }[] = [\n\t{ title: 'People', url: '/people' },\n\t{ title: 'Events & News', url: '/event/schedule' },\n\t{ title: 'Research & Projects', url: '/research' },\n\t{ title: 'Experiments', url: '/experiment' },\n\t// { title: 'Contact Us', url: '/contact' },\n];\n\nconst TabNavigation = () => {\n\tconst location = useLocation();\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\n\tconst getLocation = () => {\n\t\tconst firstPath = location.pathname.split('/')[1];\n\t\tif (['people', 'event', 'research', 'experiment'].includes(firstPath))\n\t\t\treturn `/${firstPath}`;\n\t\treturn false;\n\t};\n\n\treturn (\n\t\t<TabContainer value={getLocation()} centered variant=\"fullWidth\">\n\t\t\t{tabs.map((item) => {\n\t\t\t\treturn (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tlabel={t(item.title)}\n\t\t\t\t\t\tvalue={item.url}\n\t\t\t\t\t\tkey={item.title}\n\t\t\t\t\t\tonClick={() => history.push(`${item.url}`)}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</TabContainer>\n\t);\n};\n\nexport default TabNavigation;\n","import BannerTemplate from 'components/template/BannerTemplate';\nimport ExperimentBody from 'components/experiment/ExperimentBody';\nimport PageTemplate from 'components/template/PageTemplate';\nimport { Route, Router } from 'react-router';\n\nexport const ExperimentMenus = [\n\t{\n\t\ttitle: 'Lists',\n\t\tdomain: '/experiment',\n\t},\n\t{\n\t\ttitle: 'My Experiments',\n\t\tdomain: '/experiment/my',\n\t},\n];\n\nconst ExperimentMy = () => {\n\treturn <PageTemplate title=\"Experiments\" menu={ExperimentMenus} />;\n};\n\nexport default ExperimentMy;\n","import React, { useCallback, useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { useHistory } from 'react-router';\nimport useStore from 'store/Index';\nimport { useTranslation } from 'react-i18next';\nimport { Typography, Avatar, TextField, Button, FormGroup } from '@mui/material';\nimport styled from 'styled-components';\nimport { RowContainer } from 'lib/constant/Components';\n\nconst SignUpContainer = styled(RowContainer)`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\nconst FormContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\twidth: 50%;\n`;\n\nconst SignUp = observer(() => {\n\tconst { UserStore, ToastStore } = useStore();\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\tconst [email, setEmail] = useState<string>('');\n\tconst [pw, setPw] = useState<string>('');\n\tconst [pwCheck, setPwCheck] = useState<string>('');\n\n\tconst onSubmit = () => {\n\t\tif (email.trim().length === 0) {\n\t\t\tToastStore.setMessage('warning', '이메일을 입력해주세요');\n\t\t} else if (pw.trim().length === 0) {\n\t\t\tToastStore.setMessage('warning', '비밀번호를 입력하세요');\n\t\t} else if (pwCheck !== pw) {\n\t\t\tToastStore.setMessage('warning', '비밀번호가 일치하지 않습니다');\n\t\t} else {\n\t\t\tUserStore.signUp(email, pw);\n\t\t\thistory.push('/');\n\t\t}\n\t};\n\n\treturn (\n\t\t<SignUpContainer>\n\t\t\t{/* <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n\t\t\t\t<LockOutlinedIcon />\n\t\t\t</Avatar> */}\n\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t{t('Sign Up')}\n\t\t\t</Typography>\n\t\t\t<FormContainer>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\trequired\n\t\t\t\t\tid=\"email\"\n\t\t\t\t\tlabel={t('Email Address')}\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tautoFocus\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\tsetEmail(event.target.value)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\trequired\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tlabel={t('Password')}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\tsetPw(event.target.value)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\trequired\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tlabel={t('Password')}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\tsetPwCheck(event.target.value)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</FormContainer>\n\t\t\t{/* <FormControlLabel\n\t\t\t\t\tcontrol={<Checkbox value=\"remember\" color=\"primary\" />}\n\t\t\t\t\tlabel=\"Remember me\"\n\t\t\t\t/> */}\n\t\t\t<Button type=\"submit\" size=\"medium\" variant=\"contained\" onClick={onSubmit}>\n\t\t\t\t{t('Sign Up')}\n\t\t\t</Button>\n\t\t</SignUpContainer>\n\t);\n});\n\nexport default SignUp;\n","import PageTemplate from 'components/template/PageTemplate';\nimport { EventsMenus } from 'lib/menus';\n\nconst EventsSchedule = () => {\n\treturn <PageTemplate title=\"Events & News\" menu={EventsMenus} />;\n};\n\nexport default EventsSchedule;\n","import PageTemplate from 'components/template/PageTemplate';\nimport { EventsMenus } from 'lib/menus';\n\nconst EventsColloquium = () => {\n\treturn <PageTemplate title=\"Events & News\" menu={EventsMenus} />;\n};\n\nexport default EventsColloquium;\n","import PageTemplate from 'components/template/PageTemplate';\nimport { EventsMenus } from 'lib/menus';\n\nconst EventsNews = () => {\n\treturn <PageTemplate title=\"Events & News\" menu={EventsMenus} />;\n};\n\nexport default EventsNews;\n","import PageTemplate from 'components/template/PageTemplate';\nimport { EventsMenus } from 'lib/menus';\n\nconst EventsSeminar = () => {\n\treturn <PageTemplate title=\"Events & News\" menu={EventsMenus} />;\n};\n\nexport default EventsSeminar;\n","import { SNUBLUE } from 'lib/constant';\nimport { SubTitle } from 'lib/constant/Components';\nimport { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nconst BoxContainer = styled.div`\n\twidth: 60%;\n\theight: 100px;\n\tbox-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\n\tmargin: 10px 0px;\n`;\n\nconst TitleContainer = styled(SubTitle)`\n\tpadding: 10px;\n\tbackground-color: ${SNUBLUE};\n\tcolor: white;\n`;\n\ninterface Props {\n\ttitle: string;\n\tchildren?: ReactNode;\n}\n\nconst MyPageBoxTemplate = ({ title, children }: Props) => {\n\treturn (\n\t\t<BoxContainer>\n\t\t\t<TitleContainer>{title}</TitleContainer>\n\t\t\t{children}\n\t\t</BoxContainer>\n\t);\n};\n\nexport default MyPageBoxTemplate;\n","import PageTemplate from 'components/template/PageTemplate';\nimport { Title } from 'lib/constant/Components';\nimport { observer } from 'mobx-react';\nimport { useHistory } from 'react-router';\nimport { useTranslation } from 'react-i18next';\nimport useStore from 'store/Index';\nimport { Button } from '@mui/material';\nimport MyPageBoxTemplate from 'components/template/MyPageBoxTemplate';\n\nconst MyPage = observer(() => {\n\tconst { UserStore, ToastStore } = useStore();\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\n\tconst onClickLogout = async () => {\n\t\tconst result = await UserStore.logout();\n\t\tif (result) {\n\t\t\thistory.push('/');\n\t\t\tToastStore.setMessage('success', '로그아웃 되었습니다');\n\t\t}\n\t};\n\n\treturn (\n\t\t<PageTemplate>\n\t\t\t<Title>{t('My Info')}</Title>\n\t\t\t<Button variant=\"contained\" onClick={onClickLogout}>\n\t\t\t\t{t('logout')}\n\t\t\t</Button>\n\t\t\t<MyPageBoxTemplate title=\"Account\" />\n\t\t\t<MyPageBoxTemplate title=\"Lingual Settings\" />\n\t\t\t<MyPageBoxTemplate title=\"Email Settings\" />\n\t\t</PageTemplate>\n\t);\n});\n\nexport default MyPage;\n","import React, { useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router';\nimport './App.css';\nimport Home from 'pages/Home';\nimport Login from 'pages/Login';\nimport ExperimentMain from 'pages/Experiment/ExperimentMain';\nimport Header from 'components/Header';\nimport { observer, useObserver } from 'mobx-react';\nimport { Alert, Box, Snackbar, ThemeProvider } from '@mui/material';\nimport { createTheme } from '@mui/material/styles';\nimport People from 'pages/People';\nimport ResearchProjects from 'pages/ResearchProjects';\nimport Footer from 'components/Footer';\nimport useStore from 'store/Index';\nimport ExperimentDetail from 'pages/Experiment/ExperimentDetail';\nimport TabNavigation from 'components/TabNavigation';\nimport { BrowserRouter } from 'react-router-dom';\nimport ExperimentMy from 'pages/Experiment/ExperimentMy';\nimport SignUp from 'pages/SignUp';\nimport EventsSchedule from 'pages/EventsNews/EventsSchedule';\nimport EventsColloquium from 'pages/EventsNews/EventsColloquium';\nimport EventsNews from 'pages/EventsNews/EventsNews';\nimport EventsSeminar from 'pages/EventsNews/EventsSeminar';\nimport TokenHeader from 'lib/api/TokenHeader';\nimport MyPage from 'pages/MyPage';\n\nconst theme = createTheme({\n\ttypography: {\n\t\tfontFamily: 'YoonGothic',\n\t},\n});\n\nconst App = observer(() => {\n\tconst { ToastStore, TokenStore, UserStore } = useStore();\n\n\tconst checkUser = async () => {\n\t\tconst res = await TokenStore.getAccessToken();\n\t\tif (res) {\n\t\t\tTokenHeader.setAccessToken(TokenStore.accessToken);\n\t\t\tUserStore.getUserInfo();\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tcheckUser();\n\t}, []);\n\n\treturn useObserver(() => (\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<Header />\n\t\t\t\t<TabNavigation />\n\t\t\t\t<Box sx={{ flex: 1, minHeight: '100vh' }}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t\t\t\t<Route path=\"/experiment\" exact component={ExperimentMain} />\n\t\t\t\t\t\t<Route path=\"/experiment/my\" exact component={ExperimentMy} />\n\t\t\t\t\t\t<Route path=\"/experiment/:id\" exact component={ExperimentDetail} />\n\t\t\t\t\t\t<Route path=\"/people\" exact component={People} />\n\t\t\t\t\t\t<Route path=\"/event/schedule\" exact component={EventsSchedule} />\n\t\t\t\t\t\t<Route path=\"/event/colloquium\" exact component={EventsColloquium} />\n\t\t\t\t\t\t<Route path=\"/event/news\" exact component={EventsNews} />\n\t\t\t\t\t\t<Route path=\"/event/seminar\" exact component={EventsSeminar} />\n\t\t\t\t\t\t<Route path=\"/research\" exact component={ResearchProjects} />\n\t\t\t\t\t\t<Route path=\"/login\" exact component={Login} />\n\t\t\t\t\t\t<Route path=\"/signup\" exact component={SignUp} />\n\t\t\t\t\t\t<Route path=\"/mypage\" exact component={MyPage} />\n\t\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Box>\n\t\t\t\t<Footer />\n\t\t\t\t<Snackbar\n\t\t\t\t\tautoHideDuration={4000}\n\t\t\t\t\topen={ToastStore.isOpen}\n\t\t\t\t\tonClose={() => ToastStore.setIsOpen(false)}\n\t\t\t\t>\n\t\t\t\t\t<Alert severity={ToastStore.message.type}>{ToastStore.message.text}</Alert>\n\t\t\t\t</Snackbar>\n\t\t\t</ThemeProvider>\n\t\t</BrowserRouter>\n\t));\n});\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","// i18n.js\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport { langEn } from './langEn';\nimport { langKo } from './langKo';\n\nconst resources = {\n\ten: {\n\t\ttranslation: langEn,\n\t},\n\tko: {\n\t\ttranslation: langKo,\n\t},\n};\n\ni18n.use(initReactI18next).init({\n\tresources,\n\t// 초기 설정 언어\n\tlng: 'ko',\n\tfallbackLng: {\n\t\ten: ['en'],\n\t\tdefault: ['ko'],\n\t},\n\tdebug: true,\n\tdefaultNS: 'translation',\n\tns: 'translation',\n\tkeySeparator: false,\n\tinterpolation: {\n\t\tescapeValue: false,\n\t},\n\treact: {\n\t\tuseSuspense: false,\n\t},\n});\n\nexport default i18n;\n","export const langEn = {\n\tlogin: 'login',\n\t'Sign Up': 'Sign Up',\n\t'Email Address': 'Email Address',\n\tPassword: 'Password',\n\tlogout: 'logout',\n\n\tExperiments: 'Experiments',\n\tseeOnlyAvailable: 'Show available experiments only',\n\tstatus: 'Status',\n\tlanguage: 'Language',\n\t'experiment type': 'Experiment Type',\n\n\tPeople: 'People',\n\n\t'Events & News': 'Events & News',\n\n\t'Research & Projects': 'Research & Projects',\n\n\t'My Page': 'My Page',\n\n\taddress:\n\t\t'Department of Linguistics, Seoul National University, Gwanak_1 Gwanak-ro, Seoul 151-745, Korea \\n Tel:+82-2-880-6164, Fax:+82-2-882-2451.',\n};\n","export const langKo = {\n\tlogin: '로그인',\n\t'Sign Up': '회원가입',\n\t'Email Address': '이메일',\n\tPassword: '패스워드',\n\tlogout: '로그아웃',\n\n\tExperiments: '실험 참여',\n\tseeOnlyAvailable: '참여 가능한 실험만 보기',\n\tstatus: '실험 상태',\n\tlanguage: '언어',\n\t'experiment type': '실험 진행 방법',\n\n\tPeople: '사람들',\n\n\t'Events & News': '이벤트 & 뉴스',\n\n\t'Research & Projects': '연구 & 프로젝트',\n\n\t'My Page': '마이페이지',\n\n\taddress:\n\t\t'서울대학교 언어학과, 서울특별시 관악구 관악로 1, 2동 108호 (151-745). linguist@snu.ac.kr \\n 전화:(02)880-6164, 팩스:(02)882-2451.',\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './lang/i18n'; // 다국어 지원 파일\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}