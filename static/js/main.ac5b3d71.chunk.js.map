{"version":3,"sources":["lib/constant/Components.tsx","pages/Home.tsx","lib/constant/index.ts","lib/api/TokenHeader.ts","lib/api/requests/index.ts","store/TokenStore.tsx","store/UserStore.tsx","store/ToastStore.tsx","store/ExperimentStore.tsx","store/LoadingStore.tsx","store/Index.tsx","lib/reg.ts","pages/Login.tsx","components/experiment/ExperimentFilterButton.tsx","components/experiment/ExperimentFilter.tsx","components/experiment/ExperimentBox.tsx","components/experiment/ExperimentList.tsx","components/experiment/ExperimentBody.tsx","components/template/LeftMenuTemplate.tsx","components/template/PageTemplate.tsx","lib/menus.ts","pages/Experiment/ExperimentMain.tsx","components/Header.tsx","pages/People.tsx","pages/ResearchProjects.tsx","components/Footer.tsx","components/experiment/ExperimentDetailWarning.tsx","components/experiment/ExperimentDetailBody.tsx","pages/Experiment/ExperimentDetail.tsx","components/TabNavigation.tsx","pages/Experiment/ExperimentMy.tsx","pages/SignUp.tsx","pages/EventsNews.tsx","components/template/MyPageBoxTemplate.tsx","components/mypage/MyPageAccount.tsx","components/mypage/MyPageLingual.tsx","components/mypage/MyPageEmail.tsx","pages/MyPage.tsx","App.tsx","reportWebVitals.ts","lang/i18n.ts","lang/langEn.ts","lang/langKo.ts","index.tsx"],"names":["RowContainer","styled","div","window","screen","width","Math","floor","props","backgroundImg","Title","SubTitle","Content","SubContent","Home","API_BASE_URL","SNUBLUE","SNULIGHTYELLOW","SNUGRAY","languageList","statusFilterList","name","value","lingualFilterList","map","lang","expTypeFilterList","TokenHeader","accessToken","res","this","e","console","error","params","headers","Authorization","undefined","GetRequest","url","axios","get","getHeader","PostRequest","body","post","TokenStore","observable","setAccessToken","token","saveAccessToken","localStorage","setItem","getAccessToken","success","getItem","data","clear","UserStore","user","setUser","signUp","email","pw","code","response","Token","status","login","getUserInfo","postUserInfo","favor","subscribe","lingual","deleteUser","DeleteRequest","delete","logout","ToastStore","isOpen","message","type","text","setIsOpen","setMessage","ExperimentStore","experimentList","myExperimentList","experimentDetail","setExperimentList","setMyExperimentList","setExperimentDetail","experiment","getExperimentList","available","expType","length","is_full","exp_type","getExperimentDetail","id","getMyExperimentList","log","putExperimentDetail","PutRequest","put","LoadingStore","loading","setLoading","useStore","checkEmail","test","LoginContainer","FormContainer","Login","observer","history","useHistory","t","useTranslation","useState","setEmail","emailError","setEmailError","setPw","pwError","setPwError","onSubmit","a","trim","result","goBack","Avatar","sx","m","bgcolor","Typography","component","variant","TextField","margin","required","label","autoComplete","fullWidth","autoFocus","onChange","event","target","onKeyPress","key","Button","size","onClick","push","ExperimentFilterButton","isSelected","FilterContainer","FilterLabel","ButtonList","Stack","ExperimentFilter","statusFilter","setStatusFilter","availableFilter","setavailableFilter","expTypeFilter","setExpTypeFilter","lingualFilter","setLingualFilter","onClickStatusButton","join","onClickAvailableButton","onClickExpTypeButton","onClickLingualButton","includes","filter","concat","spacing","direction","alignItems","item","FormControlLabel","control","Checkbox","checked","BoxContainer","OnOffChip","Chip","LanguageChip","BottomBar","isFull","ExperimentBox","onClickBox","useCallback","scrollTo","top","behavior","title","icon","style","marginTop","split","count_participants","max_participants","ExperimentList","Grid","container","rowSpacing","columnSpacing","xs","md","ExperimentBody","getInit","useEffect","CircularProgress","LeftMenuContainer","Tabs","MenuItem","Tab","LeftMenuTemplate","menu","location","useLocation","secondPath","pathname","domain","getMenu","orientation","PageTemplateContainer","ChildrenContainer","TitleLabel","PageTemplate","children","ExperimentMenus","EventsMenus","ResearchMenus","ExperimentMain","HeaderContainer","SnulingLogo","img","LoginButton","Header","i18n","src","process","alt","language","changeLanguage","username","People","ResearchProjects","useParams","FooterContainer","ColumnContainer","FooterLabel","siteList","Footer","href","rel","WarningContainer","ExperimentDetailWarning","fontSize","reward_type","reward_price","reward","ExperimentDetailBody","dangerouslySetInnerHTML","__html","content","disabled","parseInt","open","link","endIcon","BackButton","ExperimentDetail","startIcon","TabContainer","tabs","TabNavigation","firstPath","getLocation","centered","textColor","indicatorColor","ExperimentMy","SignUpContainer","SignUp","pwCheck","setPwCheck","pwCheckError","setPwCheckError","EventsNews","TitleContainer","MyPageBoxTemplate","editMode","onPressEditButton","onPressSaveButton","IconButton","MyPageAccount","MyPageLingual","profile","langList","setLangList","setEditMode","RadioGroup","Radio","MyPageEmail","MyPage","replace","onClickLogout","onClickQuit","theme","createTheme","palette","primary","light","main","secondary","background","default","typography","fontFamily","App","checkUser","useObserver","basename","ThemeProvider","CssBaseline","Box","flex","minHeight","path","exact","to","Snackbar","autoHideDuration","onClose","Alert","severity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","resources","en","translation","Password","quit","Experiments","seeOnlyAvailable","lists","Unpublished","Closed","korean","english","japanese","chinese","french","spanish","Online","Offline","schedule","colloquium","seminar","news","address","ko","use","initReactI18next","init","lng","fallbackLng","debug","defaultNS","ns","keySeparator","interpolation","escapeValue","react","useSuspense","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac5b3d71.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const RowContainer = styled.div<{ backgroundImg?: string }>`\n\twidth: 100vw;\n\tdisplay: flex;\n\tbox-sizing: border-box;\n\talign-items: center;\n\tjustify-content: center;\n\tflex-direction: column;\n\tpadding: 10px max(calc((100vw - 1200px) / 2), 5vw);\n\t/* ${window.screen.width > 1100 ? Math.floor((window.screen.width - 1100) / 2) : '5vw'}; */\n\tbackground-image: url(${(props) => props.backgroundImg});\n`;\n\nexport const Title = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 500;\n\tfont-size: 3rem;\n\tpadding: 2rem 0px;\n\t/* border-bottom: 3px solid black; */\n`;\n\nexport const SubTitle = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 400;\n\tfont-size: 2rem;\n`;\n\nexport const Content = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 400;\n\tfont-size: 1.5rem;\n`;\n\nexport const SubContent = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 300;\n\tfont-size: 1rem;\n`;\n","// import { useHistory } from 'react-router';\nimport { RowContainer, Title } from 'lib/constant/Components';\n\nconst Home = () => {\n\t// const history = useHistory();\n\n\treturn (\n\t\t<RowContainer>\n\t\t\t<Title>서울대학교 언어학과</Title>\n\t\t\t<div>홈페이지 제작중입니다. - team 0605s</div>\n\t\t</RowContainer>\n\t);\n};\n\nexport default Home;\n","import { FilterType, StatusType } from 'types/experiment';\n\nexport const API_BASE_URL = 'https://jinh0park.pythonanywhere.com/api/';\n\nexport const SNUBLUE = '#0f0f70';\nexport const SNULIGHTBLUE = '#8787b7';\nexport const SNUYELLOW = '#dcdab2';\nexport const SNULIGHTYELLOW = '#f8f7ef';\nexport const SNUGRAY = '#666666';\nexport const SNUSILVER = '#D2D2D2';\n\nexport const languageList: string[] = [\n\t'korean',\n\t'english',\n\t'japanese',\n\t'chinese',\n\t'french',\n\t'spanish',\n];\n\nexport const statusFilterList: { name: string; value: StatusType }[] = [\n\t{\n\t\tname: 'In Progress',\n\t\tvalue: 'P',\n\t},\n\t{\n\t\tname: 'Unpublished',\n\t\tvalue: 'U',\n\t},\n\t{\n\t\tname: 'Closed',\n\t\tvalue: 'C',\n\t},\n];\n\nexport const lingualFilterList: { name: string; value: string }[] = languageList.map((lang) => {\n\treturn {\n\t\tname: lang,\n\t\tvalue: lang,\n\t};\n});\n\nexport const expTypeFilterList: { name: string; value: 'ON' | 'OFF' }[] = [\n\t{\n\t\tname: 'Online',\n\t\tvalue: 'ON',\n\t},\n\t{\n\t\tname: 'Offline',\n\t\tvalue: 'OFF',\n\t},\n];\n","class TokenHeader {\n\tstatic accessToken = '';\n\n\tstatic setAccessToken(accessToken: string) {\n\t\tlet res = false;\n\t\ttry {\n\t\t\tthis.accessToken = accessToken;\n\t\t\tres = true;\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn res;\n\t}\n\n\tstatic getHeader(params?: object) {\n\t\treturn {\n\t\t\theaders: {\n\t\t\t\tAuthorization: this.accessToken === '' ? undefined : `Token ${this.accessToken}`,\n\t\t\t},\n\t\t\tparams,\n\t\t};\n\t}\n}\n\nexport default TokenHeader;\n","import axios from 'axios';\nimport { API_BASE_URL } from '../../constant';\nimport TokenHeader from '../TokenHeader';\n\nexport const GetRequest = <T = any>(url: string, params?: object) =>\n\taxios.get<T>(`${API_BASE_URL}${url}`, TokenHeader.getHeader(params));\nexport const PostRequest = <T = any>(url: string, body?: object) =>\n\taxios.post<T>(`${API_BASE_URL}${url}`, body, TokenHeader.getHeader());\nexport const PutRequest = <T = any>(url: string, body?: object, params?: object) =>\n\taxios.put<T>(`${API_BASE_URL}${url}`, body, TokenHeader.getHeader(params));\nexport const DeleteRequest = <T = any>(url: string, params?: object) =>\n\taxios.delete<T>(`${API_BASE_URL}${url}`, TokenHeader.getHeader(params));\n","import { observable } from 'mobx';\n\nconst TokenStore = observable({\n\taccessToken: '' as string,\n\tsetAccessToken(token: string) {\n\t\tthis.accessToken = token;\n\t},\n\tsaveAccessToken(accessToken: string) {\n\t\ttry {\n\t\t\twindow.localStorage.setItem('ACCESS_TOKEN', accessToken);\n\t\t} catch (e) {\n\t\t\tconsole.error('========= setAccessToken Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t},\n\n\tasync getAccessToken() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst data = await window.localStorage.getItem('ACCESS_TOKEN');\n\t\t\tif (data && data !== null) this.setAccessToken(data);\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getAccessToken Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync clear() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tawait window.localStorage.clear();\n\t\t\tthis.setAccessToken('');\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= clear Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n});\n\nexport default TokenStore;\n","import { DeleteRequest, GetRequest, PostRequest } from 'lib/api/requests';\nimport TokenHeader from 'lib/api/TokenHeader';\nimport { observable } from 'mobx';\nimport { TokenType } from 'types/token';\nimport { UserType } from 'types/user';\nimport TokenStore from './TokenStore';\n\nconst UserStore = observable({\n\tuser: null as UserType | null,\n\tsetUser(user: UserType | null) {\n\t\tthis.user = user;\n\t},\n\n\tasync signUp(email: string, pw: string) {\n\t\tlet success = false;\n\t\tlet code = 200;\n\t\tlet token = '';\n\t\ttry {\n\t\t\tconst response = await PostRequest<TokenType>('signup/', {\n\t\t\t\temail,\n\t\t\t\tpw,\n\t\t\t});\n\t\t\ttoken = response.data.Token;\n\t\t\tcode = response.status;\n\t\t\t// this.setUserEmail(email);\n\t\t\tsuccess = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= SignUp Error =========');\n\t\t\tcode = e.response.status;\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn { success, code, token };\n\t},\n\n\tasync login(email: string, pw: string) {\n\t\tlet success = false;\n\t\tlet code = 200;\n\t\tlet token = '';\n\t\ttry {\n\t\t\tconst response = await PostRequest<TokenType>('login/', {\n\t\t\t\temail,\n\t\t\t\tpw,\n\t\t\t});\n\t\t\tif (response.status === 200) {\n\t\t\t\ttoken = response.data.Token;\n\t\t\t\tcode = response.status;\n\t\t\t\tsuccess = true;\n\t\t\t\tawait TokenStore.setAccessToken(response.data.Token);\n\t\t\t\tawait TokenStore.saveAccessToken(response.data.Token);\n\t\t\t\tconst res = await TokenHeader.setAccessToken(response.data.Token);\n\t\t\t\tif (res) this.getUserInfo();\n\t\t\t}\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= login Error =========');\n\t\t\tcode = e.response.status;\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn { success, code, token };\n\t},\n\n\tasync getUserInfo() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await GetRequest<UserType>('mypage/');\n\t\t\tthis.setUser(response.data);\n\t\t\tsuccess = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= getUserInfo Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync postUserInfo(favor: 'ONLINE' | 'OFFLINE' | null, subscribe: boolean, lingual: string) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await PostRequest<UserType>('mypage/', {\n\t\t\t\tfavor,\n\t\t\t\tsubscribe,\n\t\t\t\tlingual,\n\t\t\t});\n\t\t\tthis.setUser(response.data);\n\t\t\tsuccess = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= postUserInfo Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync deleteUser() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await DeleteRequest('mypage/');\n\t\t\tif (response.status === 200) {\n\t\t\t\tthis.setUser(null);\n\t\t\t\tTokenStore.clear();\n\t\t\t\tsuccess = true;\n\t\t\t}\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= deleteUser Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync logout() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tthis.setUser(null);\n\t\t\tTokenStore.clear();\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= signOutUser Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n});\n\nexport default UserStore;\n","import { observable } from 'mobx';\n\nconst ToastStore = observable({\n\tisOpen: false as boolean,\n\tmessage: { type: 'error', text: '' } as {\n\t\ttype: 'error' | 'warning' | 'info' | 'success';\n\t\ttext: string;\n\t},\n\n\tsetIsOpen(isOpen: boolean) {\n\t\tthis.isOpen = isOpen;\n\t},\n\tsetMessage(type: 'error' | 'warning' | 'info' | 'success', text: string) {\n\t\tthis.message.text = text;\n\t\tthis.message.type = type;\n\t\tthis.setIsOpen(true);\n\t},\n});\n\nexport default ToastStore;\n","import { GetRequest, PutRequest } from 'lib/api/requests';\nimport { observable } from 'mobx';\nimport { ExperimentType, StatusType } from 'types/experiment';\n\nconst ExperimentStore = observable({\n\texperimentList: [] as ExperimentType[],\n\tmyExperimentList: [] as ExperimentType[],\n\texperimentDetail: {} as ExperimentType | undefined,\n\tsetExperimentList(experimentList: ExperimentType[]) {\n\t\tthis.experimentList = experimentList;\n\t},\n\tsetMyExperimentList(experimentList: ExperimentType[]) {\n\t\tthis.myExperimentList = experimentList;\n\t},\n\tsetExperimentDetail(experiment: ExperimentType | undefined) {\n\t\tthis.experimentDetail = experiment;\n\t},\n\n\tasync getExperimentList(\n\t\tlingual?: string,\n\t\tstatus?: StatusType,\n\t\tavailable?: boolean,\n\t\texpType?: 'ON' | 'OFF',\n\t) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tthis.setExperimentList([]);\n\t\t\tconst response = await GetRequest('experiments/', {\n\t\t\t\tlingual: lingual && lingual.length > 0 ? lingual : undefined,\n\t\t\t\tstatus,\n\t\t\t\tis_full: available ? 'no' : undefined,\n\t\t\t\texp_type: expType,\n\t\t\t});\n\t\t\tthis.setExperimentList(response.data);\n\t\t\t// console.error('========= getExperimentList Success =========');\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getExperimentList Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync getExperimentDetail(id: number) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tthis.setExperimentDetail(undefined);\n\t\t\tconst response = await GetRequest(`experiments/${id}/`);\n\t\t\tthis.setExperimentDetail(response.data);\n\t\t\t// console.error('========= getExperimentDetail Success =========');\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getExperimentDetail Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync getMyExperimentList() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await GetRequest(`experiments/my/`);\n\t\t\tthis.setMyExperimentList(response.data);\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.log('========= getMyExperimentDetail Error =========');\n\t\t\tconsole.log(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync putExperimentDetail(id: number) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await PutRequest(`experiments/${id}/`);\n\t\t\tif (response.data === 200) success = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= putExperimentDetail Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n});\n\nexport default ExperimentStore;\n","import { observable } from 'mobx';\n\nconst LoadingStore = observable({\n\tloading: true as boolean,\n\tsetLoading(loading: boolean) {\n\t\tthis.loading = loading;\n\t},\n});\n\nexport default LoadingStore;\n","import UserStore from './UserStore';\nimport TokenStore from './TokenStore';\nimport ToastStore from './ToastStore';\nimport ExperimentStore from './ExperimentStore';\nimport LoadingStore from './LoadingStore';\n\nconst useStore = () => {\n\treturn {\n\t\tUserStore,\n\t\tTokenStore,\n\t\tToastStore,\n\t\tExperimentStore,\n\t\tLoadingStore,\n\t};\n};\n\nexport default useStore;\n","export const checkEmail = (text: string) => {\n\tconst regEmail = /^([0-9a-zA-Z_\\.-]+)@([0-9a-zA-Z_-]+)(\\.[0-9a-zA-Z_-]+){1,2}$/;\n\treturn regEmail.test(text);\n};\n","import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { useHistory } from 'react-router';\nimport useStore from 'store/Index';\nimport { useTranslation } from 'react-i18next';\nimport { Typography, Avatar, TextField, Button, FormGroup, useFormControl } from '@mui/material';\nimport PersonIcon from '@mui/icons-material/Person';\nimport styled from 'styled-components';\nimport { RowContainer } from 'lib/constant/Components';\nimport { checkEmail } from 'lib/reg';\n\nconst LoginContainer = styled(RowContainer)`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\nconst FormContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\twidth: 50%;\n`;\n\nconst Login = observer(() => {\n\tconst { UserStore, ToastStore, TokenStore } = useStore();\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\tconst [email, setEmail] = useState<string>('');\n\tconst [emailError, setEmailError] = useState<boolean>(false);\n\tconst [pw, setPw] = useState<string>('');\n\tconst [pwError, setPwError] = useState<boolean>(false);\n\n\tconst onSubmit = async () => {\n\t\tif (email.trim().length === 0) {\n\t\t\tToastStore.setMessage('warning', '이메일을 입력해주세요');\n\t\t\tsetEmailError(true);\n\t\t} else if (!checkEmail(email.trim())) {\n\t\t\tToastStore.setMessage('warning', '올바른 형식의 이메일을 입력해주세요');\n\t\t\tsetEmailError(true);\n\t\t} else if (pw.trim().length === 0) {\n\t\t\tToastStore.setMessage('warning', '비밀번호를 입력하세요');\n\t\t\tsetPwError(true);\n\t\t} else {\n\t\t\tconst result = await UserStore.login(email, pw);\n\t\t\tif (!result || result.code >= 500) {\n\t\t\t\tToastStore.setMessage('error', '서버 오류');\n\t\t\t} else if (result && result.code >= 401 && result) {\n\t\t\t\tToastStore.setMessage('error', '존재하지 않는 계정이거나 비밀번호가 틀립니다');\n\t\t\t\tsetEmailError(true);\n\t\t\t\tsetPwError(true);\n\t\t\t} else {\n\t\t\t\tToastStore.setMessage('success', `${email}로 로그인 되었습니다.`);\n\t\t\t\thistory.goBack();\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<LoginContainer>\n\t\t\t<Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n\t\t\t\t<PersonIcon />\n\t\t\t</Avatar>\n\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t{t('login')}\n\t\t\t</Typography>\n\t\t\t<FormContainer>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\trequired\n\t\t\t\t\tid=\"email\"\n\t\t\t\t\tlabel={t('Email Address')}\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tautoFocus\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\tsetEmail(event.target.value)\n\t\t\t\t\t}\n\t\t\t\t\terror={emailError}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\trequired\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tlabel={t('Password')}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\tsetPw(event.target.value)\n\t\t\t\t\t}\n\t\t\t\t\terror={pwError}\n\t\t\t\t\tonKeyPress={(e) => {\n\t\t\t\t\t\tif (e.key === 'Enter') onSubmit();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</FormContainer>\n\t\t\t{/* <FormControlLabel\n\t\t\t\t\tcontrol={<Checkbox value=\"remember\" color=\"primary\" />}\n\t\t\t\t\tlabel=\"Remember me\"\n\t\t\t\t/> */}\n\t\t\t<Button variant=\"text\" size=\"medium\" onClick={() => history.push('/signup')}>\n\t\t\t\t계정이 없으신가요?\n\t\t\t</Button>\n\t\t\t<Button type=\"submit\" size=\"medium\" variant=\"contained\" onClick={onSubmit}>\n\t\t\t\t{t('login')}\n\t\t\t</Button>\n\t\t</LoginContainer>\n\t);\n});\n\nexport default Login;\n","import { Button } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\n\ninterface Props {\n\tname: string;\n\tisSelected: boolean;\n\tonClick: () => void;\n}\n\nconst ExperimentFilterButton = ({ name, isSelected, onClick }: Props) => {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<Button variant={isSelected ? 'contained' : 'outlined'} onClick={onClick}>\n\t\t\t{t(name)}\n\t\t</Button>\n\t);\n};\n\nexport default ExperimentFilterButton;\n","import styled from 'styled-components';\nimport { FormControlLabel, Stack, Checkbox } from '@mui/material';\nimport { expTypeFilterList, lingualFilterList, statusFilterList } from 'lib/constant';\nimport { useState } from 'react';\nimport useStore from 'store/Index';\nimport { observer } from 'mobx-react';\nimport { StatusType } from 'types/experiment';\nimport { useTranslation } from 'react-i18next';\nimport { SubContent } from 'lib/constant/Components';\nimport ExperimentFilterButton from './ExperimentFilterButton';\n\nconst FilterContainer = styled.div`\n\tpadding: 20px 0px;\n`;\n\nconst FilterLabel = styled(SubContent)`\n\twidth: 100px;\n\ttext-align: center;\n`;\nconst ButtonList = styled(Stack)`\n\tmargin: 20px 0px;\n`;\n\nconst ExperimentFilter = observer(() => {\n\tconst { ExperimentStore, LoadingStore } = useStore();\n\tconst { t } = useTranslation();\n\tconst [statusFilter, setStatusFilter] = useState<StatusType | undefined>(undefined);\n\tconst [availableFilter, setavailableFilter] = useState<boolean>(false);\n\tconst [expTypeFilter, setExpTypeFilter] = useState<'ON' | 'OFF' | undefined>(undefined);\n\tconst [lingualFilter, setLingualFilter] = useState<string[]>([]);\n\n\tconst onClickStatusButton = async (value: StatusType) => {\n\t\tLoadingStore.setLoading(true);\n\t\tsetStatusFilter(statusFilter === value ? undefined : value);\n\t\tlet res = await ExperimentStore.getExperimentList(\n\t\t\tlingualFilter.join(','),\n\t\t\tstatusFilter === value ? undefined : value,\n\t\t\tavailableFilter,\n\t\t\texpTypeFilter,\n\t\t);\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\tconst onClickAvailableButton = async (value: boolean) => {\n\t\tLoadingStore.setLoading(true);\n\t\tsetavailableFilter(value);\n\t\tlet res = await ExperimentStore.getExperimentList(\n\t\t\tlingualFilter.join(','),\n\t\t\tstatusFilter,\n\t\t\tvalue,\n\t\t\texpTypeFilter,\n\t\t);\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\tconst onClickExpTypeButton = async (value: 'ON' | 'OFF') => {\n\t\tLoadingStore.setLoading(true);\n\t\tsetExpTypeFilter(expTypeFilter === value ? undefined : value);\n\t\tlet res = await ExperimentStore.getExperimentList(\n\t\t\tlingualFilter.join(','),\n\t\t\tstatusFilter,\n\t\t\tavailableFilter,\n\t\t\texpTypeFilter === value ? undefined : value,\n\t\t);\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\tconst onClickLingualButton = async (value: string) => {\n\t\tLoadingStore.setLoading(true);\n\t\tsetLingualFilter(\n\t\t\tlingualFilter.includes(value)\n\t\t\t\t? lingualFilter.filter((e) => e !== value)\n\t\t\t\t: lingualFilter.concat(value),\n\t\t);\n\t\tlet res = await ExperimentStore.getExperimentList(\n\t\t\tlingualFilter.includes(value)\n\t\t\t\t? lingualFilter.filter((e) => e !== value).join(',')\n\t\t\t\t: lingualFilter.concat(value).join(','),\n\t\t\tstatusFilter,\n\t\t\tavailableFilter,\n\t\t\texpTypeFilter,\n\t\t);\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\treturn (\n\t\t<FilterContainer>\n\t\t\t<ButtonList spacing={2} direction=\"row\" alignItems=\"center\">\n\t\t\t\t<FilterLabel>{t('status')}</FilterLabel>\n\t\t\t\t{statusFilterList.map((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ExperimentFilterButton\n\t\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t\t\tisSelected={statusFilter === item.value}\n\t\t\t\t\t\t\tonClick={() => onClickStatusButton(item.value)}\n\t\t\t\t\t\t\tkey={item.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ButtonList>\n\t\t\t<ButtonList spacing={2} direction=\"row\" alignItems=\"center\">\n\t\t\t\t<FilterLabel>{t('language')}</FilterLabel>\n\t\t\t\t{lingualFilterList.map((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ExperimentFilterButton\n\t\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t\t\tisSelected={lingualFilter.includes(item.value)}\n\t\t\t\t\t\t\tonClick={() => onClickLingualButton(item.value)}\n\t\t\t\t\t\t\tkey={item.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ButtonList>\n\t\t\t<ButtonList spacing={2} direction=\"row\" alignItems=\"center\">\n\t\t\t\t<FilterLabel>{t('experiment type')}</FilterLabel>\n\t\t\t\t{expTypeFilterList.map((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ExperimentFilterButton\n\t\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t\t\tisSelected={expTypeFilter === item.value}\n\t\t\t\t\t\t\tonClick={() => onClickExpTypeButton(item.value)}\n\t\t\t\t\t\t\tkey={item.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ButtonList>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tchecked={availableFilter === true}\n\t\t\t\t\t\tonClick={() => onClickAvailableButton(!availableFilter)}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel={t('seeOnlyAvailable')}\n\t\t\t/>\n\t\t</FilterContainer>\n\t);\n});\n\nexport default ExperimentFilter;\n","import { ExperimentType } from 'types/experiment';\nimport styled from 'styled-components';\nimport { Content, SubTitle, SubContent } from 'lib/constant/Components';\nimport { useHistory } from 'react-router';\nimport { useCallback } from 'react';\nimport { Chip, Stack } from '@mui/material';\nimport PublicIcon from '@mui/icons-material/Public';\nimport CloudOffIcon from '@mui/icons-material/CloudOff';\nimport { SNUGRAY } from 'lib/constant';\n\nconst BoxContainer = styled.div`\n\twidth: 100%;\n\theight: 350px;\n\tborder-radius: 10px;\n\tbox-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tposition: relative;\n\t:hover {\n\t\topacity: 0.7;\n\t\tcursor: pointer;\n\t}\n`;\n\nconst OnOffChip = styled(Chip)`\n\tfont-size: 1rem;\n\tfont-weight: 400;\n\tposition: absolute;\n\ttop: 5%;\n\tright: 5%;\n\tz-index: 2;\n`;\n\nconst LanguageChip = styled(Chip)``;\n\nconst BottomBar = styled.div<{ isFull: boolean }>`\n\tposition: absolute;\n\tbottom: 0px;\n\twidth: 100%;\n\theight: 15%;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tborder-radius: 0px 0px 10px 10px;\n\tbackground-color: ${(props) => (props.isFull ? SNUGRAY : 'green')};\n\tcolor: white;\n\tfont-size: 1.3 rem;\n\tfont-weight: 500;\n`;\n\ninterface Props {\n\titem: ExperimentType;\n}\n\nconst ExperimentBox = ({ item }: Props) => {\n\tconst history = useHistory();\n\tconst onClickBox = useCallback(() => {\n\t\thistory.push(`/experiment/${item.id}`);\n\t\twindow.scrollTo({ top: 0, behavior: 'smooth' });\n\t}, []);\n\n\treturn (\n\t\t<BoxContainer onClick={onClickBox}>\n\t\t\t<SubTitle>{item.title}</SubTitle>\n\t\t\t{item.exp_type === 'ON' ? (\n\t\t\t\t<OnOffChip icon={<PublicIcon />} label=\"ONLINE\" />\n\t\t\t) : (\n\t\t\t\t<OnOffChip icon={<CloudOffIcon />} label=\"OFFLINE\" />\n\t\t\t)}\n\t\t\t<Stack direction=\"row\" spacing={2} style={{ marginTop: 20 }}>\n\t\t\t\t{item.lingual &&\n\t\t\t\t\titem.lingual.split(',').map((lang) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<LanguageChip\n\t\t\t\t\t\t\t\tlabel={`# ${lang}`}\n\t\t\t\t\t\t\t\tkey={lang}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t</Stack>\n\t\t\t<BottomBar isFull={item.is_full}>\n\t\t\t\t{item.is_full\n\t\t\t\t\t? '모집 완료'\n\t\t\t\t\t: `모집중 ${item.count_participants}명 / ${item.max_participants}명\n`}\n\t\t\t</BottomBar>\n\t\t\t{/* <Content>{item.reward_price}</Content> */}\n\t\t</BoxContainer>\n\t);\n};\n\nexport default ExperimentBox;\n","import { Grid } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport useStore from 'store/Index';\nimport ExperimentBox from './ExperimentBox';\n\nconst ExperimentList = observer(() => {\n\tconst { ExperimentStore } = useStore();\n\n\treturn (\n\t\t<Grid container rowSpacing={2} columnSpacing={3} alignItems=\"center\">\n\t\t\t{ExperimentStore.experimentList.map((item) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Grid item key={item.title} xs={12} md={6}>\n\t\t\t\t\t\t<ExperimentBox item={item} key={item.title} />\n\t\t\t\t\t</Grid>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Grid>\n\t);\n});\n\nexport default ExperimentList;\n","import { CircularProgress } from '@mui/material';\nimport { Content } from 'lib/constant/Components';\nimport { observer } from 'mobx-react';\nimport { useEffect } from 'react';\nimport useStore from 'store/Index';\nimport ExperimentFilter from './ExperimentFilter';\nimport ExperimentList from './ExperimentList';\n\nconst ExperimentBody = observer(() => {\n\tconst { ExperimentStore, LoadingStore } = useStore();\n\n\tconst getInit = async () => {\n\t\tLoadingStore.setLoading(true);\n\t\tconst res = await ExperimentStore.getExperimentList();\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\tuseEffect(() => {\n\t\tgetInit();\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<ExperimentFilter />\n\t\t\t{LoadingStore.loading ? (\n\t\t\t\t<CircularProgress />\n\t\t\t) : ExperimentStore.experimentList.length ? (\n\t\t\t\t<ExperimentList />\n\t\t\t) : (\n\t\t\t\t<Content>조건에 맞는 실험이 없습니다.</Content>\n\t\t\t)}\n\t\t</>\n\t);\n});\n\nexport default ExperimentBody;\n","import { Tab, Tabs } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst LeftMenuContainer = styled(Tabs)`\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nconst MenuItem = styled(Tab)`\n\twidth: 200px;\n\tfont-size: 20px;\n\theight: 50px;\n`;\n\ninterface Props {\n\tmenu: { title: string; domain: string }[];\n}\n\nconst LeftMenuTemplate = ({ menu }: Props) => {\n\tconst location = useLocation();\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\n\tconst getMenu = () => {\n\t\tconst secondPath = location.pathname;\n\t\tif (menu.map((e) => e.domain).includes(secondPath)) return `${secondPath}`;\n\t\treturn false;\n\t};\n\n\treturn (\n\t\t<LeftMenuContainer value={getMenu()} orientation=\"vertical\">\n\t\t\t{menu.map((item) => {\n\t\t\t\treturn (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tlabel={t(item.title)}\n\t\t\t\t\t\tvalue={item.domain}\n\t\t\t\t\t\tkey={item.title}\n\t\t\t\t\t\tonClick={() => history.push(`${item.domain}`)}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</LeftMenuContainer>\n\t);\n};\n\nexport default LeftMenuTemplate;\n","import { SNUBLUE, SNUGRAY } from 'lib/constant';\nimport { SubTitle } from 'lib/constant/Components';\nimport { ReactNode } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport LeftMenuTemplate from './LeftMenuTemplate';\n\nconst PageTemplateContainer = styled.div`\n\tflex: 1;\n\twidth: 100vw;\n\tdisplay: flex;\n\tflex-direction: row;\n\tbox-sizing: border-box;\n\tbackground-color: '#B0B0B0';\n\tpadding: 50px max(calc((100vw - 1000px) / 2), 5vw);\n`;\n\nconst ChildrenContainer = styled.div`\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\nconst TitleLabel = styled(SubTitle)`\n\theight: 70px;\n\tmargin-bottom: 30px;\n\tborder-bottom: 5px solid ${SNUBLUE};\n\tborder-radius: 2px;\n\ttext-align: center;\n`;\n\ninterface Props {\n\ttitle?: string;\n\tmenu?: { title: string; domain: string }[];\n\tchildren?: ReactNode;\n}\n\nconst PageTemplate = ({ title, menu, children }: Props) => {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<PageTemplateContainer>\n\t\t\t{menu && <LeftMenuTemplate menu={menu} />}\n\t\t\t<ChildrenContainer>\n\t\t\t\t{title && <TitleLabel>{t(title)}</TitleLabel>}\n\t\t\t\t{children && children}\n\t\t\t</ChildrenContainer>\n\t\t</PageTemplateContainer>\n\t);\n};\n\nexport default PageTemplate;\n","export const ExperimentMenus = [\n\t{\n\t\ttitle: 'lists',\n\t\tdomain: '/experiment',\n\t},\n\t{\n\t\ttitle: 'my experiments',\n\t\tdomain: '/experiment/my',\n\t},\n];\n\nexport const EventsMenus = [\n\t{\n\t\ttitle: 'schedule',\n\t\tdomain: '/event/schedule',\n\t},\n\t{\n\t\ttitle: 'colloquium',\n\t\tdomain: '/event/colloquium',\n\t},\n\t{\n\t\ttitle: 'seminar',\n\t\tdomain: '/event/seminar',\n\t},\n\t{\n\t\ttitle: 'news',\n\t\tdomain: '/event/news',\n\t},\n];\n\nexport const ResearchMenus = [\n\t{\n\t\ttitle: 'themes',\n\t\tdomain: '/research/themes',\n\t},\n\t{\n\t\ttitle: 'labs',\n\t\tdomain: '/research/labs',\n\t},\n\t{\n\t\ttitle: 'affiliated projects',\n\t\tdomain: '/research/affiliated',\n\t},\n];\n","import BannerTemplate from 'components/template/BannerTemplate';\nimport ExperimentBody from 'components/experiment/ExperimentBody';\nimport PageTemplate from 'components/template/PageTemplate';\nimport { ExperimentMenus } from 'lib/menus';\n\nconst ExperimentMain = () => {\n\treturn (\n\t\t<PageTemplate title=\"Experiments\" menu={ExperimentMenus}>\n\t\t\t<ExperimentBody />\n\t\t</PageTemplate>\n\t);\n};\n\nexport default ExperimentMain;\n","import styled from 'styled-components';\nimport Button from '@mui/material/Button';\nimport { useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { Stack } from '@mui/material';\nimport useStore from 'store/Index';\nimport { observer } from 'mobx-react';\nimport { SubContent } from 'lib/constant/Components';\nimport { SNULIGHTBLUE } from 'lib/constant';\n\nconst HeaderContainer = styled.div`\n\twidth: 100vw;\n\theight: 100px;\n\tbox-sizing: border-box;\n\tpadding: 10px max(calc((100vw - 1000px) / 2), 5vw);\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tjustify-content: space-between;\n\tbackground-color: white;\n`;\n\nconst SnulingLogo = styled.img`\n\twidth: 200px;\n\theight: auto;\n\topacity: 1;\n\t:hover {\n\t\topacity: 0.8;\n\t\tcursor: pointer;\n\t}\n`;\n\nconst LoginButton = styled(Button)``;\n\nconst Header = observer(() => {\n\tconst history = useHistory();\n\tconst { i18n, t } = useTranslation();\n\tconst { UserStore } = useStore();\n\n\tconst onClickChangeLanguage = () => {\n\t\tif (i18n.language === 'ko') i18n.changeLanguage('en');\n\t\telse if (i18n.language === 'en') i18n.changeLanguage('ko');\n\t};\n\n\treturn (\n\t\t<HeaderContainer>\n\t\t\t<SnulingLogo\n\t\t\t\tsrc={`${process.env.PUBLIC_URL}/img/snuling_logo.png`}\n\t\t\t\talt=\"\"\n\t\t\t\tonClick={() => history.push('/')}\n\t\t\t/>\n\t\t\t<Stack spacing={2} direction=\"row\" alignItems=\"center\">\n\t\t\t\t<Button variant=\"text\" onClick={onClickChangeLanguage}>\n\t\t\t\t\t{i18n.language === 'ko' ? 'English' : '한국어'}\n\t\t\t\t</Button>\n\t\t\t\t{UserStore.user !== null ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<SubContent>{UserStore.user?.username}</SubContent>\n\t\t\t\t\t\t<LoginButton variant=\"text\" onClick={() => history.push('/mypage')}>\n\t\t\t\t\t\t\t{t('My Page')}\n\t\t\t\t\t\t</LoginButton>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<LoginButton variant=\"outlined\" onClick={() => history.push('/login')}>\n\t\t\t\t\t\t\t{t('login')}\n\t\t\t\t\t\t</LoginButton>\n\t\t\t\t\t\t<LoginButton variant=\"text\" onClick={() => history.push('/signup')}>\n\t\t\t\t\t\t\t{t('Sign Up')}\n\t\t\t\t\t\t</LoginButton>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Stack>\n\t\t</HeaderContainer>\n\t);\n});\n\nexport default Header;\n","import PageTemplate from 'components/template/PageTemplate';\n\nconst People = () => {\n\treturn <PageTemplate title=\"People\" />;\n};\n\nexport default People;\n","import PageTemplate from 'components/template/PageTemplate';\nimport { useParams } from 'react-router';\nimport { ResearchMenus } from 'lib/menus';\n\nconst ResearchProjects = () => {\n\tconst { type } = useParams<{ type: string }>();\n\treturn <PageTemplate title={type} menu={ResearchMenus} />;\n};\n\nexport default ResearchProjects;\n","import { SNUBLUE } from 'lib/constant';\nimport { RowContainer, SubContent } from 'lib/constant/Components';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nconst FooterContainer = styled(RowContainer)`\n\tbackground-color: ${SNUBLUE};\n\theight: 200px;\n\tpadding: 0px 10vw;\n\tdisplay: flex;\n\tflex-direction: row;\n`;\n\nconst ColumnContainer = styled.div<{ type: 'left' | 'right' }>`\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: ${(props) => props.type === 'right' && 'flex-end'};\n`;\n\nconst SnulingLogo = styled.img`\n\twidth: 200px;\n\theight: auto;\n\topacity: 1;\n\tmargin-bottom: 20px;\n\t:hover {\n\t\tcursor: pointer;\n\t}\n`;\n\nconst FooterLabel = styled(SubContent)`\n\tcolor: white;\n\ttext-align: left;\n\tline-height: 25px;\n\ttext-decoration: none;\n`;\n\nconst siteList: { name: string; url: string }[] = [\n\t{ name: '언어학과 홈페이지', url: 'http://hosting01.snu.ac.kr/~linguist/' },\n\t{ name: '서울대학교 인문대학', url: 'http://humanities.snu.ac.kr' },\n];\nconst Footer = () => {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<FooterContainer>\n\t\t\t<ColumnContainer type=\"left\">\n\t\t\t\t<SnulingLogo\n\t\t\t\t\tsrc={`${process.env.PUBLIC_URL}/img/snuling_logo.png`}\n\t\t\t\t\talt=\"snuling_logo\"\n\t\t\t\t/>\n\t\t\t\t<FooterLabel>{t('address')}</FooterLabel>\n\t\t\t</ColumnContainer>\n\t\t\t<ColumnContainer type=\"right\">\n\t\t\t\t<FooterLabel>관련 사이트</FooterLabel>\n\t\t\t\t{siteList.map((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<a href={item.url} key={item.name} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t\t<FooterLabel>{item.name}</FooterLabel>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ColumnContainer>\n\t\t</FooterContainer>\n\t);\n};\n\nexport default Footer;\n","import { ExperimentType } from 'types/experiment';\nimport styled from 'styled-components';\nimport WarningIcon from '@mui/icons-material/Warning';\nimport { SubContent } from 'lib/constant/Components';\nimport { useTranslation } from 'react-i18next';\nimport { SNULIGHTYELLOW } from 'lib/constant';\n\nconst WarningContainer = styled.div`\n\twidth: 70%;\n\tpadding: 10px;\n\tborder-radius: 10px;\n\tbackground-color: ${SNULIGHTYELLOW};\n\tmargin: 10px 0px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tbox-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\n`;\n\nconst RowContainer = styled(SubContent)`\n\tmargin: 5px 0px;\n\tdisplay: flex;\n\talign-items: center;\n`;\n\ninterface Props {\n\texperiment: ExperimentType;\n}\n\nconst ExperimentDetailWarning = ({ experiment }: Props) => {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<WarningContainer>\n\t\t\t<RowContainer>\n\t\t\t\t<WarningIcon fontSize=\"small\" />\n\t\t\t\t주의사항\n\t\t\t</RowContainer>\n\t\t\t<RowContainer>\n\t\t\t\t{experiment.exp_type === 'ON'\n\t\t\t\t\t? '본 실험은 온라인으로 진행됩니다.'\n\t\t\t\t\t: `본 실험은 ${experiment.location}에서 오프라인으로 진행됩니다.`}\n\t\t\t</RowContainer>\n\t\t\t<RowContainer>\n\t\t\t\t본 실험에 참여해 주시면{' '}\n\t\t\t\t{experiment.reward_type === 'CASH'\n\t\t\t\t\t? `${experiment.reward_price}원을 현금으로 지급해 드립니다.`\n\t\t\t\t\t: `${experiment.reward}를 드립니다.`}\n\t\t\t</RowContainer>\n\t\t</WarningContainer>\n\t);\n};\n\nexport default ExperimentDetailWarning;\n","import { observer } from 'mobx-react';\nimport CreateIcon from '@mui/icons-material/Create';\nimport { SubTitle, Content } from 'lib/constant/Components';\nimport ExperimentDetailWarning from 'components/experiment/ExperimentDetailWarning';\nimport { useHistory, useParams } from 'react-router-dom';\nimport useStore from 'store/Index';\nimport { Button } from '@mui/material';\n\nconst ExperimentDetailBody = observer(() => {\n\tconst { id } = useParams<{ id: string }>();\n\tconst history = useHistory();\n\tconst { ExperimentStore, UserStore, ToastStore, LoadingStore } = useStore();\n\n\tconst onClickAssign = () => {\n\t\tif (UserStore.user === null)\n\t\t\tToastStore.setMessage('info', '실험에 참여하시려면 먼저 로그인을 해주세요');\n\t\telse if (ExperimentStore.experimentDetail?.exp_type === 'ON') {\n\t\t\tExperimentStore.putExperimentDetail(parseInt(id, 10));\n\t\t\tToastStore.setMessage('success', '실험에 참여되었습니다');\n\t\t\twindow.open(ExperimentStore.experimentDetail.link, '_blank');\n\t\t}\n\t};\n\n\tif (!ExperimentStore.experimentDetail) return null;\n\treturn (\n\t\t<>\n\t\t\t<SubTitle>{ExperimentStore.experimentDetail.title}</SubTitle>\n\t\t\t<Content\n\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t__html: `${ExperimentStore.experimentDetail.content}`,\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tdisabled={ExperimentStore.experimentDetail.is_full}\n\t\t\t\tonClick={onClickAssign}\n\t\t\t\tendIcon={<CreateIcon />}\n\t\t\t\tvariant=\"contained\"\n\t\t\t>\n\t\t\t\t{ExperimentStore.experimentDetail.is_full ? '모집 마감' : '실험 참여하기'}\n\t\t\t</Button>\n\t\t\t<ExperimentDetailWarning experiment={ExperimentStore.experimentDetail} />\n\t\t</>\n\t);\n});\n\nexport default ExperimentDetailBody;\n","import styled from 'styled-components';\nimport Button from '@mui/material/Button';\nimport PageTemplate from 'components/template/PageTemplate';\nimport { ExperimentMenus } from 'lib/menus';\nimport { observer } from 'mobx-react';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { useParams } from 'react-router-dom';\nimport useStore from 'store/Index';\n\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport { CircularProgress } from '@mui/material';\nimport ExperimentDetailBody from 'components/experiment/ExperimentDetailBody';\n\nconst BackButton = styled(Button)`\n\talign-self: flex-start;\n`;\n\nconst ExperimentDetail = observer(() => {\n\tconst { id } = useParams<{ id: string }>();\n\tconst history = useHistory();\n\tconst { ExperimentStore, LoadingStore } = useStore();\n\n\tconst getInit = async () => {\n\t\tLoadingStore.setLoading(true);\n\t\tlet res = await ExperimentStore.getExperimentDetail(parseInt(id, 10));\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\tuseEffect(() => {\n\t\tgetInit();\n\t}, []);\n\n\treturn (\n\t\t<PageTemplate menu={ExperimentMenus}>\n\t\t\t<BackButton onClick={() => history.goBack()} startIcon={<ArrowBackIosIcon />}>\n\t\t\t\t목록으로 가기\n\t\t\t</BackButton>\n\t\t\t{LoadingStore.loading ? <CircularProgress /> : <ExperimentDetailBody />}\n\t\t</PageTemplate>\n\t);\n});\n\nexport default ExperimentDetail;\n","import styled from 'styled-components';\nimport { Tab, Tabs } from '@mui/material';\nimport { useHistory, useLocation } from 'react-router';\nimport { useTranslation } from 'react-i18next';\nimport { SNULIGHTYELLOW } from 'lib/constant';\n\nconst TabContainer = styled(Tabs)`\n\twidth: 100vw;\n\tbox-sizing: border-box;\n\tpadding: 0px max(calc((100vw - 1000px) / 2), 5vw);\n\tdisplay: flex;\n\tposition: relative;\n\talign-items: center;\n\tjustify-content: space-between;\n\tbox-shadow: rgba(33, 35, 38, 0.3) 0px 10px 10px -10px;\n\tcolor: '#666666';\n\tz-index: 10;\n\tbackground-color: white;\n`;\n\nconst MenuItem = styled(Tab)``;\n\nconst tabs: { title: string; url: string }[] = [\n\t{ title: 'People', url: '/people' },\n\t{ title: 'Events & News', url: '/event' },\n\t{ title: 'Research & Projects', url: '/research' },\n\t{ title: 'Experiments', url: '/experiment' },\n\t// { title: 'Contact Us', url: '/contact' },\n];\n\nconst TabNavigation = () => {\n\tconst location = useLocation();\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\n\tconst getLocation = () => {\n\t\tconst firstPath = location.pathname.split('/')[1];\n\t\tif (['people', 'event', 'research', 'experiment'].includes(firstPath))\n\t\t\treturn `/${firstPath}`;\n\t\treturn false;\n\t};\n\n\treturn (\n\t\t<TabContainer\n\t\t\tvalue={getLocation()}\n\t\t\tcentered\n\t\t\tvariant=\"fullWidth\"\n\t\t\ttextColor=\"inherit\"\n\t\t\tindicatorColor=\"secondary\"\n\t\t>\n\t\t\t{tabs.map((item) => {\n\t\t\t\treturn (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tlabel={t(item.title)}\n\t\t\t\t\t\tvalue={item.url}\n\t\t\t\t\t\tkey={item.title}\n\t\t\t\t\t\tonClick={() => history.push(`${item.url}`)}\n\t\t\t\t\t\tsx={{ fontSize: 16 }}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</TabContainer>\n\t);\n};\n\nexport default TabNavigation;\n","import PageTemplate from 'components/template/PageTemplate';\nimport { useHistory } from 'react-router';\nimport { ExperimentMenus } from 'lib/menus';\nimport useStore from 'store/Index';\nimport { useEffect } from 'react';\nimport { SubTitle } from 'lib/constant/Components';\nimport { Grid } from '@mui/material';\nimport ExperimentBox from 'components/experiment/ExperimentBox';\n\nconst ExperimentMy = () => {\n\tconst { UserStore, ToastStore, ExperimentStore } = useStore();\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\tif (UserStore.user === null) {\n\t\t\tToastStore.setMessage('warning', '로그인 후 이용 가능합니다.');\n\t\t\thistory.push('/experiment');\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<PageTemplate title=\"my experiments\" menu={ExperimentMenus}>\n\t\t\t{ExperimentStore.myExperimentList.length > 0 ? (\n\t\t\t\t<Grid container rowSpacing={2} columnSpacing={3} alignItems=\"center\">\n\t\t\t\t\t{ExperimentStore.myExperimentList.map((item) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Grid item key={item.title} xs={12} md={6}>\n\t\t\t\t\t\t\t\t<ExperimentBox item={item} key={item.title} />\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Grid>\n\t\t\t) : (\n\t\t\t\t<div>아직 참여한 실험이 없군요 ! 지금 참여해보세요</div>\n\t\t\t)}\n\t\t</PageTemplate>\n\t);\n};\n\nexport default ExperimentMy;\n","import React, { useCallback, useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { useHistory } from 'react-router';\nimport useStore from 'store/Index';\nimport { useTranslation } from 'react-i18next';\nimport { Typography, Avatar, TextField, Button, FormGroup } from '@mui/material';\nimport styled from 'styled-components';\nimport { RowContainer } from 'lib/constant/Components';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { checkEmail } from 'lib/reg';\n\nconst SignUpContainer = styled(RowContainer)`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\nconst FormContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\twidth: 50%;\n`;\n\nconst SignUp = observer(() => {\n\tconst { UserStore, ToastStore } = useStore();\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\tconst [email, setEmail] = useState<string>('');\n\tconst [emailError, setEmailError] = useState<boolean>(false);\n\tconst [pw, setPw] = useState<string>('');\n\tconst [pwError, setPwError] = useState<boolean>(false);\n\tconst [pwCheck, setPwCheck] = useState<string>('');\n\tconst [pwCheckError, setPwCheckError] = useState<boolean>(false);\n\n\tconst onSubmit = async () => {\n\t\tif (email.trim().length === 0) {\n\t\t\tToastStore.setMessage('warning', '이메일을 입력해주세요');\n\t\t\tsetEmailError(true);\n\t\t} else if (!checkEmail(email.trim())) {\n\t\t\tToastStore.setMessage('warning', '올바른 형식의 이메일을 입력해주세요');\n\t\t\tsetEmailError(true);\n\t\t} else if (pw.trim().length === 0) {\n\t\t\tToastStore.setMessage('warning', '비밀번호를 입력하세요');\n\t\t\tsetPwError(true);\n\t\t} else if (pwCheck.trim().length === 0) {\n\t\t\tToastStore.setMessage('warning', '비밀번호 확인을 입력하세요');\n\t\t\tsetPwCheckError(true);\n\t\t} else if (pwCheck !== pw) {\n\t\t\tToastStore.setMessage('warning', '비밀번호가 일치하지 않습니다');\n\t\t\tsetPwCheckError(true);\n\t\t} else {\n\t\t\tawait UserStore.signUp(email, pw);\n\t\t\tUserStore.login(email, pw);\n\t\t\thistory.push('/');\n\t\t\tToastStore.setMessage('success', '회원가입 성공');\n\t\t}\n\t};\n\n\treturn (\n\t\t<SignUpContainer>\n\t\t\t<Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n\t\t\t\t<PersonIcon />\n\t\t\t</Avatar>\n\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t{t('Sign Up')}\n\t\t\t</Typography>\n\t\t\t<FormContainer>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\trequired\n\t\t\t\t\tid=\"email\"\n\t\t\t\t\tlabel={t('Email Address')}\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tautoFocus\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\tsetEmail(event.target.value)\n\t\t\t\t\t}\n\t\t\t\t\terror={emailError}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\trequired\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tlabel={t('Password')}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\tsetPw(event.target.value)\n\t\t\t\t\t}\n\t\t\t\t\terror={pwError}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\trequired\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tlabel={t('Password')}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\tsetPwCheck(event.target.value)\n\t\t\t\t\t}\n\t\t\t\t\terror={pwCheckError}\n\t\t\t\t/>\n\t\t\t</FormContainer>\n\t\t\t<Button type=\"submit\" size=\"medium\" variant=\"contained\" onClick={onSubmit}>\n\t\t\t\t{t('Sign Up')}\n\t\t\t</Button>\n\t\t</SignUpContainer>\n\t);\n});\n\nexport default SignUp;\n","import PageTemplate from 'components/template/PageTemplate';\nimport { EventsMenus } from 'lib/menus';\nimport { useParams } from 'react-router';\n\nconst EventsNews = () => {\n\tconst { type } = useParams<{ type: string }>();\n\treturn <PageTemplate title={type} menu={EventsMenus} />;\n};\n\nexport default EventsNews;\n","import { IconButton } from '@mui/material';\nimport { SNUGRAY } from 'lib/constant';\nimport { SubTitle } from 'lib/constant/Components';\nimport { ReactNode } from 'react';\nimport styled from 'styled-components';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SaveIcon from '@mui/icons-material/Save';\n\nconst BoxContainer = styled.div`\n\twidth: 60%;\n\tbox-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\n\tmargin: 10px 0px;\n`;\n\nconst TitleContainer = styled(SubTitle)`\n\tdisplay: flex;\n\tpadding: 10px;\n\tbackground-color: ${SNUGRAY};\n\tcolor: white;\n\tjustify-content: space-between;\n`;\n\nconst ChildrenContainer = styled.div`\n\tmin-height: 100px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\ninterface Props {\n\ttitle: string;\n\tchildren?: ReactNode;\n\teditMode?: boolean;\n\tonPressEditButton?: () => void;\n\tonPressSaveButton?: () => void;\n}\n\nconst MyPageBoxTemplate = ({\n\ttitle,\n\tchildren,\n\teditMode,\n\tonPressEditButton,\n\tonPressSaveButton,\n}: Props) => {\n\treturn (\n\t\t<BoxContainer>\n\t\t\t<TitleContainer>\n\t\t\t\t{title}\n\t\t\t\t{editMode ? (\n\t\t\t\t\t<IconButton onClick={onPressSaveButton}>\n\t\t\t\t\t\t<SaveIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t) : (\n\t\t\t\t\t<IconButton onClick={onPressEditButton}>\n\t\t\t\t\t\t<EditIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t)}\n\t\t\t</TitleContainer>\n\t\t\t<ChildrenContainer>{children}</ChildrenContainer>\n\t\t</BoxContainer>\n\t);\n};\n\nexport default MyPageBoxTemplate;\n","import MyPageBoxTemplate from 'components/template/MyPageBoxTemplate';\nimport useStore from 'store/Index';\n\nconst MyPageAccount = () => {\n\tconst { UserStore } = useStore();\n\n\tif (UserStore.user === null) return null;\n\treturn (\n\t\t<MyPageBoxTemplate title=\"Account Settings\">\n\t\t\t<div>Email: {UserStore.user?.username}</div>\n\t\t</MyPageBoxTemplate>\n\t);\n};\n\nexport default MyPageAccount;\n","import { FormControlLabel, Radio, RadioGroup } from '@mui/material';\nimport MyPageBoxTemplate from 'components/template/MyPageBoxTemplate';\nimport { languageList } from 'lib/constant';\nimport { observer } from 'mobx-react';\nimport { useState } from 'react';\nimport useStore from 'store/Index';\n\nconst MyPageLingual = observer(() => {\n\tconst { UserStore } = useStore();\n\tconst [langList, setLangList] = useState<string[]>(\n\t\tUserStore.user?.profile.lingual ? UserStore.user?.profile.lingual.split(',') : [],\n\t);\n\tconst [editMode, setEditMode] = useState<boolean>(false);\n\n\tconst onClickSaveButton = () => {\n\t\tsetEditMode(!editMode);\n\t};\n\n\tif (UserStore.user === null) return null;\n\treturn (\n\t\t<MyPageBoxTemplate\n\t\t\ttitle=\"Lingual Settings\"\n\t\t\teditMode={editMode}\n\t\t\tonPressEditButton={() => setEditMode(!editMode)}\n\t\t\tonPressSaveButton={onClickSaveButton}\n\t\t>\n\t\t\t<div>Languages: {langList.join(', ') || '선호 언어 없음'}</div>\n\t\t\t<RadioGroup>\n\t\t\t\t{languageList.map((lang) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tvalue={lang}\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\t\tchecked={langList.includes(lang)}\n\t\t\t\t\t\t\t\t\tdisabled={!editMode}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tif (langList.includes(lang))\n\t\t\t\t\t\t\t\t\t\t\tsetLangList(langList.filter((e) => e !== lang));\n\t\t\t\t\t\t\t\t\t\telse setLangList(langList.concat(lang));\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel={lang}\n\t\t\t\t\t\t\tkey={lang}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</RadioGroup>\n\t\t</MyPageBoxTemplate>\n\t);\n});\n\nexport default MyPageLingual;\n","import MyPageBoxTemplate from 'components/template/MyPageBoxTemplate';\nimport useStore from 'store/Index';\n\nconst MyPageEmail = () => {\n\tconst { UserStore } = useStore();\n\n\tif (UserStore.user === null) return null;\n\treturn (\n\t\t<MyPageBoxTemplate title=\"Email Settings\">\n\t\t\t<div>Email 수신 : {UserStore.user?.profile.subscribe ? '동의 ' : '비동의'}</div>\n\t\t</MyPageBoxTemplate>\n\t);\n};\n\nexport default MyPageEmail;\n","import { useEffect } from 'react';\nimport PageTemplate from 'components/template/PageTemplate';\nimport { observer } from 'mobx-react';\nimport { useHistory } from 'react-router';\nimport { useTranslation } from 'react-i18next';\nimport useStore from 'store/Index';\nimport { Button } from '@mui/material';\nimport MyPageAccount from 'components/mypage/MyPageAccount';\nimport MyPageLingual from 'components/mypage/MyPageLingual';\nimport MyPageEmail from 'components/mypage/MyPageEmail';\n\nconst MyPage = observer(() => {\n\tconst { UserStore, ToastStore, TokenStore } = useStore();\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\n\tuseEffect(() => {\n\t\tif (UserStore.user === null) history.replace('/');\n\t}, []);\n\n\tconst onClickLogout = async () => {\n\t\tconst result = await UserStore.logout();\n\t\tif (result) {\n\t\t\tTokenStore.clear();\n\t\t\thistory.push('/');\n\t\t\tToastStore.setMessage('success', '로그아웃 되었습니다');\n\t\t}\n\t};\n\n\tconst onClickQuit = async () => {\n\t\tconst result = await UserStore.deleteUser();\n\t\tif (result) {\n\t\t\tTokenStore.clear();\n\t\t\thistory.push('/');\n\t\t\tToastStore.setMessage('success', '회원탈퇴 되었습니다');\n\t\t}\n\t};\n\n\treturn (\n\t\t<PageTemplate title=\"My Info\">\n\t\t\t<Button variant=\"contained\" onClick={onClickLogout}>\n\t\t\t\t{t('logout')}\n\t\t\t</Button>\n\t\t\t<Button variant=\"text\" onClick={onClickQuit}>\n\t\t\t\t{t('quit')}\n\t\t\t</Button>\n\t\t\t<MyPageAccount />\n\t\t\t<MyPageLingual />\n\t\t\t<MyPageEmail />\n\t\t</PageTemplate>\n\t);\n});\n\nexport default MyPage;\n","import React, { useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router';\nimport './App.css';\nimport Home from 'pages/Home';\nimport Login from 'pages/Login';\nimport ExperimentMain from 'pages/Experiment/ExperimentMain';\nimport Header from 'components/Header';\nimport { observer, useObserver } from 'mobx-react';\nimport { Alert, Box, CssBaseline, Snackbar, ThemeProvider } from '@mui/material';\nimport { createTheme } from '@mui/material/styles';\nimport People from 'pages/People';\nimport ResearchProjects from 'pages/ResearchProjects';\nimport Footer from 'components/Footer';\nimport useStore from 'store/Index';\nimport ExperimentDetail from 'pages/Experiment/ExperimentDetail';\nimport TabNavigation from 'components/TabNavigation';\nimport { BrowserRouter } from 'react-router-dom';\nimport ExperimentMy from 'pages/Experiment/ExperimentMy';\nimport SignUp from 'pages/SignUp';\nimport EventsNews from 'pages/EventsNews';\nimport TokenHeader from 'lib/api/TokenHeader';\nimport MyPage from 'pages/MyPage';\nimport { SNUBLUE, SNULIGHTBLUE, SNULIGHTYELLOW, SNUYELLOW } from 'lib/constant';\n\nconst theme = createTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tlight: SNULIGHTBLUE,\n\t\t\tmain: SNUBLUE,\n\t\t},\n\t\tsecondary: {\n\t\t\tlight: SNULIGHTYELLOW,\n\t\t\tmain: SNUYELLOW,\n\t\t},\n\t\tbackground: {\n\t\t\tdefault: '#f3f3f3',\n\t\t},\n\t},\n\ttypography: {\n\t\tfontFamily: 'YoonGothic',\n\t},\n});\n\nconst App = observer(() => {\n\tconst { ToastStore, TokenStore, UserStore } = useStore();\n\n\tconst checkUser = async () => {\n\t\tconst res = await TokenStore.getAccessToken();\n\t\tif (res) {\n\t\t\tTokenHeader.setAccessToken(TokenStore.accessToken);\n\t\t\tUserStore.getUserInfo();\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tcheckUser();\n\t}, []);\n\n\treturn useObserver(() => (\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Header />\n\t\t\t\t<TabNavigation />\n\t\t\t\t<Box sx={{ flex: 1, minHeight: '100vh' }}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t\t\t\t<Route path=\"/experiment\" exact component={ExperimentMain} />\n\t\t\t\t\t\t<Route path=\"/experiment/my\" exact component={ExperimentMy} />\n\t\t\t\t\t\t<Route path=\"/experiment/:id\" exact component={ExperimentDetail} />\n\t\t\t\t\t\t<Route path=\"/people\" exact component={People} />\n\t\t\t\t\t\t<Route path=\"/event\" exact>\n\t\t\t\t\t\t\t<Redirect to=\"/event/schedule\" />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/event/:type\" exact component={EventsNews} />\n\t\t\t\t\t\t<Route path=\"/research\" exact>\n\t\t\t\t\t\t\t<Redirect to=\"/research/themes\" />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/research/:type\" exact component={ResearchProjects} />\n\n\t\t\t\t\t\t<Route path=\"/login\" exact component={Login} />\n\t\t\t\t\t\t<Route path=\"/signup\" exact component={SignUp} />\n\t\t\t\t\t\t<Route path=\"/mypage\" exact component={MyPage} />\n\t\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Box>\n\t\t\t\t<Footer />\n\t\t\t\t<Snackbar\n\t\t\t\t\tautoHideDuration={4000}\n\t\t\t\t\topen={ToastStore.isOpen}\n\t\t\t\t\tonClose={() => ToastStore.setIsOpen(false)}\n\t\t\t\t>\n\t\t\t\t\t<Alert severity={ToastStore.message.type}>{ToastStore.message.text}</Alert>\n\t\t\t\t</Snackbar>\n\t\t\t</ThemeProvider>\n\t\t</BrowserRouter>\n\t));\n});\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","// i18n.js\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport { langEn } from './langEn';\nimport { langKo } from './langKo';\n\nconst resources = {\n\ten: {\n\t\ttranslation: langEn,\n\t},\n\tko: {\n\t\ttranslation: langKo,\n\t},\n};\n\ni18n.use(initReactI18next).init({\n\tresources,\n\t// 초기 설정 언어\n\tlng: 'ko',\n\tfallbackLng: {\n\t\ten: ['en'],\n\t\tdefault: ['ko'],\n\t},\n\tdebug: true,\n\tdefaultNS: 'translation',\n\tns: 'translation',\n\tkeySeparator: false,\n\tinterpolation: {\n\t\tescapeValue: false,\n\t},\n\treact: {\n\t\tuseSuspense: false,\n\t},\n});\n\nexport default i18n;\n","export const langEn = {\n\tlogin: 'login',\n\t'Sign Up': 'Sign Up',\n\t'Email Address': 'Email Address',\n\tPassword: 'Password',\n\tlogout: 'logout',\n\tquit: 'withdrawal',\n\n\tExperiments: 'Experiments',\n\tseeOnlyAvailable: 'Show available experiments only',\n\tstatus: 'Status',\n\tlanguage: 'Language',\n\tlists: 'Lists',\n\t'my experiments': 'My Experiments',\n\t'experiment type': 'Experiment Type',\n\t'In Progress': 'In Progress',\n\tUnpublished: 'Unpublished',\n\tClosed: 'Closed',\n\n\tkorean: 'Korean',\n\tenglish: 'English',\n\tjapanese: 'Japanese',\n\tchinese: 'Chinese',\n\tfrench: 'French',\n\tspanish: 'Spanish',\n\n\tOnline: 'Online',\n\tOffline: 'Offline',\n\n\tPeople: 'People',\n\n\t'Events & News': 'Events & News',\n\tschedule: 'Schedule',\n\tcolloquium: 'Colloquium',\n\tseminar: 'Seminar',\n\tnews: 'News',\n\n\t'Research & Projects': 'Research & Projects',\n\n\t'My Page': 'My Page',\n\n\taddress:\n\t\t'Department of Linguistics, Seoul National University, Gwanak_1 Gwanak-ro, Seoul 151-745, Korea \\n Tel:+82-2-880-6164, Fax:+82-2-882-2451.',\n};\n","export const langKo = {\n\tlogin: '로그인',\n\t'Sign Up': '회원가입',\n\t'Email Address': '이메일',\n\tPassword: '패스워드',\n\tlogout: '로그아웃',\n\tquit: '회원 탈퇴',\n\n\tExperiments: '실험 참여',\n\tseeOnlyAvailable: '참여 가능한 실험만 보기',\n\tstatus: '실험 상태',\n\tlanguage: '언어',\n\tlists: '실험 목록',\n\t'my experiments': '내가 참여한 실험들',\n\t'experiment type': '실험 진행 방법',\n\t'In Progress': '진행중',\n\tUnpublished: '시작 전',\n\tClosed: '종료됨',\n\n\tkorean: '한국어',\n\tenglish: '영어',\n\tjapanese: '일본어',\n\tchinese: '중국어',\n\tfrench: '프랑스어',\n\tspanish: '스페인어',\n\n\tOnline: '온라인',\n\tOffline: '오프라인',\n\n\tPeople: '사람들',\n\n\t'Events & News': '이벤트 & 뉴스',\n\tschedule: '스케줄',\n\tcolloquium: '콜로퀴엄',\n\tseminar: '세미나',\n\tnews: '뉴스',\n\n\t'Research & Projects': '연구 & 프로젝트',\n\n\t'My Page': '마이페이지',\n\n\taddress:\n\t\t'서울대학교 언어학과, 서울특별시 관악구 관악로 1, 2동 108호 (151-745). linguist@snu.ac.kr \\n 전화:(02)880-6164, 팩스:(02)882-2451.',\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './lang/i18n'; // 다국어 지원 파일\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}