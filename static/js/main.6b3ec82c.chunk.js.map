{"version":3,"sources":["lib/constant/Components.tsx","pages/Home.tsx","lib/constant/index.ts","lib/api/TokenHeader.ts","lib/api/requests/index.ts","store/UserStore.tsx","store/TokenStore.tsx","store/ToastStore.tsx","store/ExperimentStore.tsx","store/LoadingStore.tsx","store/Index.tsx","pages/Login.tsx","components/experiment/ExperimentFilterButton.tsx","components/experiment/ExperimentFilter.tsx","components/experiment/ExperimentBox.tsx","components/experiment/ExperimentList.tsx","components/experiment/ExperimentBody.tsx","components/template/BannerTemplate.tsx","components/template/LeftMenuTemplate.tsx","components/template/PageTemplate.tsx","lib/menus.ts","pages/Experiment/ExperimentMain.tsx","components/Header.tsx","pages/People.tsx","pages/ResearchProjects.tsx","components/Footer.tsx","pages/Experiment/ExperimentDetail.tsx","components/TabNavigation.tsx","pages/Experiment/ExperimentMy.tsx","pages/SignUp.tsx","pages/EventsNews/EventsSchedule.tsx","pages/EventsNews/EventsColloquium.tsx","pages/EventsNews/EventsNews.tsx","pages/EventsNews/EventsSeminar.tsx","App.tsx","reportWebVitals.ts","lang/i18n.ts","index.tsx"],"names":["RowContainer","styled","div","window","screen","width","Math","floor","props","backgroundImg","Title","SubTitle","Content","SubContent","Home","API_BASE_URL","SNUGRAY","statusFilterList","name","value","lingualFilterList","map","lang","expTypeFilterList","TokenHeader","accessToken","this","params","headers","Authorization","undefined","GetRequest","url","axios","get","getHeader","PostRequest","body","post","UserStore","observable","userEmail","user","setUserEmail","email","setUser","isLoggedIn","console","log","signUp","pw","success","code","token","response","data","Token","status","error","login","getUserInfo","postUserInfo","userInfo","favor","subscribe","lingual","logout","e","TokenStore","setAccessToken","localStorage","setItem","getAccessToken","getItem","clear","ToastStore","isOpen","message","type","text","setIsOpen","setMessage","ExperimentStore","experimentList","experimentDetail","setExperimentList","setExperimentDetail","experiment","getExperimentList","available","expType","length","is_full","exp_type","getExperimentDetail","id","putExperimentDetail","PutRequest","put","LoadingStore","loading","setLoading","useStore","LoginContainer","FormContainer","Login","observer","history","useHistory","t","useTranslation","useState","setEmail","emailError","setEmailError","setPw","pwError","setPwError","onSubmit","a","trim","result","push","Avatar","sx","m","bgcolor","Typography","component","variant","TextField","margin","required","label","autoComplete","fullWidth","autoFocus","onChange","event","target","Button","size","onClick","ExperimentFilterButton","isSelected","FilterContainer","ButtonList","Stack","ExperimentFilter","statusFilter","setStatusFilter","availableFilter","setavailableFilter","expTypeFilter","setExpTypeFilter","lingualFilter","setLingualFilter","onClickStatusButton","join","onClickAvailableButton","onClickExpTypeButton","onClickLingualButton","includes","filter","concat","spacing","direction","alignItems","item","FormControlLabel","control","Checkbox","checked","BoxContainer","OnOffChip","Chip","LanguageChip","BottomBar","isFull","ExperimentBox","onClickBox","useCallback","title","icon","split","ExperimentList","Grid","container","rowSpacing","columnSpacing","xs","md","ExperimentBody","getInit","useEffect","CircularProgress","BannerContainer","BannerTemplate","subTitle","Divider","orientation","flexItem","LeftMenuContainer","Tabs","MenuItem","Tab","LeftMenuTemplate","menu","location","useLocation","secondPath","pathname","domain","getMenu","PageTemplateContainer","InnerContainer","ChildrenContainer","PageTemplate","children","ExperimentMenus","EventsMenus","ExperimentMain","HeaderContainer","SnulingLogo","img","LoginButton","Header","i18n","onClickLogout","src","process","alt","language","changeLanguage","People","ResearchProjects","FooterContainer","ColumnContainer","FooterLabel","siteList","Footer","href","rel","ExperimentDetail","useParams","parseInt","dangerouslySetInnerHTML","__html","content","disabled","open","link","endIcon","TabContainer","tabs","TabNavigation","firstPath","getLocation","centered","ExperimentMy","SignUpContainer","SignUp","pwCheck","setPwCheck","EventsSchedule","EventsColloquium","EventsNews","EventsSeminar","theme","createTheme","typography","fontFamily","App","useObserver","basename","ThemeProvider","Box","flex","minHeight","path","exact","to","Snackbar","autoHideDuration","onClose","Alert","severity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","resources","en","translation","ko","use","initReactI18next","init","lng","fallbackLng","default","debug","defaultNS","ns","keySeparator","interpolation","escapeValue","react","useSuspense","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b3ec82c.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const RowContainer = styled.div<{ backgroundImg?: string }>`\n\twidth: 100vw;\n\tdisplay: flex;\n\tbox-sizing: border-box;\n\talign-items: center;\n\tjustify-content: center;\n\tflex-direction: column;\n\tpadding: 10px max(calc((100vw - 1200px) / 2), 5vw);\n\t/* ${window.screen.width > 1100 ? Math.floor((window.screen.width - 1100) / 2) : '5vw'}; */\n\tbackground-image: url(${(props) => props.backgroundImg});\n`;\n\nexport const Title = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 500;\n\tfont-size: 3rem;\n\tpadding: 2rem 0px;\n\t/* border-bottom: 3px solid black; */\n`;\n\nexport const SubTitle = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 400;\n\tfont-size: 2rem;\n`;\n\nexport const Content = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 400;\n\tfont-size: 1.5rem;\n`;\n\nexport const SubContent = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 300;\n\tfont-size: 1rem;\n`;\n","// import { useHistory } from 'react-router';\nimport { RowContainer } from 'lib/constant/Components';\n\nconst Home = () => {\n\t// const history = useHistory();\n\n\treturn (\n\t\t<RowContainer>\n\t\t\t<div>홈페이지 제작중입니다. - team 0605s</div>\n\t\t</RowContainer>\n\t);\n};\n\nexport default Home;\n","import { FilterType, StatusType } from 'types/experiment';\n\nexport const API_BASE_URL = 'https://jinh0park.pythonanywhere.com/api/';\n\nexport const SNUBLUE = '#0f0f70';\nexport const SNUGRAY = '#666666';\nexport const SNUSILVER = '#D2D2D2';\n\nexport const languageList: string[] = [\n\t'korean',\n\t'english',\n\t'japanese',\n\t'chinese',\n\t'french',\n\t'spanish',\n];\n\nexport const statusFilterList: { name: string; value: StatusType }[] = [\n\t{\n\t\tname: 'In Progress',\n\t\tvalue: 'P',\n\t},\n\t{\n\t\tname: 'Unpublished',\n\t\tvalue: 'U',\n\t},\n\t{\n\t\tname: 'Closed',\n\t\tvalue: 'C',\n\t},\n];\n\nexport const lingualFilterList: { name: string; value: string }[] = languageList.map((lang) => {\n\treturn {\n\t\tname: lang,\n\t\tvalue: lang,\n\t};\n});\n\nexport const expTypeFilterList: { name: string; value: 'ON' | 'OFF' }[] = [\n\t{\n\t\tname: 'Online',\n\t\tvalue: 'ON',\n\t},\n\t{\n\t\tname: 'Offline',\n\t\tvalue: 'OFF',\n\t},\n];\n","class TokenHeader {\n\tstatic accessToken = '';\n\n\tstatic setAccessToken(accessToken: string) {\n\t\tthis.accessToken = accessToken;\n\t}\n\n\tstatic getHeader(params?: object) {\n\t\treturn {\n\t\t\theaders: {\n\t\t\t\tAuthorization: this.accessToken === '' ? undefined : `Bearer ${this.accessToken}`,\n\t\t\t},\n\t\t\tparams,\n\t\t};\n\t}\n}\n\nexport default TokenHeader;\n","import axios from 'axios';\nimport { API_BASE_URL } from '../../constant';\nimport TokenHeader from '../TokenHeader';\n\nexport const GetRequest = <T = any>(url: string, params?: object) =>\n\taxios.get<T>(`${API_BASE_URL}${url}`, TokenHeader.getHeader(params));\nexport const PostRequest = <T = any>(url: string, body?: object) =>\n\taxios.post<T>(`${API_BASE_URL}${url}`, body, TokenHeader.getHeader());\nexport const PutRequest = <T = any>(url: string, body?: object, params?: object) =>\n\taxios.put<T>(`${API_BASE_URL}${url}`, body, TokenHeader.getHeader(params));\nexport const DeleteRequest = <T = any>(url: string, params?: object) =>\n\taxios.delete<T>(`${API_BASE_URL}${url}`, TokenHeader.getHeader(params));\n","import { GetRequest, PostRequest } from 'lib/api/requests';\nimport { observable } from 'mobx';\nimport { TokenType } from 'types/token';\nimport { UserType } from 'types/user';\n\nconst UserStore = observable({\n\tuserEmail: '' as string | null,\n\tuser: null as UserType | null,\n\tsetUserEmail(email: string | null) {\n\t\tthis.userEmail = email;\n\t},\n\tsetUser(user: UserType | null) {\n\t\tthis.user = user;\n\t},\n\n\tisLoggedIn() {\n\t\tconsole.log(this.userEmail);\n\t\tif (this.userEmail === null) return false;\n\t\treturn true;\n\t},\n\n\tasync signUp(email: string, pw: string) {\n\t\tlet success = false;\n\t\tlet code = 200;\n\t\tlet token = '';\n\n\t\ttry {\n\t\t\tconst response = await PostRequest<TokenType>('signup/', {\n\t\t\t\temail,\n\t\t\t\tpw,\n\t\t\t});\n\t\t\ttoken = response.data.Token;\n\t\t\tcode = response.status;\n\t\t\tthis.setUserEmail(email);\n\t\t\tsuccess = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= SignUp Error =========');\n\t\t\tcode = e.response.status;\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn { success, code, token };\n\t},\n\n\tasync login(email: string, pw: string) {\n\t\tlet success = false;\n\t\tlet code = 200;\n\t\tlet token = '';\n\n\t\ttry {\n\t\t\tconst response = await PostRequest<TokenType>('login/', {\n\t\t\t\temail,\n\t\t\t\tpw,\n\t\t\t});\n\t\t\tthis.setUserEmail(email);\n\t\t\ttoken = response.data.Token;\n\t\t\tcode = response.status;\n\t\t\tsuccess = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= login Error =========');\n\t\t\tcode = e.response.status;\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn { success, code, token };\n\t},\n\n\tasync getUserInfo() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await GetRequest<UserType>('mypage/');\n\t\t\tthis.setUser(response.data);\n\t\t\tsuccess = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= getUserInfo Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync postUserInfo(userInfo: UserType) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await PostRequest<UserType>('mypage/', {\n\t\t\t\tfavor: userInfo.favor,\n\t\t\t\tsubscribe: userInfo.subscribe,\n\t\t\t\tlingual: userInfo.lingual,\n\t\t\t});\n\t\t\tthis.setUser(response.data);\n\t\t\tsuccess = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= postUserInfo Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync logout() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tthis.setUser(null);\n\t\t\tthis.setUserEmail(null);\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= signOutUser Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n});\n\nexport default UserStore;\n","import isValidToken from 'lib/token';\nimport { observable } from 'mobx';\n\nconst TokenStore = observable({\n\taccessToken: '' as string | null,\n\n\tsetAccessToken(accessToken: string) {\n\t\ttry {\n\t\t\twindow.localStorage.setItem('ACCESS_TOKEN', accessToken);\n\t\t\tthis.accessToken = accessToken;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= setAccessToken Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t},\n\n\tasync getAccessToken() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst data = await window.localStorage.getItem('ACCESS_TOKEN');\n\t\t\t// if (!data || !isValidToken(data)) return success;\n\t\t\tif (!data) this.accessToken = data;\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getAccessToken Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync clear() {\n\t\ttry {\n\t\t\tawait window.localStorage.clear();\n\t\t\tthis.accessToken = null;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= clear Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t},\n});\n\nexport default TokenStore;\n","import { observable } from 'mobx';\n\nconst ToastStore = observable({\n\tisOpen: false as boolean,\n\tmessage: { type: 'error', text: '' } as {\n\t\ttype: 'error' | 'warning' | 'info' | 'success';\n\t\ttext: string;\n\t},\n\n\tsetIsOpen(isOpen: boolean) {\n\t\tthis.isOpen = isOpen;\n\t},\n\tsetMessage(type: 'error' | 'warning' | 'info' | 'success', text: string) {\n\t\tthis.message.text = text;\n\t\tthis.message.type = type;\n\t\tthis.setIsOpen(true);\n\t},\n});\n\nexport default ToastStore;\n","import { GetRequest, PutRequest } from 'lib/api/requests';\nimport { observable } from 'mobx';\nimport { ExperimentType, StatusType } from 'types/experiment';\n\nconst ExperimentStore = observable({\n\texperimentList: [] as ExperimentType[],\n\texperimentDetail: {} as ExperimentType | undefined,\n\tsetExperimentList(experimentList: ExperimentType[]) {\n\t\tthis.experimentList = experimentList;\n\t},\n\tsetExperimentDetail(experiment: ExperimentType | undefined) {\n\t\tthis.experimentDetail = experiment;\n\t},\n\n\tasync getExperimentList(\n\t\tlingual?: string,\n\t\tstatus?: StatusType,\n\t\tavailable?: boolean,\n\t\texpType?: 'ON' | 'OFF',\n\t) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tthis.setExperimentList([]);\n\t\t\tconst response = await GetRequest('experiments/', {\n\t\t\t\tlingual: lingual && lingual.length > 0 ? lingual : undefined,\n\t\t\t\tstatus,\n\t\t\t\tis_full: available ? 'no' : undefined,\n\t\t\t\texp_type: expType,\n\t\t\t});\n\t\t\tthis.setExperimentList(response.data);\n\t\t\t// console.error('========= getExperimentList Success =========');\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getExperimentList Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync getExperimentDetail(id: number) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tthis.setExperimentDetail(undefined);\n\t\t\tconst response = await GetRequest(`experiments/${id}/`);\n\t\t\tthis.setExperimentDetail(response.data);\n\t\t\t// console.error('========= getExperimentDetail Success =========');\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getExperimentDetail Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync putExperimentDetail(id: number) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await PutRequest(`experiments/${id}`);\n\t\t\t// console.error('========= getExperimentDetail Success =========');\n\t\t\tif (response.data === 200) success = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getExperimentDetail Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n});\n\nexport default ExperimentStore;\n","import { observable } from 'mobx';\n\nconst LoadingStore = observable({\n\tloading: true as boolean,\n\tsetLoading(loading: boolean) {\n\t\tthis.loading = loading;\n\t},\n});\n\nexport default LoadingStore;\n","import UserStore from './UserStore';\nimport TokenStore from './TokenStore';\nimport ToastStore from './ToastStore';\nimport ExperimentStore from './ExperimentStore';\nimport LoadingStore from './LoadingStore';\n\nconst useStore = () => {\n\treturn {\n\t\tUserStore,\n\t\tTokenStore,\n\t\tToastStore,\n\t\tExperimentStore,\n\t\tLoadingStore,\n\t};\n};\n\nexport default useStore;\n","import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { useHistory } from 'react-router';\nimport useStore from 'store/Index';\nimport { useTranslation } from 'react-i18next';\nimport { Typography, Avatar, TextField, Button, FormGroup, useFormControl } from '@mui/material';\nimport PersonIcon from '@mui/icons-material/Person';\nimport styled from 'styled-components';\nimport { RowContainer } from 'lib/constant/Components';\n\nconst LoginContainer = styled(RowContainer)`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\nconst FormContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\twidth: 50%;\n`;\n\nconst Login = observer(() => {\n\tconst { UserStore, ToastStore } = useStore();\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\tconst [email, setEmail] = useState<string>('');\n\tconst [emailError, setEmailError] = useState<boolean>(false);\n\tconst [pw, setPw] = useState<string>('');\n\tconst [pwError, setPwError] = useState<boolean>(false);\n\n\tconst onSubmit = async () => {\n\t\tif (email.trim().length === 0) {\n\t\t\tToastStore.setMessage('warning', '이메일을 입력해주세요');\n\t\t\tsetEmailError(true);\n\t\t} else if (pw.trim().length === 0) {\n\t\t\tToastStore.setMessage('warning', '비밀번호를 입력하세요');\n\t\t\tsetPwError(true);\n\t\t} else {\n\t\t\tconst result = await UserStore.login(email, pw);\n\t\t\tif (result && result.code === 404) {\n\t\t\t\tToastStore.setMessage('error', '존재하지 않는 계정입니다');\n\t\t\t} else if (result && result.code >= 500) {\n\t\t\t\tToastStore.setMessage('error', '서버 오류');\n\t\t\t} else {\n\t\t\t\tToastStore.setMessage('success', ` ${email}로 로그인 되었습니다.`);\n\t\t\t\thistory.push('/');\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<LoginContainer>\n\t\t\t<Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n\t\t\t\t<PersonIcon />\n\t\t\t</Avatar>\n\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t{t('login')}\n\t\t\t</Typography>\n\t\t\t<FormContainer>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\trequired\n\t\t\t\t\tid=\"email\"\n\t\t\t\t\tlabel={t('Email Address')}\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tautoFocus\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\tsetEmail(event.target.value)\n\t\t\t\t\t}\n\t\t\t\t\terror={emailError}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\trequired\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tlabel={t('Password')}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\tsetPw(event.target.value)\n\t\t\t\t\t}\n\t\t\t\t\terror={pwError}\n\t\t\t\t/>\n\t\t\t</FormContainer>\n\t\t\t{/* <FormControlLabel\n\t\t\t\t\tcontrol={<Checkbox value=\"remember\" color=\"primary\" />}\n\t\t\t\t\tlabel=\"Remember me\"\n\t\t\t\t/> */}\n\t\t\t<Button variant=\"text\" size=\"medium\" onClick={() => history.push('/signup')}>\n\t\t\t\t계정이 없으신가요?\n\t\t\t</Button>\n\t\t\t<Button type=\"submit\" size=\"medium\" variant=\"contained\" onClick={onSubmit}>\n\t\t\t\t{t('login')}\n\t\t\t</Button>\n\t\t</LoginContainer>\n\t);\n});\n\nexport default Login;\n","import { Button } from '@mui/material';\n\ninterface Props {\n\tname: string;\n\tisSelected: boolean;\n\tonClick: () => void;\n}\n\nconst ExperimentFilterButton = ({ name, isSelected, onClick }: Props) => {\n\treturn (\n\t\t<Button variant={isSelected ? 'contained' : 'outlined'} onClick={onClick}>\n\t\t\t{name}\n\t\t</Button>\n\t);\n};\n\nexport default ExperimentFilterButton;\n","import styled from 'styled-components';\nimport { FormControlLabel, Stack, Checkbox } from '@mui/material';\nimport { expTypeFilterList, lingualFilterList, statusFilterList } from 'lib/constant';\nimport { useState } from 'react';\nimport useStore from 'store/Index';\nimport { observer } from 'mobx-react';\nimport { StatusType } from 'types/experiment';\nimport { useTranslation } from 'react-i18next';\nimport { SubContent } from 'lib/constant/Components';\nimport ExperimentFilterButton from './ExperimentFilterButton';\n\nconst FilterContainer = styled.div`\n\tpadding: 20px 0px;\n`;\nconst ButtonList = styled(Stack)`\n\tmargin: 20px 0px;\n`;\n\nconst ExperimentFilter = observer(() => {\n\tconst { ExperimentStore, LoadingStore } = useStore();\n\tconst { t } = useTranslation();\n\tconst [statusFilter, setStatusFilter] = useState<StatusType | undefined>(undefined);\n\tconst [availableFilter, setavailableFilter] = useState<boolean>(false);\n\tconst [expTypeFilter, setExpTypeFilter] = useState<'ON' | 'OFF' | undefined>(undefined);\n\tconst [lingualFilter, setLingualFilter] = useState<string[]>([]);\n\n\tconst onClickStatusButton = async (value: StatusType) => {\n\t\tLoadingStore.setLoading(true);\n\t\tsetStatusFilter(statusFilter === value ? undefined : value);\n\t\tlet res = await ExperimentStore.getExperimentList(\n\t\t\tlingualFilter.join(','),\n\t\t\tstatusFilter === value ? undefined : value,\n\t\t\tavailableFilter,\n\t\t\texpTypeFilter,\n\t\t);\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\tconst onClickAvailableButton = async (value: boolean) => {\n\t\tLoadingStore.setLoading(true);\n\t\tsetavailableFilter(value);\n\t\tlet res = await ExperimentStore.getExperimentList(\n\t\t\tlingualFilter.join(','),\n\t\t\tstatusFilter,\n\t\t\tvalue,\n\t\t\texpTypeFilter,\n\t\t);\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\tconst onClickExpTypeButton = async (value: 'ON' | 'OFF') => {\n\t\tLoadingStore.setLoading(true);\n\t\tsetExpTypeFilter(expTypeFilter === value ? undefined : value);\n\t\tlet res = await ExperimentStore.getExperimentList(\n\t\t\tlingualFilter.join(','),\n\t\t\tstatusFilter,\n\t\t\tavailableFilter,\n\t\t\texpTypeFilter === value ? undefined : value,\n\t\t);\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\tconst onClickLingualButton = async (value: string) => {\n\t\tLoadingStore.setLoading(true);\n\t\tsetLingualFilter(\n\t\t\tlingualFilter.includes(value)\n\t\t\t\t? lingualFilter.filter((e) => e !== value)\n\t\t\t\t: lingualFilter.concat(value),\n\t\t);\n\t\tlet res = await ExperimentStore.getExperimentList(\n\t\t\tlingualFilter.includes(value)\n\t\t\t\t? lingualFilter.filter((e) => e !== value).join(',')\n\t\t\t\t: lingualFilter.concat(value).join(','),\n\t\t\tstatusFilter,\n\t\t\tavailableFilter,\n\t\t\texpTypeFilter,\n\t\t);\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\treturn (\n\t\t<FilterContainer>\n\t\t\t<ButtonList spacing={2} direction=\"row\" alignItems=\"center\">\n\t\t\t\t<SubContent>{t('status')}</SubContent>\n\t\t\t\t{statusFilterList.map((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ExperimentFilterButton\n\t\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t\t\tisSelected={statusFilter === item.value}\n\t\t\t\t\t\t\tonClick={() => onClickStatusButton(item.value)}\n\t\t\t\t\t\t\tkey={item.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ButtonList>\n\t\t\t<ButtonList spacing={2} direction=\"row\" alignItems=\"center\">\n\t\t\t\t<SubContent>{t('language')}</SubContent>\n\t\t\t\t{lingualFilterList.map((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ExperimentFilterButton\n\t\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t\t\tisSelected={lingualFilter.includes(item.value)}\n\t\t\t\t\t\t\tonClick={() => onClickLingualButton(item.value)}\n\t\t\t\t\t\t\tkey={item.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ButtonList>\n\t\t\t<ButtonList spacing={2} direction=\"row\" alignItems=\"center\">\n\t\t\t\t<SubContent>{t('experiment type')}</SubContent>\n\t\t\t\t{expTypeFilterList.map((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ExperimentFilterButton\n\t\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t\t\tisSelected={expTypeFilter === item.value}\n\t\t\t\t\t\t\tonClick={() => onClickExpTypeButton(item.value)}\n\t\t\t\t\t\t\tkey={item.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ButtonList>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tchecked={availableFilter === true}\n\t\t\t\t\t\tonClick={() => onClickAvailableButton(!availableFilter)}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel={t('seeOnlyAvailable')}\n\t\t\t/>\n\t\t</FilterContainer>\n\t);\n});\n\nexport default ExperimentFilter;\n","import { ExperimentType } from 'types/experiment';\nimport styled from 'styled-components';\nimport { Content, SubTitle, SubContent } from 'lib/constant/Components';\nimport { useHistory } from 'react-router';\nimport { useCallback } from 'react';\nimport { Chip, Stack } from '@mui/material';\nimport PublicIcon from '@mui/icons-material/Public';\nimport CloudOffIcon from '@mui/icons-material/CloudOff';\nimport { SNUGRAY } from 'lib/constant';\n\nconst BoxContainer = styled.div`\n\twidth: 100%;\n\theight: 350px;\n\tborder-radius: 10px;\n\tbox-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tposition: relative;\n\t:hover {\n\t\topacity: 0.7;\n\t\tcursor: pointer;\n\t}\n`;\n\nconst OnOffChip = styled(Chip)`\n\tfont-size: 1rem;\n\tfont-weight: 400;\n\tposition: absolute;\n\ttop: 5%;\n\tright: 5%;\n\tz-index: 2;\n`;\n\nconst LanguageChip = styled(Chip)``;\n\nconst BottomBar = styled.div<{ isFull: boolean }>`\n\tposition: absolute;\n\tbottom: 0px;\n\twidth: 100%;\n\theight: 15%;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tborder-radius: 0px 0px 10px 10px;\n\tbackground-color: ${(props) => (props.isFull ? SNUGRAY : 'green')};\n\tcolor: white;\n\tfont-size: 1.3 rem;\n\tfont-weight: 500;\n`;\n\ninterface Props {\n\titem: ExperimentType;\n}\n\nconst ExperimentBox = ({ item }: Props) => {\n\tconst history = useHistory();\n\n\tconst onClickBox = useCallback(() => {\n\t\thistory.push(`/experiment/${item.id}`);\n\t}, []);\n\n\treturn (\n\t\t<BoxContainer onClick={onClickBox}>\n\t\t\t<SubTitle>{item.title}</SubTitle>\n\t\t\t{item.exp_type === 'ON' ? (\n\t\t\t\t<OnOffChip icon={<PublicIcon />} label=\"ONLINE\" />\n\t\t\t) : (\n\t\t\t\t<OnOffChip icon={<CloudOffIcon />} label=\"OFFLINE\" />\n\t\t\t)}\n\t\t\t{/* <Content>{item.exp_type === 'ON' ? 'Online' : 'Offline'}</Content> */}\n\t\t\t{/* <Content>{item.status}</Content> */}\n\t\t\t<SubContent>대상 모국어</SubContent>\n\t\t\t<Stack direction=\"row\" spacing={2}>\n\t\t\t\t{item.lingual &&\n\t\t\t\t\titem.lingual.split(',').map((lang) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<LanguageChip\n\t\t\t\t\t\t\t\tlabel={`# ${lang}`}\n\t\t\t\t\t\t\t\tkey={lang}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t</Stack>\n\t\t\t<BottomBar isFull={item.is_full}>{item.is_full ? '모집 완료 >' : '모집중 >'}</BottomBar>\n\t\t\t{/* <Content>{item.reward_price}</Content> */}\n\t\t</BoxContainer>\n\t);\n};\n\nexport default ExperimentBox;\n","import { Grid } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport useStore from 'store/Index';\nimport ExperimentBox from './ExperimentBox';\n\nconst ExperimentList = observer(() => {\n\tconst { ExperimentStore } = useStore();\n\n\treturn (\n\t\t<Grid container rowSpacing={2} columnSpacing={3} alignItems=\"center\">\n\t\t\t{ExperimentStore.experimentList.map((item) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Grid item key={item.title} xs={12} md={6}>\n\t\t\t\t\t\t<ExperimentBox item={item} key={item.title} />\n\t\t\t\t\t</Grid>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Grid>\n\t);\n});\n\nexport default ExperimentList;\n","import { CircularProgress } from '@mui/material';\nimport { Content } from 'lib/constant/Components';\nimport { observer } from 'mobx-react';\nimport { useEffect } from 'react';\nimport useStore from 'store/Index';\nimport ExperimentFilter from './ExperimentFilter';\nimport ExperimentList from './ExperimentList';\n\nconst ExperimentBody = observer(() => {\n\tconst { ExperimentStore, LoadingStore } = useStore();\n\n\tconst getInit = async () => {\n\t\tLoadingStore.setLoading(true);\n\t\tconst res = await ExperimentStore.getExperimentList();\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\tuseEffect(() => {\n\t\tgetInit();\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<ExperimentFilter />\n\t\t\t{/* <Divider orientation=\"horizontal\" variant=\"middle\" flexItem /> */}\n\t\t\t{LoadingStore.loading ? (\n\t\t\t\t<CircularProgress />\n\t\t\t) : ExperimentStore.experimentList.length ? (\n\t\t\t\t<ExperimentList />\n\t\t\t) : (\n\t\t\t\t<Content>no exp</Content>\n\t\t\t)}\n\t\t</>\n\t);\n});\n\nexport default ExperimentBody;\n","import styled from 'styled-components';\nimport { Divider } from '@mui/material';\nimport { Title } from 'lib/constant/Components';\nimport { useTranslation } from 'react-i18next';\n\nconst BannerContainer = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\tjustify-content: center;\n`;\n\ninterface Props {\n\ttitle: string;\n\tsubTitle?: string;\n\t// backgroundImg?: string;\n}\n\nconst BannerTemplate = ({ title, subTitle }: Props) => {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<BannerContainer>\n\t\t\t<Title>{t(title)}</Title>\n\t\t\t<Divider orientation=\"horizontal\" variant=\"middle\" flexItem />\n\t\t\t{/* {subTitle && <Content>{subTitle}</Content>} */}\n\t\t</BannerContainer>\n\t);\n};\n\nexport default BannerTemplate;\n","import { Tab, Tabs } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst LeftMenuContainer = styled(Tabs)`\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nconst MenuItem = styled(Tab)`\n\twidth: 200px;\n\tfont-size: 20px;\n\theight: 50px;\n`;\n\ninterface Props {\n\tmenu: { title: string; domain: string }[];\n}\n\nconst LeftMenuTemplate = ({ menu }: Props) => {\n\tconst location = useLocation();\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\n\tconst getMenu = () => {\n\t\tconst secondPath = location.pathname;\n\t\tif (menu.map((e) => e.domain).includes(secondPath)) return `${secondPath}`;\n\t\treturn false;\n\t};\n\n\treturn (\n\t\t<LeftMenuContainer value={getMenu()} orientation=\"vertical\">\n\t\t\t{menu.map((item) => {\n\t\t\t\treturn (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tlabel={t(item.title)}\n\t\t\t\t\t\tvalue={item.domain}\n\t\t\t\t\t\tkey={item.title}\n\t\t\t\t\t\tonClick={() => history.push(`${item.domain}`)}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</LeftMenuContainer>\n\t);\n};\n\nexport default LeftMenuTemplate;\n","import { RowContainer } from 'lib/constant/Components';\nimport { ReactNode } from 'react';\nimport styled from 'styled-components';\nimport BannerTemplate from './BannerTemplate';\nimport LeftMenuTemplate from './LeftMenuTemplate';\n\nconst PageTemplateContainer = styled.div`\n\tflex: 1;\n\twidth: 100vw;\n\tbox-sizing: border-box;\n\tpadding: 10px max(calc((100vw - 1000px) / 2), 5vw);\n`;\n\nconst InnerContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: row;\n`;\n\nconst ChildrenContainer = styled.div`\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\ninterface Props {\n\ttitle?: string;\n\tmenu?: { title: string; domain: string }[];\n\tchildren?: ReactNode;\n}\n\nconst PageTemplate = ({ title, menu, children }: Props) => {\n\treturn (\n\t\t<PageTemplateContainer>\n\t\t\t{title && <BannerTemplate title={title} />}\n\t\t\t<InnerContainer>\n\t\t\t\t{menu && <LeftMenuTemplate menu={menu} />}\n\t\t\t\t<ChildrenContainer>{children && children}</ChildrenContainer>\n\t\t\t</InnerContainer>\n\t\t</PageTemplateContainer>\n\t);\n};\n\nexport default PageTemplate;\n","export const ExperimentMenus = [\n\t{\n\t\ttitle: 'Lists',\n\t\tdomain: '/experiment',\n\t},\n\t{\n\t\ttitle: 'My Experiments',\n\t\tdomain: '/experiment/my',\n\t},\n];\n\nexport const EventsMenus = [\n\t{\n\t\ttitle: 'Schedule',\n\t\tdomain: '/event/schedule',\n\t},\n\t{\n\t\ttitle: 'Colloquium',\n\t\tdomain: '/event/colloquium',\n\t},\n\t{\n\t\ttitle: 'Seminar',\n\t\tdomain: '/event/seminar',\n\t},\n\t{\n\t\ttitle: 'News',\n\t\tdomain: '/event/news',\n\t},\n];\n\nexport const ResearchMenus = [\n\t{\n\t\ttitle: 'Themes',\n\t\tdomain: '/research/themes',\n\t},\n\t{\n\t\ttitle: 'Labs',\n\t\tdomain: '/research/labs',\n\t},\n\t{\n\t\ttitle: 'Affiliated Projects',\n\t\tdomain: '/event/affiliatedProjects',\n\t},\n];\n","import BannerTemplate from 'components/template/BannerTemplate';\nimport ExperimentBody from 'components/experiment/ExperimentBody';\nimport PageTemplate from 'components/template/PageTemplate';\nimport { ExperimentMenus } from 'lib/menus';\n\nconst ExperimentMain = () => {\n\treturn (\n\t\t<PageTemplate title=\"Experiments\" menu={ExperimentMenus}>\n\t\t\t<ExperimentBody />\n\t\t</PageTemplate>\n\t);\n};\n\nexport default ExperimentMain;\n","import styled from 'styled-components';\nimport Button from '@mui/material/Button';\nimport { useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { Stack } from '@mui/material';\nimport useStore from 'store/Index';\nimport { observer } from 'mobx-react';\nimport { Content } from 'lib/constant/Components';\n\nconst HeaderContainer = styled.div`\n\twidth: 100vw;\n\theight: 100px;\n\tbox-sizing: border-box;\n\tpadding: 10px max(calc((100vw - 1000px) / 2), 5vw);\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tjustify-content: space-between;\n`;\n\nconst SnulingLogo = styled.img`\n\twidth: 200px;\n\theight: auto;\n\topacity: 1;\n\t:hover {\n\t\topacity: 0.8;\n\t\tcursor: pointer;\n\t}\n`;\n\nconst LoginButton = styled(Button)``;\n\nconst Header = observer(() => {\n\tconst history = useHistory();\n\tconst { i18n, t } = useTranslation();\n\tconst { UserStore, ToastStore } = useStore();\n\n\tconst onClickChangeLanguage = () => {\n\t\tif (i18n.language === 'ko') i18n.changeLanguage('en');\n\t\telse if (i18n.language === 'en') i18n.changeLanguage('ko');\n\t};\n\n\tconst onClickLogout = async () => {\n\t\tconst result = await UserStore.logout();\n\t\tif (result) {\n\t\t\thistory.push('/');\n\t\t\tToastStore.setMessage('success', '로그아웃 되었습니다');\n\t\t}\n\t};\n\n\treturn (\n\t\t<HeaderContainer>\n\t\t\t<SnulingLogo\n\t\t\t\tsrc={`${process.env.PUBLIC_URL}/img/snuling_logo.png`}\n\t\t\t\talt=\"\"\n\t\t\t\tonClick={() => history.push('/')}\n\t\t\t/>\n\t\t\t<Stack spacing={2} direction=\"row\" alignItems=\"center\">\n\t\t\t\t<Button variant=\"text\" onClick={onClickChangeLanguage}>\n\t\t\t\t\t{i18n.language === 'ko' ? 'English' : '한국어'}\n\t\t\t\t</Button>\n\t\t\t\t{UserStore.userEmail ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Content>{UserStore.userEmail}</Content>\n\t\t\t\t\t\t<LoginButton variant=\"contained\" onClick={onClickLogout}>\n\t\t\t\t\t\t\t{t('logout')}\n\t\t\t\t\t\t</LoginButton>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<LoginButton variant=\"contained\" onClick={() => history.push('/login')}>\n\t\t\t\t\t\t\t{t('login')}\n\t\t\t\t\t\t</LoginButton>\n\t\t\t\t\t\t<LoginButton variant=\"text\" onClick={() => history.push('/signup')}>\n\t\t\t\t\t\t\t{t('Sign Up')}\n\t\t\t\t\t\t</LoginButton>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Stack>\n\t\t</HeaderContainer>\n\t);\n});\n\nexport default Header;\n","import PageTemplate from 'components/template/PageTemplate';\n\nconst People = () => {\n\treturn <PageTemplate title=\"People\" />;\n};\n\nexport default People;\n","import BannerTemplate from 'components/template/BannerTemplate';\nimport PageTemplate from 'components/template/PageTemplate';\n\nconst ResearchProjects = () => {\n\treturn <PageTemplate title=\"Research & Projects\" />;\n};\n\nexport default ResearchProjects;\n","import { SNUGRAY } from 'lib/constant';\nimport { RowContainer, SubContent } from 'lib/constant/Components';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nconst FooterContainer = styled(RowContainer)`\n\tbackground-color: ${SNUGRAY};\n\theight: 200px;\n\tpadding: 0px 10vw;\n\tdisplay: flex;\n\tflex-direction: row;\n`;\n\nconst ColumnContainer = styled.div<{ type: 'left' | 'right' }>`\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: ${(props) => props.type === 'right' && 'flex-end'};\n`;\n\nconst SnulingLogo = styled.img`\n\twidth: 200px;\n\theight: auto;\n\topacity: 1;\n\tmargin-bottom: 20px;\n\t:hover {\n\t\tcursor: pointer;\n\t}\n`;\n\nconst FooterLabel = styled(SubContent)`\n\tcolor: white;\n\ttext-align: left;\n\tline-height: 25px;\n\ttext-decoration: none;\n`;\n\nconst siteList: { name: string; url: string }[] = [\n\t{ name: '언어학과 홈페이지', url: 'http://hosting01.snu.ac.kr/~linguist/' },\n\t{ name: '서울대학교 인문대학', url: 'http://humanities.snu.ac.kr' },\n];\nconst Footer = () => {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<FooterContainer>\n\t\t\t<ColumnContainer type=\"left\">\n\t\t\t\t<SnulingLogo\n\t\t\t\t\tsrc={`${process.env.PUBLIC_URL}/img/snuling_logo.png`}\n\t\t\t\t\talt=\"snuling_logo\"\n\t\t\t\t/>\n\t\t\t\t<FooterLabel>{t('address')}</FooterLabel>\n\t\t\t</ColumnContainer>\n\t\t\t<ColumnContainer type=\"right\">\n\t\t\t\t<FooterLabel>관련 사이트</FooterLabel>\n\t\t\t\t{siteList.map((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<a href={item.url} key={item.name} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t\t<FooterLabel>{item.name}</FooterLabel>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ColumnContainer>\n\t\t</FooterContainer>\n\t);\n};\n\nexport default Footer;\n","import Button from '@mui/material/Button';\nimport PageTemplate from 'components/template/PageTemplate';\nimport { ExperimentMenus } from 'lib/menus';\nimport { observer } from 'mobx-react';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { useParams } from 'react-router-dom';\nimport useStore from 'store/Index';\nimport CreateIcon from '@mui/icons-material/Create';\nimport { SubTitle, Content } from 'lib/constant/Components';\n\nconst ExperimentDetail = observer(() => {\n\tconst { id } = useParams<{ id: string }>();\n\tconst history = useHistory();\n\tconst { ExperimentStore, UserStore, ToastStore } = useStore();\n\n\tconst onClickAssign = () => {\n\t\tif (UserStore.isLoggedIn())\n\t\t\tToastStore.setMessage('info', '실험에 참여하시려면 먼저 로그인을 해주세요');\n\t\telse if (ExperimentStore.experimentDetail?.exp_type === 'ON') {\n\t\t\tExperimentStore.putExperimentDetail(parseInt(id, 10));\n\t\t\thistory.push('/experiment');\n\t\t\twindow.open(ExperimentStore.experimentDetail.link, '_blank');\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tExperimentStore.getExperimentDetail(parseInt(id, 10));\n\t}, []);\n\n\tif (!ExperimentStore.experimentDetail) return null;\n\treturn (\n\t\t<PageTemplate title=\"Experiments\" menu={ExperimentMenus}>\n\t\t\t{/* <Button onClick={() => history.goBack()}>목록으로 가기</Button> */}\n\t\t\t<SubTitle>{ExperimentStore.experimentDetail.title}</SubTitle>\n\t\t\t<Content\n\t\t\t\tdangerouslySetInnerHTML={{ __html: `${ExperimentStore.experimentDetail.content}` }}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tdisabled={ExperimentStore.experimentDetail.is_full}\n\t\t\t\tonClick={onClickAssign}\n\t\t\t\tendIcon={<CreateIcon />}\n\t\t\t\tvariant=\"contained\"\n\t\t\t>\n\t\t\t\t실험 참여하기\n\t\t\t</Button>\n\t\t</PageTemplate>\n\t);\n});\n\nexport default ExperimentDetail;\n","import styled from 'styled-components';\nimport { Tab, Tabs } from '@mui/material';\nimport { useHistory, useLocation } from 'react-router';\nimport { useTranslation } from 'react-i18next';\n\nconst TabContainer = styled(Tabs)`\n\twidth: 100vw;\n\tbox-sizing: border-box;\n\tpadding: 10px max(calc((100vw - 1000px) / 2), 5vw);\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tbackground-color: #cdcdcd;\n`;\n\nconst MenuItem = styled(Tab)`\n\tfont-size: 20px;\n`;\n\nconst tabs: { title: string; url: string }[] = [\n\t{ title: 'People', url: '/people' },\n\t{ title: 'Events & News', url: '/event/schedule' },\n\t{ title: 'Research & Projects', url: '/research' },\n\t{ title: 'Experiments', url: '/experiment' },\n\t// { title: 'Contact Us', url: '/contact' },\n];\n\nconst TabNavigation = () => {\n\tconst location = useLocation();\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\n\tconst getLocation = () => {\n\t\tconst firstPath = location.pathname.split('/')[1];\n\t\tif (['people', 'event', 'research', 'experiment'].includes(firstPath))\n\t\t\treturn `/${firstPath}`;\n\t\treturn false;\n\t};\n\n\treturn (\n\t\t<TabContainer value={getLocation()} centered variant=\"fullWidth\">\n\t\t\t{tabs.map((item) => {\n\t\t\t\treturn (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tlabel={t(item.title)}\n\t\t\t\t\t\tvalue={item.url}\n\t\t\t\t\t\tkey={item.title}\n\t\t\t\t\t\tonClick={() => history.push(`${item.url}`)}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</TabContainer>\n\t);\n};\n\nexport default TabNavigation;\n","import BannerTemplate from 'components/template/BannerTemplate';\nimport ExperimentBody from 'components/experiment/ExperimentBody';\nimport PageTemplate from 'components/template/PageTemplate';\nimport { Route, Router } from 'react-router';\n\nexport const ExperimentMenus = [\n\t{\n\t\ttitle: 'Lists',\n\t\tdomain: '/experiment',\n\t},\n\t{\n\t\ttitle: 'My Experiments',\n\t\tdomain: '/experiment/my',\n\t},\n];\n\nconst ExperimentMy = () => {\n\treturn <PageTemplate title=\"Experiments\" menu={ExperimentMenus} />;\n};\n\nexport default ExperimentMy;\n","import React, { useCallback, useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { useHistory } from 'react-router';\nimport useStore from 'store/Index';\nimport { useTranslation } from 'react-i18next';\nimport { Typography, Avatar, TextField, Button, FormGroup } from '@mui/material';\nimport styled from 'styled-components';\nimport { RowContainer } from 'lib/constant/Components';\n\nconst SignUpContainer = styled(RowContainer)`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\nconst FormContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\twidth: 50%;\n`;\n\nconst SignUp = observer(() => {\n\tconst { UserStore, ToastStore } = useStore();\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\tconst [email, setEmail] = useState<string>('');\n\tconst [pw, setPw] = useState<string>('');\n\tconst [pwCheck, setPwCheck] = useState<string>('');\n\n\tconst onSubmit = () => {\n\t\tif (email.trim().length === 0) {\n\t\t\tToastStore.setMessage('warning', '이메일을 입력해주세요');\n\t\t} else if (pw.trim().length === 0) {\n\t\t\tToastStore.setMessage('warning', '비밀번호를 입력하세요');\n\t\t} else if (pwCheck !== pw) {\n\t\t\tToastStore.setMessage('warning', '비밀번호가 일치하지 않습니다');\n\t\t} else {\n\t\t\tUserStore.signUp(email, pw);\n\t\t\thistory.push('/');\n\t\t}\n\t};\n\n\treturn (\n\t\t<SignUpContainer>\n\t\t\t{/* <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n\t\t\t\t<LockOutlinedIcon />\n\t\t\t</Avatar> */}\n\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t{t('Sign Up')}\n\t\t\t</Typography>\n\t\t\t<FormContainer>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\trequired\n\t\t\t\t\tid=\"email\"\n\t\t\t\t\tlabel={t('Email Address')}\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tautoFocus\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\tsetEmail(event.target.value)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\trequired\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tlabel={t('Password')}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\tsetPw(event.target.value)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\trequired\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tlabel={t('Password')}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\tsetPwCheck(event.target.value)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</FormContainer>\n\t\t\t{/* <FormControlLabel\n\t\t\t\t\tcontrol={<Checkbox value=\"remember\" color=\"primary\" />}\n\t\t\t\t\tlabel=\"Remember me\"\n\t\t\t\t/> */}\n\t\t\t<Button type=\"submit\" size=\"medium\" variant=\"contained\" onClick={onSubmit}>\n\t\t\t\t{t('Sign Up')}\n\t\t\t</Button>\n\t\t</SignUpContainer>\n\t);\n});\n\nexport default SignUp;\n","import PageTemplate from 'components/template/PageTemplate';\nimport { EventsMenus } from 'lib/menus';\n\nconst EventsSchedule = () => {\n\treturn <PageTemplate title=\"Events & News\" menu={EventsMenus} />;\n};\n\nexport default EventsSchedule;\n","import PageTemplate from 'components/template/PageTemplate';\nimport { EventsMenus } from 'lib/menus';\n\nconst EventsColloquium = () => {\n\treturn <PageTemplate title=\"Events & News\" menu={EventsMenus} />;\n};\n\nexport default EventsColloquium;\n","import PageTemplate from 'components/template/PageTemplate';\nimport { EventsMenus } from 'lib/menus';\n\nconst EventsNews = () => {\n\treturn <PageTemplate title=\"Events & News\" menu={EventsMenus} />;\n};\n\nexport default EventsNews;\n","import PageTemplate from 'components/template/PageTemplate';\nimport { EventsMenus } from 'lib/menus';\n\nconst EventsSeminar = () => {\n\treturn <PageTemplate title=\"Events & News\" menu={EventsMenus} />;\n};\n\nexport default EventsSeminar;\n","import React, { useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router';\nimport './App.css';\nimport Home from 'pages/Home';\nimport Login from 'pages/Login';\nimport ExperimentMain from 'pages/Experiment/ExperimentMain';\nimport Header from 'components/Header';\nimport { observer, useObserver } from 'mobx-react';\nimport { Alert, Box, Snackbar, ThemeProvider } from '@mui/material';\nimport { createTheme } from '@mui/material/styles';\nimport People from 'pages/People';\nimport ResearchProjects from 'pages/ResearchProjects';\nimport Footer from 'components/Footer';\nimport useStore from 'store/Index';\nimport ExperimentDetail from 'pages/Experiment/ExperimentDetail';\nimport TabNavigation from 'components/TabNavigation';\nimport { BrowserRouter } from 'react-router-dom';\nimport ExperimentMy from 'pages/Experiment/ExperimentMy';\nimport SignUp from 'pages/SignUp';\nimport EventsSchedule from 'pages/EventsNews/EventsSchedule';\nimport EventsColloquium from 'pages/EventsNews/EventsColloquium';\nimport EventsNews from 'pages/EventsNews/EventsNews';\nimport EventsSeminar from 'pages/EventsNews/EventsSeminar';\n\nconst theme = createTheme({\n\ttypography: {\n\t\tfontFamily: 'YoonGothic',\n\t},\n});\n\nconst App = observer(() => {\n\tconst { ToastStore, TokenStore } = useStore();\n\n\tuseEffect(() => {\n\t\tTokenStore.getAccessToken();\n\t}, []);\n\n\treturn useObserver(() => (\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<Header />\n\t\t\t\t<TabNavigation />\n\t\t\t\t<Box sx={{ flex: 1, minHeight: '100vh' }}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t\t\t\t<Route path=\"/experiment\" exact component={ExperimentMain} />\n\t\t\t\t\t\t<Route path=\"/experiment/my\" exact component={ExperimentMy} />\n\t\t\t\t\t\t<Route path=\"/experiment/:id\" exact component={ExperimentDetail} />\n\t\t\t\t\t\t<Route path=\"/people\" exact component={People} />\n\t\t\t\t\t\t<Route path=\"/event/schedule\" exact component={EventsSchedule} />\n\t\t\t\t\t\t<Route path=\"/event/colloquium\" exact component={EventsColloquium} />\n\t\t\t\t\t\t<Route path=\"/event/news\" exact component={EventsNews} />\n\t\t\t\t\t\t<Route path=\"/event/seminar\" exact component={EventsSeminar} />\n\t\t\t\t\t\t<Route path=\"/research\" exact component={ResearchProjects} />\n\t\t\t\t\t\t<Route path=\"/login\" exact component={Login} />\n\t\t\t\t\t\t<Route path=\"/signup\" exact component={SignUp} />\n\t\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Box>\n\t\t\t\t<Footer />\n\t\t\t\t<Snackbar\n\t\t\t\t\tautoHideDuration={4000}\n\t\t\t\t\topen={ToastStore.isOpen}\n\t\t\t\t\tonClose={() => ToastStore.setIsOpen(false)}\n\t\t\t\t>\n\t\t\t\t\t<Alert severity={ToastStore.message.type}>{ToastStore.message.text}</Alert>\n\t\t\t\t</Snackbar>\n\t\t\t</ThemeProvider>\n\t\t</BrowserRouter>\n\t));\n});\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","// i18n.js\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport langEn from './lang.en.json';\nimport langKo from './lang.ko.json';\n\nconst resources = {\n\ten: {\n\t\ttranslation: langEn,\n\t},\n\tko: {\n\t\ttranslation: langKo,\n\t},\n};\n\ni18n.use(initReactI18next).init({\n\tresources,\n\t// 초기 설정 언어\n\tlng: 'ko',\n\tfallbackLng: {\n\t\ten: ['en'],\n\t\tdefault: ['ko'],\n\t},\n\tdebug: true,\n\tdefaultNS: 'translation',\n\tns: 'translation',\n\tkeySeparator: false,\n\tinterpolation: {\n\t\tescapeValue: false,\n\t},\n\treact: {\n\t\tuseSuspense: false,\n\t},\n});\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './lang/i18n'; // 다국어 지원 파일\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}