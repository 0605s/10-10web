{"version":3,"sources":["lib/constant/Components.tsx","pages/Home.tsx","lib/constant/index.ts","lib/api/TokenHeader.ts","lib/api/requests/index.ts","store/UserStore.tsx","lib/token/index.ts","store/TokenStore.tsx","store/ToastStore.tsx","store/ExperimentStore.tsx","store/LoadingStore.tsx","store/Index.tsx","pages/Login.tsx","components/experiment/ExperimentFilterButton.tsx","components/experiment/ExperimentFilter.tsx","components/experiment/ExperimentBox.tsx","components/experiment/ExperimentList.tsx","components/experiment/ExperimentBody.tsx","components/template/BannerTemplate.tsx","components/template/LeftMenuTemplate.tsx","components/template/PageTemplate.tsx","pages/Experiment/ExperimentMain.tsx","components/Header.tsx","pages/People.tsx","pages/EventsNews.tsx","pages/ResearchProjects.tsx","components/Footer.tsx","pages/Experiment/ExperimentDetail.tsx","components/TabNavigation.tsx","pages/Experiment/ExperimentMy.tsx","pages/SignUp.tsx","App.tsx","reportWebVitals.ts","lang/i18n.ts","index.tsx"],"names":["RowContainer","styled","div","window","screen","width","Math","floor","props","backgroundImg","Title","Content","SubContent","Home","API_BASE_URL","statusFilterList","name","value","lingualFilterList","map","lang","TokenHeader","accessToken","this","params","headers","Authorization","undefined","GetRequest","url","axios","get","getHeader","PostRequest","body","post","UserStore","observable","userEmail","user","setUserEmail","email","setUser","signUp","pw","success","code","token","response","data","Token","status","console","error","login","getUserInfo","postUserInfo","userInfo","favor","subscribe","lingual","getExpiredFromJwt","now","expireTime","jwt_decode","exp","e","log","isValidToken","expireUnixTime","moment","unix","diff","TokenStore","refreshToken","setAccessToken","setRefreshToken","saveAndSetTokens","localStorage","multiSet","getAccessToken","getItem","getRefreshToken","clear","ToastStore","isOpen","text","setIsOpen","setText","ExperimentStore","experimentList","experimentDetail","setExperimentList","setExperimentDetail","experiment","getExperimentList","available","length","is_full","getExperimentDetail","id","putExperimentDetail","PutRequest","put","LoadingStore","loading","setLoading","useStore","LoginContainer","FormContainer","Login","observer","history","useHistory","t","useTranslation","useState","setEmail","setPw","Typography","component","variant","TextField","margin","required","label","autoComplete","fullWidth","autoFocus","onChange","event","target","type","Button","size","onClick","push","ExperimentFilterButton","isSelected","FilterContainer","ButtonList","Stack","ExperimentFilter","statusFilter","setStatusFilter","availableFilter","setavailableFilter","lingualFilter","setLingualFilter","onClickStatusButton","a","join","onClickAvailableButton","onClickLingualButton","includes","filter","concat","spacing","direction","item","FormControlLabel","control","Checkbox","checked","BoxContainer","ExperimentBox","onClickBox","useCallback","title","exp_type","reward_price","ExperimentList","Grid","container","rowSpacing","columnSpacing","alignItems","xs","md","ExperimentBody","getInit","useEffect","CircularProgress","BannerContainer","BannerTemplate","subTitle","Divider","orientation","flexItem","LeftMenuContainer","Tabs","MenuItem","Tab","LeftMenuTemplate","menu","location","useLocation","secondPath","pathname","domain","getMenu","PageTemplateContainer","InnerContainer","ChildrenContainer","PageTemplate","children","ExperimentMenus","ExperimentMain","HeaderContainer","SnulingLogo","img","LoginButton","Header","i18n","src","process","alt","language","changeLanguage","People","EventsNews","ResearchProjects","FooterContainer","ColumnContainer","FooterLabel","siteList","Footer","href","rel","ExperimentDetail","useParams","parseInt","disabled","goBack","TabContainer","tabs","TabNavigation","firstPath","split","getLocation","centered","ExperimentMy","SignUpContainer","SignUp","theme","createTheme","typography","fontFamily","App","useObserver","basename","ThemeProvider","Box","sx","flex","minHeight","path","exact","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","resources","en","translation","ko","use","initReactI18next","init","lng","fallbackLng","default","debug","defaultNS","ns","keySeparator","interpolation","escapeValue","react","useSuspense","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff696715.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const RowContainer = styled.div<{ backgroundImg?: string }>`\n\twidth: 100vw;\n\tdisplay: flex;\n\tbox-sizing: border-box;\n\talign-items: center;\n\tjustify-content: center;\n\tflex-direction: column;\n\tpadding: 10px max(calc((100vw - 1200px) / 2), 5vw);\n\t/* ${window.screen.width > 1100 ? Math.floor((window.screen.width - 1100) / 2) : '5vw'}; */\n\tbackground-image: url(${(props) => props.backgroundImg});\n`;\n\nexport const Title = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 500;\n\tfont-size: 3rem;\n\tpadding: 2rem 0px;\n\t/* border-bottom: 3px solid black; */\n`;\n\nexport const SubTitle = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 400;\n\tfont-size: 2rem;\n`;\n\nexport const Content = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 400;\n\tfont-size: 1.5rem;\n`;\n\nexport const SubContent = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 300;\n\tfont-size: 1rem;\n`;\n","// import { useHistory } from 'react-router';\nimport { RowContainer } from 'lib/constant/Components';\n\nconst Home = () => {\n\t// const history = useHistory();\n\n\treturn (\n\t\t<RowContainer>\n\t\t\t<div>홈페이지 제작중입니다. - team 0605s</div>\n\t\t</RowContainer>\n\t);\n};\n\nexport default Home;\n","import { FilterType } from 'types/experiment';\n\nexport const API_BASE_URL = 'https://jinh0park.pythonanywhere.com/api/';\n\nexport const SNUBLUE = '#0f0f70';\nexport const SNUGRAY = '#666666';\nexport const SNUSILVER = '#D2D2D2';\n\nexport const languageList: string[] = [\n\t'korean',\n\t'english',\n\t'japanese',\n\t'chinese',\n\t'french',\n\t'spanish',\n];\n\nexport const statusFilterList: { name: string; value: 'I' | 'U' | 'C' }[] = [\n\t{\n\t\tname: 'In Progress',\n\t\tvalue: 'I',\n\t},\n\t{\n\t\tname: 'Unpublished',\n\t\tvalue: 'U',\n\t},\n\t{\n\t\tname: 'Closed',\n\t\tvalue: 'C',\n\t},\n];\n\nexport const isFullFilterList: { name: string; value: boolean }[] = [\n\t{\n\t\tname: 'Recruiting',\n\t\tvalue: false,\n\t},\n\t{\n\t\tname: 'Recruitment Complete',\n\t\tvalue: true,\n\t},\n];\n\nexport const lingualFilterList: { name: string; value: string }[] = languageList.map((lang) => {\n\treturn {\n\t\tname: lang,\n\t\tvalue: lang,\n\t};\n});\n","class TokenHeader {\n\tstatic accessToken = '';\n\n\tstatic setAccessToken(accessToken: string) {\n\t\tthis.accessToken = accessToken;\n\t}\n\n\tstatic getHeader(params?: object) {\n\t\treturn {\n\t\t\theaders: {\n\t\t\t\tAuthorization: this.accessToken === '' ? undefined : `Bearer ${this.accessToken}`,\n\t\t\t},\n\t\t\tparams,\n\t\t};\n\t}\n}\n\nexport default TokenHeader;\n","import axios from 'axios';\nimport { API_BASE_URL } from '../../constant';\nimport TokenHeader from '../TokenHeader';\n\nexport const GetRequest = <T = any>(url: string, params?: object) =>\n\taxios.get<T>(`${API_BASE_URL}${url}`, TokenHeader.getHeader(params));\nexport const PostRequest = <T = any>(url: string, body?: object) =>\n\taxios.post<T>(`${API_BASE_URL}${url}`, body, TokenHeader.getHeader());\nexport const PutRequest = <T = any>(url: string, body?: object, params?: object) =>\n\taxios.put<T>(`${API_BASE_URL}${url}`, body, TokenHeader.getHeader(params));\nexport const DeleteRequest = <T = any>(url: string, params?: object) =>\n\taxios.delete<T>(`${API_BASE_URL}${url}`, TokenHeader.getHeader(params));\n","import { GetRequest, PostRequest } from 'lib/api/requests';\nimport { observable } from 'mobx';\nimport { TokenType } from 'types/token';\nimport { UserType } from 'types/user';\n\nconst UserStore = observable({\n\tuserEmail: '' as string | null,\n\tuser: null as UserType | null,\n\tsetUserEmail(email: string | null) {\n\t\tthis.userEmail = email;\n\t},\n\tsetUser(user: UserType | null) {\n\t\tthis.user = user;\n\t},\n\n\tasync signUp(email: string, pw: string) {\n\t\tlet success = false;\n\t\tlet code = 200;\n\t\tlet token = '';\n\n\t\ttry {\n\t\t\tconst response = await PostRequest<TokenType>('signup/', {\n\t\t\t\temail,\n\t\t\t\tpw,\n\t\t\t});\n\t\t\ttoken = response.data.Token;\n\t\t\tcode = response.status;\n\t\t\tthis.setUserEmail(email);\n\t\t\tsuccess = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= SignUp Error =========');\n\t\t\tcode = e.response.status;\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn { success, code, token };\n\t},\n\n\tasync login(email: string, pw: string) {\n\t\tlet success = false;\n\t\tlet code = 200;\n\t\tlet token = '';\n\n\t\ttry {\n\t\t\tconst response = await PostRequest<TokenType>('login/', {\n\t\t\t\temail,\n\t\t\t\tpw,\n\t\t\t});\n\t\t\tthis.setUserEmail(email);\n\t\t\ttoken = response.data.Token;\n\t\t\tcode = response.status;\n\t\t\tsuccess = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= login Error =========');\n\t\t\tcode = e.response.status;\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn { success, code, token };\n\t},\n\n\tasync getUserInfo() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await GetRequest<UserType>('mypage/');\n\t\t\tthis.setUser(response.data);\n\t\t\tsuccess = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= getUserInfo Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync postUserInfo(userInfo: UserType) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await PostRequest<UserType>('mypage/', {\n\t\t\t\tfavor: userInfo.favor,\n\t\t\t\tsubscribe: userInfo.subscribe,\n\t\t\t\tlingual: userInfo.lingual,\n\t\t\t});\n\t\t\tthis.setUser(response.data);\n\t\t\tsuccess = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= postUserInfo Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n});\n\nexport default UserStore;\n","// eslint-disable-next-line camelcase\nimport jwt_decode, { JwtPayload } from 'jwt-decode';\nimport moment, { now } from 'moment';\n\nconst isValidToken = (token: string) => {\n\tconst expireUnixTime = getExpiredFromJwt(token);\n\tif (moment.unix(expireUnixTime).diff(now()) >= 60 * 60 * 24) return true;\n\treturn false;\n};\n\nconst getExpiredFromJwt = (token: string) => {\n\ttry {\n\t\tif (token === '') return now();\n\t\tconst expireTime = (jwt_decode(token) as JwtPayload).exp;\n\t\tif (!expireTime) return now();\n\t\treturn expireTime;\n\t} catch (e) {\n\t\tconsole.log(e);\n\t\treturn now();\n\t}\n};\n\nexport default isValidToken;\n","import isValidToken from 'lib/token';\nimport { observable } from 'mobx';\n\nconst TokenStore = observable({\n\taccessToken: '' as string,\n\trefreshToken: '' as string,\n\n\tsetAccessToken(accessToken: string) {\n\t\tthis.accessToken = accessToken;\n\t},\n\tsetRefreshToken(refreshToken: string) {\n\t\tthis.refreshToken = refreshToken;\n\t},\n\n\tasync saveAndSetTokens(accessToken: string, refreshToken: string) {\n\t\tlet success = false;\n\n\t\ttry {\n\t\t\tawait window.localStorage.multiSet([\n\t\t\t\t['ACCESS_TOKEN', accessToken],\n\t\t\t\t['REFRESH_TOKEN', refreshToken],\n\t\t\t]);\n\t\t\tthis.setAccessToken(this.accessToken);\n\t\t\tthis.setRefreshToken(this.refreshToken);\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= setAccessToken Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\treturn success;\n\t},\n\n\tasync getAccessToken() {\n\t\tlet success = false;\n\n\t\ttry {\n\t\t\tthis.setAccessToken('');\n\t\t\tconst data = await window.localStorage.getItem('ACCESS_TOKEN');\n\t\t\tif (!data || !isValidToken(data)) return success;\n\t\t\tthis.accessToken = data;\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getAccessToken Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\treturn success;\n\t},\n\n\tasync getRefreshToken() {\n\t\tlet success = false;\n\n\t\ttry {\n\t\t\tthis.setRefreshToken('');\n\t\t\tconst data = await window.localStorage.getItem('REFRESH_TOKEN');\n\t\t\tif (!data || !isValidToken(data)) return success;\n\t\t\tthis.refreshToken = data;\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getRefreshToken Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\treturn success;\n\t},\n\n\tasync clear() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tawait window.localStorage.clear();\n\t\t\tthis.setAccessToken('');\n\t\t\tthis.setRefreshToken('');\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= clear Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n});\n\nexport default TokenStore;\n","import { observable } from 'mobx';\n\nconst ToastStore = observable({\n\tisOpen: false as boolean,\n\ttext: '' as string,\n\n\tsetIsOpen(isOpen: boolean) {\n\t\tthis.isOpen = isOpen;\n\t},\n\tsetText(text: string) {\n\t\tthis.text = text;\n\t},\n});\n\nexport default ToastStore;\n","import { GetRequest, PutRequest } from 'lib/api/requests';\nimport { observable } from 'mobx';\nimport { ExperimentType, StatusType } from 'types/experiment';\n\nconst ExperimentStore = observable({\n\texperimentList: [] as ExperimentType[],\n\texperimentDetail: {} as ExperimentType | undefined,\n\tsetExperimentList(experimentList: ExperimentType[]) {\n\t\tthis.experimentList = experimentList;\n\t},\n\tsetExperimentDetail(experiment: ExperimentType | undefined) {\n\t\tthis.experimentDetail = experiment;\n\t},\n\n\tasync getExperimentList(lingual?: string, status?: StatusType, available?: boolean) {\n\t\tconsole.log(available);\n\t\tlet success = false;\n\t\ttry {\n\t\t\tthis.setExperimentList([]);\n\t\t\tconst response = await GetRequest('experiments/', {\n\t\t\t\tlingual: lingual && lingual.length > 0 ? lingual : undefined,\n\t\t\t\tstatus,\n\t\t\t\tis_full: available ? false : undefined,\n\t\t\t});\n\t\t\tthis.setExperimentList(response.data);\n\t\t\t// console.error('========= getExperimentList Success =========');\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getExperimentList Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync getExperimentDetail(id: number) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tthis.setExperimentDetail(undefined);\n\t\t\tconst response = await GetRequest(`experiments/${id}/`);\n\t\t\tthis.setExperimentDetail(response.data);\n\t\t\t// console.error('========= getExperimentDetail Success =========');\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getExperimentDetail Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync putExperimentDetail(id: number) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await PutRequest(`experiments/${id}`);\n\t\t\t// console.error('========= getExperimentDetail Success =========');\n\t\t\tif (response.data === 200) success = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getExperimentDetail Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n});\n\nexport default ExperimentStore;\n","import { observable } from 'mobx';\n\nconst LoadingStore = observable({\n\tloading: true as boolean,\n\tsetLoading(loading: boolean) {\n\t\tthis.loading = loading;\n\t},\n});\n\nexport default LoadingStore;\n","import UserStore from './UserStore';\nimport TokenStore from './TokenStore';\nimport ToastStore from './ToastStore';\nimport ExperimentStore from './ExperimentStore';\nimport LoadingStore from './LoadingStore';\n\nconst useStore = () => {\n\treturn {\n\t\tUserStore,\n\t\tTokenStore,\n\t\tToastStore,\n\t\tExperimentStore,\n\t\tLoadingStore,\n\t};\n};\n\nexport default useStore;\n","import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { useHistory } from 'react-router';\nimport useStore from 'store/Index';\nimport { useTranslation } from 'react-i18next';\nimport { Typography, Avatar, TextField, Button, FormGroup } from '@mui/material';\nimport styled from 'styled-components';\nimport { RowContainer } from 'lib/constant/Components';\n\nconst LoginContainer = styled(RowContainer)`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\nconst FormContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\twidth: 50%;\n`;\n\nconst Login = observer(() => {\n\tconst { UserStore } = useStore();\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\tconst [email, setEmail] = useState<string>('');\n\tconst [pw, setPw] = useState<string>('');\n\n\tconst onSubmit = () => {\n\t\tUserStore.login(email, pw);\n\t\thistory.push('/');\n\t};\n\n\treturn (\n\t\t<LoginContainer>\n\t\t\t{/* <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n\t\t\t\t<LockOutlinedIcon />\n\t\t\t</Avatar> */}\n\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t{t('login')}\n\t\t\t</Typography>\n\t\t\t<FormContainer>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\trequired\n\t\t\t\t\tid=\"email\"\n\t\t\t\t\tlabel={t('Email Address')}\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tautoFocus\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\tsetEmail(event.target.value)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\trequired\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tlabel={t('Password')}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\tsetPw(event.target.value)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</FormContainer>\n\t\t\t{/* <FormControlLabel\n\t\t\t\t\tcontrol={<Checkbox value=\"remember\" color=\"primary\" />}\n\t\t\t\t\tlabel=\"Remember me\"\n\t\t\t\t/> */}\n\t\t\t<Button variant=\"text\" size=\"medium\" onClick={() => history.push('/signup')}>\n\t\t\t\t계정이 없으신가요?\n\t\t\t</Button>\n\t\t\t<Button type=\"submit\" size=\"medium\" variant=\"contained\" onClick={onSubmit}>\n\t\t\t\t{t('login')}\n\t\t\t</Button>\n\t\t</LoginContainer>\n\t);\n});\n\nexport default Login;\n","import { Button } from '@mui/material';\n\ninterface Props {\n\tname: string;\n\tisSelected: boolean;\n\tonClick: () => void;\n}\n\nconst ExperimentFilterButton = ({ name, isSelected, onClick }: Props) => {\n\treturn (\n\t\t<Button variant={isSelected ? 'contained' : 'outlined'} onClick={onClick}>\n\t\t\t{name}\n\t\t</Button>\n\t);\n};\n\nexport default ExperimentFilterButton;\n","import styled from 'styled-components';\nimport { FormControlLabel, Stack, Checkbox } from '@mui/material';\nimport { lingualFilterList, isFullFilterList, statusFilterList } from 'lib/constant';\nimport { useCallback, useState } from 'react';\nimport useStore from 'store/Index';\nimport { observer } from 'mobx-react';\nimport { StatusType } from 'types/experiment';\nimport { useTranslation } from 'react-i18next';\nimport ExperimentFilterButton from './ExperimentFilterButton';\n\nconst FilterContainer = styled.div`\n\tpadding: 20px 0px;\n`;\nconst ButtonList = styled(Stack)`\n\tmargin: 20px 0px;\n`;\n\nconst ExperimentFilter = observer(() => {\n\tconst { ExperimentStore, LoadingStore } = useStore();\n\tconst { t } = useTranslation();\n\tconst [statusFilter, setStatusFilter] = useState<StatusType | undefined>(undefined);\n\tconst [availableFilter, setavailableFilter] = useState<boolean>(false);\n\tconst [lingualFilter, setLingualFilter] = useState<string[]>([]);\n\n\tconst onClickStatusButton = async (value: StatusType) => {\n\t\tLoadingStore.setLoading(true);\n\t\tsetStatusFilter(statusFilter === value ? undefined : value);\n\t\tlet res = await ExperimentStore.getExperimentList(\n\t\t\tlingualFilter.join(','),\n\t\t\tstatusFilter === value ? undefined : value,\n\t\t\tavailableFilter,\n\t\t);\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\tconst onClickAvailableButton = async (value: boolean) => {\n\t\tLoadingStore.setLoading(true);\n\t\tsetavailableFilter(value);\n\t\tlet res = await ExperimentStore.getExperimentList(\n\t\t\tlingualFilter.join(','),\n\t\t\tstatusFilter,\n\t\t\tvalue,\n\t\t);\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\tconst onClickLingualButton = async (value: string) => {\n\t\tLoadingStore.setLoading(true);\n\t\tsetLingualFilter(\n\t\t\tlingualFilter.includes(value)\n\t\t\t\t? lingualFilter.filter((e) => e !== value)\n\t\t\t\t: lingualFilter.concat(value),\n\t\t);\n\t\tlet res = await ExperimentStore.getExperimentList(\n\t\t\tlingualFilter.includes(value)\n\t\t\t\t? lingualFilter.filter((e) => e !== value).join(',')\n\t\t\t\t: lingualFilter.concat(value).join(','),\n\t\t\tstatusFilter,\n\t\t\tavailableFilter,\n\t\t);\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\treturn (\n\t\t<FilterContainer>\n\t\t\t<ButtonList spacing={2} direction=\"row\">\n\t\t\t\t<div>status Filter</div>\n\t\t\t\t{statusFilterList.map((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ExperimentFilterButton\n\t\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t\t\tisSelected={statusFilter === item.value}\n\t\t\t\t\t\t\tonClick={() => onClickStatusButton(item.value)}\n\t\t\t\t\t\t\tkey={item.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ButtonList>\n\t\t\t<ButtonList spacing={2} direction=\"row\">\n\t\t\t\t<div>lingual Filter</div>\n\t\t\t\t{lingualFilterList.map((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ExperimentFilterButton\n\t\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t\t\tisSelected={lingualFilter.includes(item.value)}\n\t\t\t\t\t\t\tonClick={() => onClickLingualButton(item.value)}\n\t\t\t\t\t\t\tkey={item.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ButtonList>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tchecked={availableFilter === true}\n\t\t\t\t\t\tonClick={() => onClickAvailableButton(!availableFilter)}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel={t('seeOnlyAvailable')}\n\t\t\t/>\n\t\t</FilterContainer>\n\t);\n});\n\nexport default ExperimentFilter;\n","import { ExperimentType } from 'types/experiment';\nimport styled from 'styled-components';\nimport { Content } from 'lib/constant/Components';\nimport { useHistory } from 'react-router';\nimport { useCallback } from 'react';\n\nconst BoxContainer = styled.div`\n\twidth: 100%;\n\theight: 350px;\n\tborder-radius: 10px;\n\tbox-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\t:hover {\n\t\tbackground-color: whitesmoke;\n\t\tcursor: pointer;\n\t}\n`;\n\ninterface Props {\n\titem: ExperimentType;\n}\n\nconst ExperimentBox = ({ item }: Props) => {\n\tconst history = useHistory();\n\n\tconst onClickBox = useCallback(() => {\n\t\thistory.push(`/experiment/${item.id}`);\n\t}, []);\n\n\treturn (\n\t\t<BoxContainer onClick={onClickBox}>\n\t\t\t<Content>[{item.title}]</Content>\n\t\t\t<div>{item.exp_type === 'ON' ? 'Online' : 'Offline'}</div>\n\t\t\t<div>{item.status}</div>\n\t\t\t<div>Languages: {item.lingual} </div>\n\t\t\t<div>{item.is_full ? '모집 완료' : '모집중'}</div>\n\t\t\t<div>{item.reward_price}</div>\n\t\t</BoxContainer>\n\t);\n};\n\nexport default ExperimentBox;\n","import { Grid } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport useStore from 'store/Index';\nimport ExperimentBox from './ExperimentBox';\n\nconst ExperimentList = observer(() => {\n\tconst { ExperimentStore } = useStore();\n\n\treturn (\n\t\t<Grid container rowSpacing={2} columnSpacing={3} alignItems=\"center\">\n\t\t\t{ExperimentStore.experimentList.map((item) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Grid item key={item.title} xs={12} md={6}>\n\t\t\t\t\t\t<ExperimentBox item={item} key={item.title} />\n\t\t\t\t\t</Grid>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Grid>\n\t);\n});\n\nexport default ExperimentList;\n","import { CircularProgress, Divider } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { useEffect } from 'react';\nimport useStore from 'store/Index';\nimport ExperimentFilter from './ExperimentFilter';\nimport ExperimentList from './ExperimentList';\n\nconst ExperimentBody = observer(() => {\n\tconst { ExperimentStore, LoadingStore } = useStore();\n\n\tconst getInit = async () => {\n\t\tLoadingStore.setLoading(true);\n\t\tconst res = await ExperimentStore.getExperimentList();\n\t\tif (res) LoadingStore.setLoading(false);\n\t};\n\n\tuseEffect(() => {\n\t\tgetInit();\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<ExperimentFilter />\n\t\t\t{/* <Divider orientation=\"horizontal\" variant=\"middle\" flexItem /> */}\n\t\t\t{LoadingStore.loading ? <CircularProgress /> : <ExperimentList />}\n\t\t</>\n\t);\n});\n\nexport default ExperimentBody;\n","import styled from 'styled-components';\nimport { Divider } from '@mui/material';\nimport { Content, RowContainer, Title } from 'lib/constant/Components';\nimport { useTranslation } from 'react-i18next';\n\nconst BannerContainer = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\tjustify-content: center;\n`;\n\ninterface Props {\n\ttitle: string;\n\tsubTitle?: string;\n\t// backgroundImg?: string;\n}\n\nconst BannerTemplate = ({ title, subTitle }: Props) => {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<BannerContainer>\n\t\t\t<Title>{t(title)}</Title>\n\t\t\t<Divider orientation=\"horizontal\" variant=\"middle\" flexItem />\n\t\t\t{/* {subTitle && <Content>{subTitle}</Content>} */}\n\t\t</BannerContainer>\n\t);\n};\n\nexport default BannerTemplate;\n","import { Tab, Tabs } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst LeftMenuContainer = styled(Tabs)`\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nconst MenuItem = styled(Tab)`\n\twidth: 200px;\n\tfont-size: 20px;\n\theight: 50px;\n`;\n\ninterface Props {\n\tmenu: { title: string; domain: string }[];\n}\n\nconst LeftMenuTemplate = ({ menu }: Props) => {\n\tconst location = useLocation();\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\n\tconst getMenu = () => {\n\t\tconst secondPath = location.pathname;\n\t\tif (menu.map((e) => e.domain).includes(secondPath)) return `${secondPath}`;\n\t\treturn false;\n\t};\n\n\treturn (\n\t\t<LeftMenuContainer value={getMenu()} orientation=\"vertical\">\n\t\t\t{menu.map((item) => {\n\t\t\t\treturn (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tlabel={t(item.title)}\n\t\t\t\t\t\tvalue={item.domain}\n\t\t\t\t\t\tkey={item.title}\n\t\t\t\t\t\tonClick={() => history.push(`${item.domain}`)}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</LeftMenuContainer>\n\t);\n};\n\nexport default LeftMenuTemplate;\n","import { RowContainer } from 'lib/constant/Components';\nimport { ReactNode } from 'react';\nimport styled from 'styled-components';\nimport BannerTemplate from './BannerTemplate';\nimport LeftMenuTemplate from './LeftMenuTemplate';\n\nconst PageTemplateContainer = styled.div`\n\tflex: 1;\n\twidth: 100vw;\n\tbox-sizing: border-box;\n\tpadding: 10px max(calc((100vw - 1000px) / 2), 5vw);\n`;\n\nconst InnerContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: row;\n`;\n\nconst ChildrenContainer = styled.div`\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\ninterface Props {\n\ttitle?: string;\n\tmenu?: { title: string; domain: string }[];\n\tchildren?: ReactNode;\n}\n\nconst PageTemplate = ({ title, menu, children }: Props) => {\n\treturn (\n\t\t<PageTemplateContainer>\n\t\t\t{title && <BannerTemplate title={title} />}\n\t\t\t<InnerContainer>\n\t\t\t\t{menu && <LeftMenuTemplate menu={menu} />}\n\t\t\t\t<ChildrenContainer>{children && children}</ChildrenContainer>\n\t\t\t</InnerContainer>\n\t\t</PageTemplateContainer>\n\t);\n};\n\nexport default PageTemplate;\n","import BannerTemplate from 'components/template/BannerTemplate';\nimport ExperimentBody from 'components/experiment/ExperimentBody';\nimport PageTemplate from 'components/template/PageTemplate';\nimport { Route, Router } from 'react-router';\n\nexport const ExperimentMenus = [\n\t{\n\t\ttitle: 'Lists',\n\t\tdomain: '/experiment',\n\t},\n\t{\n\t\ttitle: 'My Experiments',\n\t\tdomain: '/experiment/my',\n\t},\n];\n\nconst ExperimentMain = () => {\n\treturn (\n\t\t<PageTemplate title=\"Experiments\" menu={ExperimentMenus}>\n\t\t\t<ExperimentBody />\n\t\t</PageTemplate>\n\t);\n};\n\nexport default ExperimentMain;\n","import styled from 'styled-components';\nimport Button from '@mui/material/Button';\nimport { useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { ButtonGroup, Stack } from '@mui/material';\n\nconst HeaderContainer = styled.div`\n\twidth: 100vw;\n\theight: 100px;\n\tbox-sizing: border-box;\n\tpadding: 10px max(calc((100vw - 1000px) / 2), 5vw);\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tjustify-content: space-between;\n`;\n\nconst SnulingLogo = styled.img`\n\twidth: 200px;\n\theight: auto;\n\topacity: 1;\n`;\n\nconst LoginButton = styled(Button)``;\n\nconst Header = () => {\n\tconst history = useHistory();\n\tconst { i18n, t } = useTranslation();\n\n\tconst onClickChangeLanguage = () => {\n\t\tif (i18n.language === 'ko') i18n.changeLanguage('en');\n\t\telse if (i18n.language === 'en') i18n.changeLanguage('ko');\n\t};\n\n\treturn (\n\t\t<HeaderContainer>\n\t\t\t<SnulingLogo\n\t\t\t\tsrc={`${process.env.PUBLIC_URL}/img/snuling_logo.png`}\n\t\t\t\talt=\"\"\n\t\t\t\tonClick={() => history.push('/')}\n\t\t\t/>\n\t\t\t<Stack spacing={2} direction=\"row\">\n\t\t\t\t<Button variant=\"text\" onClick={onClickChangeLanguage}>\n\t\t\t\t\t{i18n.language === 'ko' ? 'English' : '한국어'}\n\t\t\t\t</Button>\n\t\t\t\t<LoginButton variant=\"contained\" onClick={() => history.push('/login')}>\n\t\t\t\t\t{t('login')}\n\t\t\t\t</LoginButton>\n\t\t\t\t<LoginButton variant=\"text\" onClick={() => history.push('/signup')}>\n\t\t\t\t\t{t('Sign Up')}\n\t\t\t\t</LoginButton>\n\t\t\t</Stack>\n\t\t</HeaderContainer>\n\t);\n};\n\nexport default Header;\n","import PageTemplate from 'components/template/PageTemplate';\n\nconst People = () => {\n\treturn <PageTemplate title=\"People\" />;\n};\n\nexport default People;\n","import BannerTemplate from 'components/template/BannerTemplate';\nimport PageTemplate from 'components/template/PageTemplate';\n\nconst EventsNews = () => {\n\treturn <PageTemplate title=\"Events & News\" />;\n};\n\nexport default EventsNews;\n","import BannerTemplate from 'components/template/BannerTemplate';\nimport PageTemplate from 'components/template/PageTemplate';\n\nconst ResearchProjects = () => {\n\treturn <PageTemplate title=\"Research & Projects\" />;\n};\n\nexport default ResearchProjects;\n","import { SNUGRAY } from 'lib/constant';\nimport { RowContainer, SubContent } from 'lib/constant/Components';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\n\nconst FooterContainer = styled(RowContainer)`\n\tbackground-color: ${SNUGRAY};\n\theight: 200px;\n\tpadding: 0px 10vw;\n\tdisplay: flex;\n\tflex-direction: row;\n`;\n\nconst ColumnContainer = styled.div<{ type: 'left' | 'right' }>`\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: ${(props) => props.type === 'right' && 'flex-end'};\n`;\n\nconst SnulingLogo = styled.img`\n\twidth: 200px;\n\theight: auto;\n\topacity: 1;\n\tmargin-bottom: 20px;\n\t:hover {\n\t\tcursor: pointer;\n\t}\n`;\n\nconst FooterLabel = styled(SubContent)`\n\tcolor: white;\n\ttext-align: left;\n\tline-height: 25px;\n\ttext-decoration: none;\n`;\n\nconst siteList: { name: string; url: string }[] = [\n\t{ name: '언어학과 홈페이지', url: 'http://hosting01.snu.ac.kr/~linguist/' },\n\t{ name: '서울대학교 인문대학', url: 'http://humanities.snu.ac.kr' },\n];\nconst Footer = () => {\n\tconst { t } = useTranslation();\n\treturn (\n\t\t<FooterContainer>\n\t\t\t<ColumnContainer type=\"left\">\n\t\t\t\t<SnulingLogo\n\t\t\t\t\tsrc={`${process.env.PUBLIC_URL}/img/snuling_logo.png`}\n\t\t\t\t\talt=\"snuling_logo\"\n\t\t\t\t/>\n\t\t\t\t<FooterLabel>{t('address')}</FooterLabel>\n\t\t\t</ColumnContainer>\n\t\t\t<ColumnContainer type=\"right\">\n\t\t\t\t<FooterLabel>관련 사이트</FooterLabel>\n\t\t\t\t{siteList.map((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<a href={item.url} key={item.name} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t\t<FooterLabel>{item.name}</FooterLabel>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ColumnContainer>\n\t\t</FooterContainer>\n\t);\n};\n\nexport default Footer;\n","import Button from '@mui/material/Button';\nimport PageTemplate from 'components/template/PageTemplate';\nimport { RowContainer } from 'lib/constant/Components';\nimport { observer } from 'mobx-react';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { useParams } from 'react-router-dom';\nimport useStore from 'store/Index';\n\nconst ExperimentDetail = observer(() => {\n\tconst { id } = useParams<{ id: string }>();\n\tconst history = useHistory();\n\tconst { ExperimentStore } = useStore();\n\n\tuseEffect(() => {\n\t\tExperimentStore.getExperimentDetail(parseInt(id, 10));\n\t}, []);\n\n\tif (!ExperimentStore.experimentDetail) return null;\n\n\treturn (\n\t\t<PageTemplate title=\"Experiments\">\n\t\t\t<div>{ExperimentStore.experimentDetail.title}</div>\n\t\t\t<Button\n\t\t\t\tdisabled={ExperimentStore.experimentDetail.is_full}\n\t\t\t\tonClick={() => console.log('참여')}\n\t\t\t>\n\t\t\t\t실험 참여하기\n\t\t\t</Button>\n\t\t\t<Button onClick={() => history.goBack()}>뒤로가기</Button>\n\t\t</PageTemplate>\n\t);\n});\n\nexport default ExperimentDetail;\n","import styled from 'styled-components';\nimport { Tab, Tabs } from '@mui/material';\nimport { useHistory, useLocation } from 'react-router';\nimport { SNUBLUE, SNUGRAY } from 'lib/constant';\nimport { useTranslation } from 'react-i18next';\n\nconst TabContainer = styled(Tabs)`\n\twidth: 100vw;\n\tbox-sizing: border-box;\n\tpadding: 10px max(calc((100vw - 1000px) / 2), 5vw);\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tbackground-color: #cdcdcd;\n`;\n\nconst MenuItem = styled(Tab)`\n\tfont-size: 20px;\n`;\n\nconst tabs: { title: string; url: string }[] = [\n\t{ title: 'People', url: '/people' },\n\t{ title: 'Events & News', url: '/event' },\n\t{ title: 'Research & Projects', url: '/research' },\n\t{ title: 'Experiments', url: '/experiment' },\n\t// { title: 'Contact Us', url: '/contact' },\n];\n\nconst TabNavigation = () => {\n\tconst location = useLocation();\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\n\tconst getLocation = () => {\n\t\tconst firstPath = location.pathname.split('/')[1];\n\t\tif (['people', 'event', 'research', 'experiment'].includes(firstPath))\n\t\t\treturn `/${firstPath}`;\n\t\treturn false;\n\t};\n\n\treturn (\n\t\t<TabContainer value={getLocation()} centered variant=\"fullWidth\">\n\t\t\t{tabs.map((item) => {\n\t\t\t\treturn (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tlabel={t(item.title)}\n\t\t\t\t\t\tvalue={item.url}\n\t\t\t\t\t\tkey={item.title}\n\t\t\t\t\t\tonClick={() => history.push(`${item.url}`)}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</TabContainer>\n\t);\n};\n\nexport default TabNavigation;\n","import BannerTemplate from 'components/template/BannerTemplate';\nimport ExperimentBody from 'components/experiment/ExperimentBody';\nimport PageTemplate from 'components/template/PageTemplate';\nimport { Route, Router } from 'react-router';\n\nexport const ExperimentMenus = [\n\t{\n\t\ttitle: 'Lists',\n\t\tdomain: '/experiment',\n\t},\n\t{\n\t\ttitle: 'My Experiments',\n\t\tdomain: '/experiment/my',\n\t},\n];\n\nconst ExperimentMy = () => {\n\treturn <PageTemplate title=\"Experiments\" menu={ExperimentMenus} />;\n};\n\nexport default ExperimentMy;\n","import React, { useCallback, useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { useHistory } from 'react-router';\nimport useStore from 'store/Index';\nimport { useTranslation } from 'react-i18next';\nimport { Typography, Avatar, TextField, Button, FormGroup } from '@mui/material';\nimport styled from 'styled-components';\nimport { RowContainer } from 'lib/constant/Components';\n\nconst SignUpContainer = styled(RowContainer)`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`;\n\nconst FormContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\twidth: 50%;\n`;\n\nconst SignUp = observer(() => {\n\tconst { UserStore } = useStore();\n\tconst history = useHistory();\n\tconst { t } = useTranslation();\n\tconst [email, setEmail] = useState<string>('');\n\tconst [pw, setPw] = useState<string>('');\n\n\tconst onSubmit = () => {\n\t\tUserStore.signUp(email, pw);\n\t\thistory.push('/');\n\t};\n\n\treturn (\n\t\t<SignUpContainer>\n\t\t\t{/* <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n\t\t\t\t<LockOutlinedIcon />\n\t\t\t</Avatar> */}\n\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t{t('Sign Up')}\n\t\t\t</Typography>\n\t\t\t<FormContainer>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\trequired\n\t\t\t\t\tid=\"email\"\n\t\t\t\t\tlabel={t('Email Address')}\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tautoFocus\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\tsetEmail(event.target.value)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\trequired\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tlabel={t('Password')}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\tsetPw(event.target.value)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\trequired\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tlabel={t('Password')}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\tsetPw(event.target.value)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</FormContainer>\n\t\t\t{/* <FormControlLabel\n\t\t\t\t\tcontrol={<Checkbox value=\"remember\" color=\"primary\" />}\n\t\t\t\t\tlabel=\"Remember me\"\n\t\t\t\t/> */}\n\t\t\t<Button type=\"submit\" size=\"medium\" variant=\"contained\" onClick={onSubmit}>\n\t\t\t\t{t('Sign Up')}\n\t\t\t</Button>\n\t\t</SignUpContainer>\n\t);\n});\n\nexport default SignUp;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router';\nimport './App.css';\nimport Home from 'pages/Home';\nimport Login from 'pages/Login';\nimport ExperimentMain from 'pages/Experiment/ExperimentMain';\nimport Header from 'components/Header';\nimport { observer, useObserver } from 'mobx-react';\nimport { Box, Snackbar, ThemeProvider } from '@mui/material';\nimport { createTheme } from '@mui/material/styles';\nimport People from 'pages/People';\nimport EventsNews from 'pages/EventsNews';\nimport ResearchProjects from 'pages/ResearchProjects';\nimport Footer from 'components/Footer';\nimport useStore from 'store/Index';\nimport ExperimentDetail from 'pages/Experiment/ExperimentDetail';\nimport TabNavigation from 'components/TabNavigation';\nimport { BrowserRouter } from 'react-router-dom';\nimport ExperimentMy from 'pages/Experiment/ExperimentMy';\nimport SignUp from 'pages/SignUp';\n\nconst theme = createTheme({\n\ttypography: {\n\t\tfontFamily: 'YoonGothic',\n\t},\n});\n\nconst App = observer(() => {\n\tconst { ToastStore } = useStore();\n\n\treturn useObserver(() => (\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<Header />\n\t\t\t\t<TabNavigation />\n\t\t\t\t<Box sx={{ flex: 1, minHeight: '100vh' }}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t\t\t\t<Route path=\"/experiment\" exact component={ExperimentMain} />\n\t\t\t\t\t\t<Route path=\"/experiment/my\" exact component={ExperimentMy} />\n\t\t\t\t\t\t<Route path=\"/experiment/:id\" exact component={ExperimentDetail} />\n\t\t\t\t\t\t<Route path=\"/people\" exact component={People} />\n\t\t\t\t\t\t<Route path=\"/event\" exact component={EventsNews} />\n\t\t\t\t\t\t<Route path=\"/research\" exact component={ResearchProjects} />\n\t\t\t\t\t\t<Route path=\"/login\" exact component={Login} />\n\t\t\t\t\t\t<Route path=\"/signup\" exact component={SignUp} />\n\t\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Box>\n\t\t\t\t<Footer />\n\t\t\t\t{/* <Snackbar\n\t\t\t\tanchorOrigin={{ vertical, horizontal }}\n\t\t\t\tautoHideDuration={6000}\n\t\t\t\topen={ToastStore.isOpen}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tmessage={ToastStore.text}\n\t\t\t\tkey={ToastStore.text}\n\t\t\t\tTransitionComponent=\"SlideTransition\"\n\t\t\t/> */}\n\t\t\t</ThemeProvider>\n\t\t</BrowserRouter>\n\t));\n});\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","// i18n.js\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport langEn from './lang.en.json';\nimport langKo from './lang.ko.json';\n\nconst resources = {\n\ten: {\n\t\ttranslation: langEn,\n\t},\n\tko: {\n\t\ttranslation: langKo,\n\t},\n};\n\ni18n.use(initReactI18next).init({\n\tresources,\n\t// 초기 설정 언어\n\tlng: 'ko',\n\tfallbackLng: {\n\t\ten: ['en'],\n\t\tdefault: ['ko'],\n\t},\n\tdebug: true,\n\tdefaultNS: 'translation',\n\tns: 'translation',\n\tkeySeparator: false,\n\tinterpolation: {\n\t\tescapeValue: false,\n\t},\n\treact: {\n\t\tuseSuspense: false,\n\t},\n});\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './lang/i18n'; // 다국어 지원 파일\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}