{"version":3,"sources":["lib/constant/Components.tsx","pages/Home.tsx","components/template/LoginTemplate.tsx","lib/constant/index.ts","lib/api/TokenHeader.ts","lib/api/requests/index.ts","store/UserStore.tsx","lib/token/index.ts","store/TokenStore.tsx","store/ToastStore.tsx","store/ExperimentStore.tsx","store/Index.tsx","pages/Login.tsx","components/template/BannerTemplate.tsx","components/template/experiment/ExperimentBody.tsx","pages/Experiment/ExperimentMain.tsx","components/Header.tsx","pages/People.tsx","pages/EventsNews.tsx","pages/ResearchProjects.tsx","pages/Contact.tsx","components/Footer.tsx","pages/Experiment/ExperimentDetail.tsx","components/TabNavigation.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RowContainer","styled","div","props","backgroundImg","Title","SubContent","Home","FormBox","Box","LoginTemplate","Button","type","onSubmit","useHistory","useState","id","setId","pw","setPw","onPressSubmit","useCallback","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","Typography","component","variant","TextField","margin","required","fullWidth","label","name","autoComplete","autoFocus","size","API_BASE_URL","TokenHeader","accessToken","this","params","headers","Authorization","undefined","GetRequest","url","axios","get","getHeader","PostRequest","body","post","UserStore","observable","userEmail","user","setUserEmail","email","setUser","signUp","success","code","token","response","data","Token","status","console","error","login","getUserInfo","postUserInfo","userInfo","favor","subscribe","lingual","getExpiredFromJwt","now","expireTime","jwt_decode","exp","e","log","isValidToken","expireUnixTime","moment","unix","diff","TokenStore","refreshToken","setAccessToken","setRefreshToken","saveAndSetTokens","window","localStorage","multiSet","getAccessToken","getItem","getRefreshToken","clear","ToastStore","isOpen","text","setIsOpen","setText","ExperimentStore","experimentList","experimentDetail","setExperimentList","setExperimentDetail","experiment","getExperimentList","getExperimentDetail","putExperimentDetail","PutRequest","put","useStore","Login","observer","history","a","push","BannerContainer","BannerTemplate","title","subTitle","ExperimentBody","useEffect","Table","TableHead","TableBody","map","item","TableRow","onClick","TableCell","is_full","ExperimentMain","HeaderContainer","SnulingLogo","img","LoginButton","Header","src","process","alt","People","EventsNews","ResearchProjects","Contact","FooterContainer","ColumnContainer","FooterLabel","siteList","Footer","href","target","rel","ExperimentDetail","useParams","parseInt","disabled","goBack","TabContainer","Tabs","MenuItem","Tab","tabs","TabNavigation","location","useLocation","value","firstPath","pathname","split","includes","getLocation","centered","theme","createTheme","typography","fontFamily","App","useObserver","ThemeProvider","flex","minHeight","exact","path","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3bae1a3.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const RowContainer = styled.div<{ backgroundImg?: string }>`\n\twidth: 100vw;\n\tdisplay: flex;\n\tbox-sizing: border-box;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 10px 0;\n\tbackground-image: url(${(props) => props.backgroundImg});\n`;\n\nexport const Title = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 500;\n\tfont-size: 4rem;\n\tpadding: 2rem 0px;\n\tborder-bottom: 3px solid black;\n`;\n\nexport const SubTitle = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 400;\n\tfont-size: 3rem;\n`;\n\nexport const Content = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 400;\n\tfont-size: 2rem;\n`;\n\nexport const SubContent = styled.div`\n\tfont-family: 'YoonGothic';\n\tfont-weight: 300;\n\tfont-size: 1rem;\n`;\n","import { useHistory } from 'react-router';\nimport { RowContainer } from 'lib/constant/Components';\n\nconst Home = () => {\n\t// const history = useHistory();\n\n\treturn (\n\t\t<RowContainer>\n\t\t\t<div>Home</div>;\n\t\t</RowContainer>\n\t);\n};\n\nexport default Home;\n","import { Avatar, Button, TextField, Box, Typography } from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { useHistory } from 'react-router';\nimport { useCallback, useState } from 'react';\nimport styled from 'styled-components';\n\nconst FormBox = styled(Box)`\n\tjustify-content: space-around;\n`;\n\nconst SubmitButton = styled(Button)`\n\tdisplay: in-line;\n\twidth: 100px;\n\theight: 30px;\n`;\n\ninterface Props {\n\ttype: 'Login' | 'Sign In';\n\tonSubmit: (email: string, pw: string) => void;\n}\n\nconst LoginTemplate = ({ type, onSubmit }: Props) => {\n\tconst history = useHistory();\n\tconst [id, setId] = useState<string>('');\n\tconst [pw, setPw] = useState<string>('');\n\n\tconst onPressSubmit = useCallback(() => {\n\t\tonSubmit(id, pw);\n\t\tsetId('');\n\t\tsetPw('');\n\t}, []);\n\n\treturn (\n\t\t<Box\n\t\t\tsx={{\n\t\t\t\tmarginTop: 8,\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tflexDirection: 'column',\n\t\t\t\talignItems: 'center',\n\t\t\t}}\n\t\t>\n\t\t\t<Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n\t\t\t\t<LockOutlinedIcon />\n\t\t\t</Avatar>\n\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t{type}\n\t\t\t</Typography>\n\t\t\t<FormBox component=\"form\" onSubmit={onPressSubmit}>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\trequired\n\t\t\t\t\tfullWidth\n\t\t\t\t\tid=\"email\"\n\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\tautoFocus\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\trequired\n\t\t\t\t\tfullWidth\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t/>\n\t\t\t\t{/* <FormControlLabel\n\t\t\t\t\tcontrol={<Checkbox value=\"remember\" color=\"primary\" />}\n\t\t\t\t\tlabel=\"Remember me\"\n\t\t\t\t/> */}\n\t\t\t\t<Button variant=\"text\" fullWidth size=\"medium\">\n\t\t\t\t\t계정이 없으신가요?\n\t\t\t\t</Button>\n\t\t\t\t<Button type=\"submit\" fullWidth size=\"medium\" variant=\"contained\">\n\t\t\t\t\t{type}\n\t\t\t\t</Button>\n\t\t\t</FormBox>\n\t\t</Box>\n\t);\n};\n\nexport default LoginTemplate;\n","export const API_BASE_URL = 'https://jinh0park.pythonanywhere.com/api/';\n\nexport const SNUBLUE = '#0f0f70';\nexport const SNUGRAY = '#666666';\nexport const SNUSILVER = '#D2D2D2';\n","class TokenHeader {\n\tstatic accessToken = '';\n\n\tstatic setAccessToken(accessToken: string) {\n\t\tthis.accessToken = accessToken;\n\t}\n\n\tstatic getHeader(params?: object) {\n\t\treturn {\n\t\t\theaders: {\n\t\t\t\tAuthorization: this.accessToken === '' ? undefined : `Bearer ${this.accessToken}`,\n\t\t\t},\n\t\t\tparams,\n\t\t};\n\t}\n}\n\nexport default TokenHeader;\n","import axios from 'axios';\nimport { API_BASE_URL } from '../../constant';\nimport TokenHeader from '../TokenHeader';\n\nexport const GetRequest = <T = any>(url: string, params?: object) =>\n\taxios.get<T>(`${API_BASE_URL}${url}`, TokenHeader.getHeader(params));\nexport const PostRequest = <T = any>(url: string, body?: object) =>\n\taxios.post<T>(`${API_BASE_URL}${url}`, body, TokenHeader.getHeader());\nexport const PutRequest = <T = any>(url: string, body?: object, params?: object) =>\n\taxios.put<T>(`${API_BASE_URL}${url}`, body, TokenHeader.getHeader(params));\nexport const DeleteRequest = <T = any>(url: string, params?: object) =>\n\taxios.delete<T>(`${API_BASE_URL}${url}`, TokenHeader.getHeader(params));\n","import { GetRequest, PostRequest } from 'lib/api/requests';\nimport { observable } from 'mobx';\nimport { TokenType } from 'types/token';\nimport { UserType } from 'types/user';\n\nconst UserStore = observable({\n\tuserEmail: '' as string | null,\n\tuser: null as UserType | null,\n\tsetUserEmail(email: string | null) {\n\t\tthis.userEmail = email;\n\t},\n\tsetUser(user: UserType | null) {\n\t\tthis.user = user;\n\t},\n\n\tasync signUp(email: string, pw: string) {\n\t\tlet success = false;\n\t\tlet code = 200;\n\t\tlet token = '';\n\n\t\ttry {\n\t\t\tconst response = await PostRequest<TokenType>('signup/', {\n\t\t\t\temail,\n\t\t\t\tpw,\n\t\t\t});\n\t\t\ttoken = response.data.Token;\n\t\t\tcode = response.status;\n\t\t\tthis.setUserEmail(email);\n\t\t\tsuccess = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= SignUp Error =========');\n\t\t\tcode = e.response.status;\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn { success, code, token };\n\t},\n\n\tasync login(email: string, pw: string) {\n\t\tlet success = false;\n\t\tlet code = 200;\n\t\tlet token = '';\n\n\t\ttry {\n\t\t\tconst response = await PostRequest<TokenType>('login/', {\n\t\t\t\temail,\n\t\t\t\tpw,\n\t\t\t});\n\t\t\tthis.setUserEmail(email);\n\t\t\ttoken = response.data.Token;\n\t\t\tcode = response.status;\n\t\t\tsuccess = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= login Error =========');\n\t\t\tcode = e.response.status;\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn { success, code, token };\n\t},\n\n\tasync getUserInfo() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await GetRequest<UserType>('mypage/');\n\t\t\tthis.setUser(response.data);\n\t\t\tsuccess = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= getUserInfo Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync postUserInfo(userInfo: UserType) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await PostRequest<UserType>('mypage/', {\n\t\t\t\tfavor: userInfo.favor,\n\t\t\t\tsubscribe: userInfo.subscribe,\n\t\t\t\tlingual: userInfo.lingual,\n\t\t\t});\n\t\t\tthis.setUser(response.data);\n\t\t\tsuccess = true;\n\t\t} catch (e: any) {\n\t\t\tconsole.error('========= postUserInfo Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n});\n\nexport default UserStore;\n","// eslint-disable-next-line camelcase\nimport jwt_decode, { JwtPayload } from 'jwt-decode';\nimport moment, { now } from 'moment';\n\nconst isValidToken = (token: string) => {\n\tconst expireUnixTime = getExpiredFromJwt(token);\n\tif (moment.unix(expireUnixTime).diff(now()) >= 60 * 60 * 24) return true;\n\treturn false;\n};\n\nconst getExpiredFromJwt = (token: string) => {\n\ttry {\n\t\tif (token === '') return now();\n\t\tconst expireTime = (jwt_decode(token) as JwtPayload).exp;\n\t\tif (!expireTime) return now();\n\t\treturn expireTime;\n\t} catch (e) {\n\t\tconsole.log(e);\n\t\treturn now();\n\t}\n};\n\nexport default isValidToken;\n","import isValidToken from 'lib/token';\nimport { observable } from 'mobx';\n\nconst TokenStore = observable({\n\taccessToken: '' as string,\n\trefreshToken: '' as string,\n\n\tsetAccessToken(accessToken: string) {\n\t\tthis.accessToken = accessToken;\n\t},\n\tsetRefreshToken(refreshToken: string) {\n\t\tthis.refreshToken = refreshToken;\n\t},\n\n\tasync saveAndSetTokens(accessToken: string, refreshToken: string) {\n\t\tlet success = false;\n\n\t\ttry {\n\t\t\tawait window.localStorage.multiSet([\n\t\t\t\t['ACCESS_TOKEN', accessToken],\n\t\t\t\t['REFRESH_TOKEN', refreshToken],\n\t\t\t]);\n\t\t\tthis.setAccessToken(this.accessToken);\n\t\t\tthis.setRefreshToken(this.refreshToken);\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= setAccessToken Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\treturn success;\n\t},\n\n\tasync getAccessToken() {\n\t\tlet success = false;\n\n\t\ttry {\n\t\t\tthis.setAccessToken('');\n\t\t\tconst data = await window.localStorage.getItem('ACCESS_TOKEN');\n\t\t\tif (!data || !isValidToken(data)) return success;\n\t\t\tthis.accessToken = data;\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getAccessToken Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\treturn success;\n\t},\n\n\tasync getRefreshToken() {\n\t\tlet success = false;\n\n\t\ttry {\n\t\t\tthis.setRefreshToken('');\n\t\t\tconst data = await window.localStorage.getItem('REFRESH_TOKEN');\n\t\t\tif (!data || !isValidToken(data)) return success;\n\t\t\tthis.refreshToken = data;\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getRefreshToken Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\treturn success;\n\t},\n\n\tasync clear() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tawait window.localStorage.clear();\n\t\t\tthis.setAccessToken('');\n\t\t\tthis.setRefreshToken('');\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= clear Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n});\n\nexport default TokenStore;\n","import { observable } from 'mobx';\n\nconst ToastStore = observable({\n\tisOpen: false as boolean,\n\ttext: '' as string,\n\n\tsetIsOpen(isOpen: boolean) {\n\t\tthis.isOpen = isOpen;\n\t},\n\tsetText(text: string) {\n\t\tthis.text = text;\n\t},\n});\n\nexport default ToastStore;\n","import { GetRequest, PutRequest } from 'lib/api/requests';\nimport { observable } from 'mobx';\nimport { ExperimentType } from 'types/experiment';\n\nconst ExperimentStore = observable({\n\texperimentList: [] as ExperimentType[],\n\texperimentDetail: {} as ExperimentType | undefined,\n\tsetExperimentList(experimentList: ExperimentType[]) {\n\t\tthis.experimentList = experimentList;\n\t},\n\tsetExperimentDetail(experiment: ExperimentType | undefined) {\n\t\tthis.experimentDetail = experiment;\n\t},\n\n\tasync getExperimentList() {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tthis.setExperimentList([]);\n\t\t\tconst response = await GetRequest('experiments/');\n\t\t\tthis.setExperimentList(response.data);\n\t\t\t// console.error('========= getExperimentList Success =========');\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getExperimentList Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync getExperimentDetail(id: number) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tthis.setExperimentDetail(undefined);\n\t\t\tconst response = await GetRequest(`experiments/${id}/`);\n\t\t\tthis.setExperimentDetail(response.data);\n\t\t\t// console.error('========= getExperimentDetail Success =========');\n\t\t\tsuccess = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getExperimentDetail Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n\n\tasync putExperimentDetail(id: number) {\n\t\tlet success = false;\n\t\ttry {\n\t\t\tconst response = await PutRequest(`experiments/${id}`);\n\t\t\t// console.error('========= getExperimentDetail Success =========');\n\t\t\tif (response.data === 200) success = true;\n\t\t} catch (e) {\n\t\t\tconsole.error('========= getExperimentDetail Error =========');\n\t\t\tconsole.error(e);\n\t\t}\n\t\treturn success;\n\t},\n});\n\nexport default ExperimentStore;\n","import UserStore from './UserStore';\nimport TokenStore from './TokenStore';\nimport ToastStore from './ToastStore';\nimport ExperimentStore from './ExperimentStore';\n\nconst useStore = () => {\n\treturn {\n\t\tUserStore,\n\t\tTokenStore,\n\t\tToastStore,\n\t\tExperimentStore,\n\t};\n};\n\nexport default useStore;\n","import React, { useCallback } from 'react';\nimport { observer } from 'mobx-react';\nimport { useHistory } from 'react-router';\nimport LoginTemplate from 'components/template/LoginTemplate';\nimport useStore from 'store/Index';\n\nconst Login = observer(() => {\n\tconst { UserStore } = useStore();\n\tconst history = useHistory();\n\n\tconst onSubmit = useCallback(async (email: string, pw: string) => {\n\t\tconst response = await UserStore.login(email, pw);\n\t\thistory.push('/');\n\t}, []);\n\n\treturn <LoginTemplate type=\"Login\" onSubmit={onSubmit} />;\n});\n\nexport default Login;\n","import { Content, RowContainer, Title } from 'lib/constant/Components';\nimport styled from 'styled-components';\n\ninterface Props {\n\ttitle: string;\n\tsubTitle?: string;\n\t// backgroundImg?: string;\n}\n\nconst BannerContainer = styled(RowContainer)`\n\ttext-align: center;\n\tpadding: 20px 0px;\n`;\n\nconst BannerTemplate = ({ title, subTitle }: Props) => {\n\treturn (\n\t\t<RowContainer>\n\t\t\t<BannerContainer>\n\t\t\t\t<Title>{title}</Title>\n\t\t\t\t{/* <Divider orientation=\"horizontal\" /> */}\n\t\t\t\t{/* {subTitle && <Content>{subTitle}</Content>} */}\n\t\t\t</BannerContainer>\n\t\t</RowContainer>\n\t);\n};\n\nexport default BannerTemplate;\n","import { Table, TableHead, TableBody, TableRow, TableCell } from '@mui/material';\nimport { RowContainer } from 'lib/constant/Components';\nimport { observer } from 'mobx-react';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport useStore from 'store/Index';\n\nconst ExperimentBody = observer(() => {\n\tconst history = useHistory();\n\tconst { ExperimentStore } = useStore();\n\n\tuseEffect(() => {\n\t\tExperimentStore.getExperimentList();\n\t}, []);\n\n\treturn (\n\t\t<RowContainer>\n\t\t\t<Table>\n\t\t\t\t<TableHead />\n\t\t\t\t<TableBody>\n\t\t\t\t\t{ExperimentStore.experimentList.map((item) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\tonClick={() => history.push(`/experiment/${item.id}`)}\n\t\t\t\t\t\t\t\tkey={item.title}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<TableCell>{item.title}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{item.status}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{item.is_full}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{item.lingual}</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</RowContainer>\n\t);\n});\n\nexport default ExperimentBody;\n","import BannerTemplate from 'components/template/BannerTemplate';\nimport ExperimentBody from 'components/template/experiment/ExperimentBody';\n\nconst ExperimentMain = () => {\n\treturn (\n\t\t<>\n\t\t\t<BannerTemplate title=\"실험 참여\" subTitle=\"언어학과 실험에 참여해주세요\" />\n\t\t\t<ExperimentBody />\n\t\t</>\n\t);\n};\n\nexport default ExperimentMain;\n","import styled from 'styled-components';\nimport Button from '@mui/material/Button';\nimport { useHistory } from 'react-router-dom';\n\nconst HeaderContainer = styled.div`\n\twidth: 100vw;\n\theight: 100px;\n\tmargin: 0px;\n\tbox-sizing: border-box;\n\tpadding: 0px 10vw;\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tjustify-content: space-between;\n`;\n\nconst SnulingLogo = styled.img`\n\twidth: 200px;\n\theight: auto;\n\topacity: 1;\n`;\n\nconst LoginButton = styled(Button)`\n\twidth: 50px;\n`;\n\nconst Header = () => {\n\tconst history = useHistory();\n\treturn (\n\t\t<HeaderContainer>\n\t\t\t<SnulingLogo\n\t\t\t\tsrc={`${process.env.PUBLIC_URL}/img/snuling_logo.png`}\n\t\t\t\talt=\"\"\n\t\t\t\tonClick={() => history.push('/')}\n\t\t\t/>\n\t\t\t<LoginButton variant=\"text\" onClick={() => history.push('/login')}>\n\t\t\t\tLogin\n\t\t\t</LoginButton>\n\t\t</HeaderContainer>\n\t);\n};\n\nexport default Header;\n","import BannerTemplate from 'components/template/BannerTemplate';\n\nconst People = () => {\n\treturn <BannerTemplate title=\"People\" />;\n};\n\nexport default People;\n","import BannerTemplate from 'components/template/BannerTemplate';\n\nconst EventsNews = () => {\n\treturn <BannerTemplate title=\"Events & News\" />;\n};\n\nexport default EventsNews;\n","import BannerTemplate from 'components/template/BannerTemplate';\n\nconst ResearchProjects = () => {\n\treturn <BannerTemplate title=\"Research & News\" />;\n};\n\nexport default ResearchProjects;\n","import BannerTemplate from 'components/template/BannerTemplate';\n\nconst Contact = () => {\n\treturn <BannerTemplate title=\"Contact Us\" />;\n};\n\nexport default Contact;\n","import { SNUGRAY } from 'lib/constant';\nimport { RowContainer, SubContent } from 'lib/constant/Components';\nimport styled from 'styled-components';\n\nconst FooterContainer = styled(RowContainer)`\n\tbackground-color: ${SNUGRAY};\n\theight: 200px;\n\tpadding: 0px 10vw;\n\tdisplay: flex;\n\tflex-direction: row;\n`;\n\nconst ColumnContainer = styled.div<{ type: 'left' | 'right' }>`\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: ${(props) => props.type === 'right' && 'flex-end'};\n`;\n\nconst SnulingLogo = styled.img`\n\twidth: 200px;\n\theight: auto;\n\topacity: 1;\n\tmargin-bottom: 20px;\n`;\n\nconst FooterLabel = styled(SubContent)`\n\tcolor: white;\n\ttext-align: left;\n\tline-height: 25px;\n\ttext-decoration: none;\n`;\n\nconst siteList: { name: string; url: string }[] = [\n\t{ name: '언어학과 홈페이지', url: 'http://hosting01.snu.ac.kr/~linguist/' },\n\t{ name: '서울대학교 인문대학', url: 'http://humanities.snu.ac.kr' },\n];\nconst Footer = () => {\n\treturn (\n\t\t<FooterContainer>\n\t\t\t<ColumnContainer type=\"left\">\n\t\t\t\t<SnulingLogo src={`${process.env.PUBLIC_URL}/img/snuling_logo.png`} alt=\"\" />\n\t\t\t\t{/* <FooterLabel>\n\t\t\t\t\t\t서울대학교 언어학과, 서울특별시 관악구 관악로 1, 2동 108호 (151-745)\n\t\t\t\t\t</FooterLabel>\n\t\t\t\t\t<FooterLabel>\n\t\t\t\t\t\tContact: linguist@snu.ac.kr 전화:(02)880-6164, 팩스:(02)882-2451.\n\t\t\t\t\t</FooterLabel> */}\n\t\t\t\t<FooterLabel>\n\t\t\t\t\tDepartment of Linguistics, Seoul National University, Gwanak_1 Gwanak-ro, Seoul\n\t\t\t\t\t151-745, Korea {`\\n`} Tel:+82-2-880-6164, Fax:+82-2-882-2451.\n\t\t\t\t</FooterLabel>\n\t\t\t</ColumnContainer>\n\t\t\t<ColumnContainer type=\"right\">\n\t\t\t\t<FooterLabel>관련 사이트</FooterLabel>\n\t\t\t\t{siteList.map((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<a href={item.url} key={item.name} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t\t<FooterLabel>{item.name}</FooterLabel>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ColumnContainer>\n\t\t</FooterContainer>\n\t);\n};\n\nexport default Footer;\n","import Button from '@mui/material/Button';\nimport { RowContainer } from 'lib/constant/Components';\nimport { observer } from 'mobx-react';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { useParams } from 'react-router-dom';\nimport useStore from 'store/Index';\n\nconst ExperimentDetail = observer(() => {\n\tconst { id } = useParams<{ id: string }>();\n\tconst history = useHistory();\n\tconst { ExperimentStore } = useStore();\n\n\tuseEffect(() => {\n\t\tExperimentStore.getExperimentDetail(parseInt(id, 10));\n\t}, []);\n\n\tif (!ExperimentStore.experimentDetail) return null;\n\n\treturn (\n\t\t<RowContainer>\n\t\t\t<div>{ExperimentStore.experimentDetail.title}</div>\n\t\t\t<Button\n\t\t\t\tdisabled={ExperimentStore.experimentDetail.is_full}\n\t\t\t\tonClick={() => console.log('참여')}\n\t\t\t>\n\t\t\t\t실험 참여하기\n\t\t\t</Button>\n\t\t\t<Button onClick={() => history.goBack()}>뒤로가기</Button>\n\t\t</RowContainer>\n\t);\n});\n\nexport default ExperimentDetail;\n","import styled from 'styled-components';\nimport { Tab, Tabs } from '@mui/material';\nimport { useHistory, useLocation } from 'react-router';\nimport { SNUBLUE, SNUGRAY } from 'lib/constant';\n\nconst TabContainer = styled(Tabs)`\n\twidth: 100vw;\n\tbox-sizing: border-box;\n\tpadding: 0px 10vw;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\t/* background-color: ${SNUBLUE}; */\n`;\n\nconst MenuItem = styled(Tab)`\n\tfont-size: 20px;\n`;\n\nconst tabs: { title: string; url: string }[] = [\n\t{ title: 'People', url: '/people' },\n\t{ title: 'Events & News', url: '/event' },\n\t{ title: 'Research & Projects', url: '/research' },\n\t{ title: '실험 참여', url: '/experiment' },\n\t{ title: 'Contact Us', url: '/contact' },\n];\n\nconst TabNavigation = () => {\n\tconst location = useLocation();\n\tconst history = useHistory();\n\n\tconst getLocation = () => {\n\t\tconst firstPath = location.pathname.split('/')[1];\n\t\tif (['people', 'event', 'research', 'experiment', 'contact'].includes(firstPath))\n\t\t\treturn `/${firstPath}`;\n\t\treturn false;\n\t};\n\n\treturn (\n\t\t<TabContainer value={getLocation()} centered variant=\"fullWidth\">\n\t\t\t{tabs.map((item) => {\n\t\t\t\treturn (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tlabel={item.title}\n\t\t\t\t\t\tvalue={item.url}\n\t\t\t\t\t\tkey={item.title}\n\t\t\t\t\t\tonClick={() => history.push(`${item.url}`)}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</TabContainer>\n\t);\n};\n\nexport default TabNavigation;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router';\nimport './App.css';\nimport Home from 'pages/Home';\nimport Login from 'pages/Login';\nimport ExperimentMain from 'pages/Experiment/ExperimentMain';\nimport Header from 'components/Header';\nimport { observer, useObserver } from 'mobx-react';\nimport { Box, Snackbar, ThemeProvider } from '@mui/material';\nimport { createTheme } from '@mui/material/styles';\nimport People from 'pages/People';\nimport EventsNews from 'pages/EventsNews';\nimport ResearchProjects from 'pages/ResearchProjects';\nimport Contact from 'pages/Contact';\nimport Footer from 'components/Footer';\nimport useStore from 'store/Index';\nimport ExperimentDetail from 'pages/Experiment/ExperimentDetail';\nimport TabNavigation from 'components/TabNavigation';\n\nconst theme = createTheme({\n\ttypography: {\n\t\tfontFamily: 'YoonGothic',\n\t},\n});\n\nconst App = observer(() => {\n\tconst { ToastStore } = useStore();\n\n\treturn useObserver(() => (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<Header />\n\t\t\t<TabNavigation />\n\t\t\t<Box sx={{ flex: 1, minHeight: '100vh' }}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t\t<Route path=\"/experiment\" exact component={ExperimentMain} />\n\t\t\t\t\t<Route path=\"/experiment/:id\" exact component={ExperimentDetail} />\n\t\t\t\t\t<Route path=\"/people\" exact component={People} />\n\t\t\t\t\t<Route path=\"/event\" exact component={EventsNews} />\n\t\t\t\t\t<Route path=\"/research\" exact component={ResearchProjects} />\n\t\t\t\t\t<Route path=\"/contact\" exact component={Contact} />\n\t\t\t\t\t<Route path=\"/login\" exact component={Login} />\n\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t</Switch>\n\t\t\t</Box>\n\t\t\t<Footer />\n\t\t\t{/* <Snackbar\n\t\t\t\tanchorOrigin={{ vertical, horizontal }}\n\t\t\t\tautoHideDuration={6000}\n\t\t\t\topen={ToastStore.isOpen}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tmessage={ToastStore.text}\n\t\t\t\tkey={ToastStore.text}\n\t\t\t\tTransitionComponent=\"SlideTransition\"\n\t\t\t/> */}\n\t\t</ThemeProvider>\n\t));\n});\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}